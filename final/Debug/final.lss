
final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002c94  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00002c94  00002d08  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001788  00000000  00000000  00002d10  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000076f  00000000  00000000  00004498  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00004c07  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00004d47  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00004eb7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00006b00  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  000079eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00008798  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  000088f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00008b85  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00009353  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e9       	ldi	r30, 0x94	; 148
      68:	fc e2       	ldi	r31, 0x2C	; 44
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <main>
      7a:	0c 94 48 16 	jmp	0x2c90	; 0x2c90 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 11 16 	jmp	0x2c22	; 0x2c22 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 2d 16 	jmp	0x2c5a	; 0x2c5a <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 1d 16 	jmp	0x2c3a	; 0x2c3a <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 39 16 	jmp	0x2c72	; 0x2c72 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 1d 16 	jmp	0x2c3a	; 0x2c3a <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 39 16 	jmp	0x2c72	; 0x2c72 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 11 16 	jmp	0x2c22	; 0x2c22 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__stack+0x2f>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__stack+0x45>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__stack+0x1d>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__stack+0x2f>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__stack+0x25>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__stack+0x2b>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__stack+0x45>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__stack+0x1b7>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__stack+0x41>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__stack+0x1b7>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__stack+0x57>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__stack+0x1b7>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__stack+0xc3>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__stack+0xb7>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__stack+0xdf>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__stack+0xf9>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__stack+0x7f>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__stack+0x13d>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__stack+0x131>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__stack+0x10f>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__stack+0x15b>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__stack+0x143>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__stack+0x19d>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__stack+0x19d>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__stack+0x19d>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__stack+0x1a7>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 2d 16 	jmp	0x2c5a	; 0x2c5a <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 1d 16 	jmp	0x2c3a	; 0x2c3a <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 39 16 	jmp	0x2c72	; 0x2c72 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 1d 16 	jmp	0x2c3a	; 0x2c3a <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 39 16 	jmp	0x2c72	; 0x2c72 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 1d 16 	jmp	0x2c3a	; 0x2c3a <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 39 16 	jmp	0x2c72	; 0x2c72 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 21 16 	jmp	0x2c42	; 0x2c42 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 3d 16 	jmp	0x2c7a	; 0x2c7a <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__pack_f+0x178>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__pack_f+0x172>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__pack_f+0x17c>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__pack_f+0x114>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__pack_f+0x76>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__pack_f+0xca>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__pack_f+0x86>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__pack_f+0x7e>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__pack_f+0x9c>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__pack_f+0x94>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__pack_f+0xbe>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__pack_f+0xee>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__pack_f+0xf6>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__pack_f+0xf6>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__pack_f+0x10e>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__pack_f+0x162>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__pack_f+0x172>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__pack_f+0x144>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__pack_f+0x154>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__pack_f+0x14c>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__pack_f+0x162>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__pack_f+0x164>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__pack_f+0x17c>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <Eta32mini_SevenSegment_Display>:

#include <avr/io.h>
#include <util/delay.h>

void Eta32mini_SevenSegment_Display(unsigned char value)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <Eta32mini_SevenSegment_Display+0x6>
     b3c:	0f 92       	push	r0
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62
     b42:	89 83       	std	Y+1, r24	; 0x01
	switch(value)
     b44:	89 81       	ldd	r24, Y+1	; 0x01
     b46:	28 2f       	mov	r18, r24
     b48:	30 e0       	ldi	r19, 0x00	; 0
     b4a:	3b 83       	std	Y+3, r19	; 0x03
     b4c:	2a 83       	std	Y+2, r18	; 0x02
     b4e:	8a 81       	ldd	r24, Y+2	; 0x02
     b50:	9b 81       	ldd	r25, Y+3	; 0x03
     b52:	84 30       	cpi	r24, 0x04	; 4
     b54:	91 05       	cpc	r25, r1
     b56:	09 f4       	brne	.+2      	; 0xb5a <Eta32mini_SevenSegment_Display+0x24>
     b58:	0f c1       	rjmp	.+542    	; 0xd78 <Eta32mini_SevenSegment_Display+0x242>
     b5a:	2a 81       	ldd	r18, Y+2	; 0x02
     b5c:	3b 81       	ldd	r19, Y+3	; 0x03
     b5e:	25 30       	cpi	r18, 0x05	; 5
     b60:	31 05       	cpc	r19, r1
     b62:	ec f4       	brge	.+58     	; 0xb9e <Eta32mini_SevenSegment_Display+0x68>
     b64:	8a 81       	ldd	r24, Y+2	; 0x02
     b66:	9b 81       	ldd	r25, Y+3	; 0x03
     b68:	81 30       	cpi	r24, 0x01	; 1
     b6a:	91 05       	cpc	r25, r1
     b6c:	09 f4       	brne	.+2      	; 0xb70 <Eta32mini_SevenSegment_Display+0x3a>
     b6e:	6e c0       	rjmp	.+220    	; 0xc4c <Eta32mini_SevenSegment_Display+0x116>
     b70:	2a 81       	ldd	r18, Y+2	; 0x02
     b72:	3b 81       	ldd	r19, Y+3	; 0x03
     b74:	22 30       	cpi	r18, 0x02	; 2
     b76:	31 05       	cpc	r19, r1
     b78:	2c f4       	brge	.+10     	; 0xb84 <Eta32mini_SevenSegment_Display+0x4e>
     b7a:	8a 81       	ldd	r24, Y+2	; 0x02
     b7c:	9b 81       	ldd	r25, Y+3	; 0x03
     b7e:	00 97       	sbiw	r24, 0x00	; 0
     b80:	99 f1       	breq	.+102    	; 0xbe8 <Eta32mini_SevenSegment_Display+0xb2>
     b82:	25 c2       	rjmp	.+1098   	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
     b84:	2a 81       	ldd	r18, Y+2	; 0x02
     b86:	3b 81       	ldd	r19, Y+3	; 0x03
     b88:	22 30       	cpi	r18, 0x02	; 2
     b8a:	31 05       	cpc	r19, r1
     b8c:	09 f4       	brne	.+2      	; 0xb90 <Eta32mini_SevenSegment_Display+0x5a>
     b8e:	90 c0       	rjmp	.+288    	; 0xcb0 <Eta32mini_SevenSegment_Display+0x17a>
     b90:	8a 81       	ldd	r24, Y+2	; 0x02
     b92:	9b 81       	ldd	r25, Y+3	; 0x03
     b94:	83 30       	cpi	r24, 0x03	; 3
     b96:	91 05       	cpc	r25, r1
     b98:	09 f4       	brne	.+2      	; 0xb9c <Eta32mini_SevenSegment_Display+0x66>
     b9a:	bc c0       	rjmp	.+376    	; 0xd14 <Eta32mini_SevenSegment_Display+0x1de>
     b9c:	18 c2       	rjmp	.+1072   	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
     b9e:	2a 81       	ldd	r18, Y+2	; 0x02
     ba0:	3b 81       	ldd	r19, Y+3	; 0x03
     ba2:	27 30       	cpi	r18, 0x07	; 7
     ba4:	31 05       	cpc	r19, r1
     ba6:	09 f4       	brne	.+2      	; 0xbaa <Eta32mini_SevenSegment_Display+0x74>
     ba8:	7d c1       	rjmp	.+762    	; 0xea4 <Eta32mini_SevenSegment_Display+0x36e>
     baa:	8a 81       	ldd	r24, Y+2	; 0x02
     bac:	9b 81       	ldd	r25, Y+3	; 0x03
     bae:	88 30       	cpi	r24, 0x08	; 8
     bb0:	91 05       	cpc	r25, r1
     bb2:	6c f4       	brge	.+26     	; 0xbce <Eta32mini_SevenSegment_Display+0x98>
     bb4:	2a 81       	ldd	r18, Y+2	; 0x02
     bb6:	3b 81       	ldd	r19, Y+3	; 0x03
     bb8:	25 30       	cpi	r18, 0x05	; 5
     bba:	31 05       	cpc	r19, r1
     bbc:	09 f4       	brne	.+2      	; 0xbc0 <Eta32mini_SevenSegment_Display+0x8a>
     bbe:	0e c1       	rjmp	.+540    	; 0xddc <Eta32mini_SevenSegment_Display+0x2a6>
     bc0:	8a 81       	ldd	r24, Y+2	; 0x02
     bc2:	9b 81       	ldd	r25, Y+3	; 0x03
     bc4:	86 30       	cpi	r24, 0x06	; 6
     bc6:	91 05       	cpc	r25, r1
     bc8:	09 f4       	brne	.+2      	; 0xbcc <Eta32mini_SevenSegment_Display+0x96>
     bca:	3a c1       	rjmp	.+628    	; 0xe40 <Eta32mini_SevenSegment_Display+0x30a>
     bcc:	00 c2       	rjmp	.+1024   	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
     bce:	2a 81       	ldd	r18, Y+2	; 0x02
     bd0:	3b 81       	ldd	r19, Y+3	; 0x03
     bd2:	28 30       	cpi	r18, 0x08	; 8
     bd4:	31 05       	cpc	r19, r1
     bd6:	09 f4       	brne	.+2      	; 0xbda <Eta32mini_SevenSegment_Display+0xa4>
     bd8:	97 c1       	rjmp	.+814    	; 0xf08 <Eta32mini_SevenSegment_Display+0x3d2>
     bda:	8a 81       	ldd	r24, Y+2	; 0x02
     bdc:	9b 81       	ldd	r25, Y+3	; 0x03
     bde:	89 30       	cpi	r24, 0x09	; 9
     be0:	91 05       	cpc	r25, r1
     be2:	09 f4       	brne	.+2      	; 0xbe6 <Eta32mini_SevenSegment_Display+0xb0>
     be4:	c3 c1       	rjmp	.+902    	; 0xf6c <Eta32mini_SevenSegment_Display+0x436>
     be6:	f3 c1       	rjmp	.+998    	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
	{
	case 0:
		PORTA |= (1<<1);
     be8:	ab e3       	ldi	r26, 0x3B	; 59
     bea:	b0 e0       	ldi	r27, 0x00	; 0
     bec:	eb e3       	ldi	r30, 0x3B	; 59
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	80 81       	ld	r24, Z
     bf2:	82 60       	ori	r24, 0x02	; 2
     bf4:	8c 93       	st	X, r24
		PORTA |= (1<<2);
     bf6:	ab e3       	ldi	r26, 0x3B	; 59
     bf8:	b0 e0       	ldi	r27, 0x00	; 0
     bfa:	eb e3       	ldi	r30, 0x3B	; 59
     bfc:	f0 e0       	ldi	r31, 0x00	; 0
     bfe:	80 81       	ld	r24, Z
     c00:	84 60       	ori	r24, 0x04	; 4
     c02:	8c 93       	st	X, r24
		PORTA |= (1<<3);
     c04:	ab e3       	ldi	r26, 0x3B	; 59
     c06:	b0 e0       	ldi	r27, 0x00	; 0
     c08:	eb e3       	ldi	r30, 0x3B	; 59
     c0a:	f0 e0       	ldi	r31, 0x00	; 0
     c0c:	80 81       	ld	r24, Z
     c0e:	88 60       	ori	r24, 0x08	; 8
     c10:	8c 93       	st	X, r24
		PORTA |= (1<<4);
     c12:	ab e3       	ldi	r26, 0x3B	; 59
     c14:	b0 e0       	ldi	r27, 0x00	; 0
     c16:	eb e3       	ldi	r30, 0x3B	; 59
     c18:	f0 e0       	ldi	r31, 0x00	; 0
     c1a:	80 81       	ld	r24, Z
     c1c:	80 61       	ori	r24, 0x10	; 16
     c1e:	8c 93       	st	X, r24
		PORTA |= (1<<5);
     c20:	ab e3       	ldi	r26, 0x3B	; 59
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	eb e3       	ldi	r30, 0x3B	; 59
     c26:	f0 e0       	ldi	r31, 0x00	; 0
     c28:	80 81       	ld	r24, Z
     c2a:	80 62       	ori	r24, 0x20	; 32
     c2c:	8c 93       	st	X, r24
		PORTA |= (1<<6);
     c2e:	ab e3       	ldi	r26, 0x3B	; 59
     c30:	b0 e0       	ldi	r27, 0x00	; 0
     c32:	eb e3       	ldi	r30, 0x3B	; 59
     c34:	f0 e0       	ldi	r31, 0x00	; 0
     c36:	80 81       	ld	r24, Z
     c38:	80 64       	ori	r24, 0x40	; 64
     c3a:	8c 93       	st	X, r24
		PORTA &= ~(1<<7);
     c3c:	ab e3       	ldi	r26, 0x3B	; 59
     c3e:	b0 e0       	ldi	r27, 0x00	; 0
     c40:	eb e3       	ldi	r30, 0x3B	; 59
     c42:	f0 e0       	ldi	r31, 0x00	; 0
     c44:	80 81       	ld	r24, Z
     c46:	8f 77       	andi	r24, 0x7F	; 127
     c48:	8c 93       	st	X, r24
     c4a:	c1 c1       	rjmp	.+898    	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
		break;
	case 1:
		PORTA &= ~(1<<1);
     c4c:	ab e3       	ldi	r26, 0x3B	; 59
     c4e:	b0 e0       	ldi	r27, 0x00	; 0
     c50:	eb e3       	ldi	r30, 0x3B	; 59
     c52:	f0 e0       	ldi	r31, 0x00	; 0
     c54:	80 81       	ld	r24, Z
     c56:	8d 7f       	andi	r24, 0xFD	; 253
     c58:	8c 93       	st	X, r24
		PORTA |= (1<<2);
     c5a:	ab e3       	ldi	r26, 0x3B	; 59
     c5c:	b0 e0       	ldi	r27, 0x00	; 0
     c5e:	eb e3       	ldi	r30, 0x3B	; 59
     c60:	f0 e0       	ldi	r31, 0x00	; 0
     c62:	80 81       	ld	r24, Z
     c64:	84 60       	ori	r24, 0x04	; 4
     c66:	8c 93       	st	X, r24
		PORTA |= (1<<3);
     c68:	ab e3       	ldi	r26, 0x3B	; 59
     c6a:	b0 e0       	ldi	r27, 0x00	; 0
     c6c:	eb e3       	ldi	r30, 0x3B	; 59
     c6e:	f0 e0       	ldi	r31, 0x00	; 0
     c70:	80 81       	ld	r24, Z
     c72:	88 60       	ori	r24, 0x08	; 8
     c74:	8c 93       	st	X, r24
		PORTA &= ~(1<<4);
     c76:	ab e3       	ldi	r26, 0x3B	; 59
     c78:	b0 e0       	ldi	r27, 0x00	; 0
     c7a:	eb e3       	ldi	r30, 0x3B	; 59
     c7c:	f0 e0       	ldi	r31, 0x00	; 0
     c7e:	80 81       	ld	r24, Z
     c80:	8f 7e       	andi	r24, 0xEF	; 239
     c82:	8c 93       	st	X, r24
		PORTA &= ~(1<<5);
     c84:	ab e3       	ldi	r26, 0x3B	; 59
     c86:	b0 e0       	ldi	r27, 0x00	; 0
     c88:	eb e3       	ldi	r30, 0x3B	; 59
     c8a:	f0 e0       	ldi	r31, 0x00	; 0
     c8c:	80 81       	ld	r24, Z
     c8e:	8f 7d       	andi	r24, 0xDF	; 223
     c90:	8c 93       	st	X, r24
		PORTA &= ~(1<<6);
     c92:	ab e3       	ldi	r26, 0x3B	; 59
     c94:	b0 e0       	ldi	r27, 0x00	; 0
     c96:	eb e3       	ldi	r30, 0x3B	; 59
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	80 81       	ld	r24, Z
     c9c:	8f 7b       	andi	r24, 0xBF	; 191
     c9e:	8c 93       	st	X, r24
		PORTA &= ~(1<<7);
     ca0:	ab e3       	ldi	r26, 0x3B	; 59
     ca2:	b0 e0       	ldi	r27, 0x00	; 0
     ca4:	eb e3       	ldi	r30, 0x3B	; 59
     ca6:	f0 e0       	ldi	r31, 0x00	; 0
     ca8:	80 81       	ld	r24, Z
     caa:	8f 77       	andi	r24, 0x7F	; 127
     cac:	8c 93       	st	X, r24
     cae:	8f c1       	rjmp	.+798    	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
		break;
	case 2:
		PORTA |= (1<<1);
     cb0:	ab e3       	ldi	r26, 0x3B	; 59
     cb2:	b0 e0       	ldi	r27, 0x00	; 0
     cb4:	eb e3       	ldi	r30, 0x3B	; 59
     cb6:	f0 e0       	ldi	r31, 0x00	; 0
     cb8:	80 81       	ld	r24, Z
     cba:	82 60       	ori	r24, 0x02	; 2
     cbc:	8c 93       	st	X, r24
		PORTA |= (1<<2);
     cbe:	ab e3       	ldi	r26, 0x3B	; 59
     cc0:	b0 e0       	ldi	r27, 0x00	; 0
     cc2:	eb e3       	ldi	r30, 0x3B	; 59
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	80 81       	ld	r24, Z
     cc8:	84 60       	ori	r24, 0x04	; 4
     cca:	8c 93       	st	X, r24
		PORTA &= ~(1<<3);
     ccc:	ab e3       	ldi	r26, 0x3B	; 59
     cce:	b0 e0       	ldi	r27, 0x00	; 0
     cd0:	eb e3       	ldi	r30, 0x3B	; 59
     cd2:	f0 e0       	ldi	r31, 0x00	; 0
     cd4:	80 81       	ld	r24, Z
     cd6:	87 7f       	andi	r24, 0xF7	; 247
     cd8:	8c 93       	st	X, r24
		PORTA |= (1<<4);
     cda:	ab e3       	ldi	r26, 0x3B	; 59
     cdc:	b0 e0       	ldi	r27, 0x00	; 0
     cde:	eb e3       	ldi	r30, 0x3B	; 59
     ce0:	f0 e0       	ldi	r31, 0x00	; 0
     ce2:	80 81       	ld	r24, Z
     ce4:	80 61       	ori	r24, 0x10	; 16
     ce6:	8c 93       	st	X, r24
		PORTA |= (1<<5);
     ce8:	ab e3       	ldi	r26, 0x3B	; 59
     cea:	b0 e0       	ldi	r27, 0x00	; 0
     cec:	eb e3       	ldi	r30, 0x3B	; 59
     cee:	f0 e0       	ldi	r31, 0x00	; 0
     cf0:	80 81       	ld	r24, Z
     cf2:	80 62       	ori	r24, 0x20	; 32
     cf4:	8c 93       	st	X, r24
		PORTA &= ~(1<<6);
     cf6:	ab e3       	ldi	r26, 0x3B	; 59
     cf8:	b0 e0       	ldi	r27, 0x00	; 0
     cfa:	eb e3       	ldi	r30, 0x3B	; 59
     cfc:	f0 e0       	ldi	r31, 0x00	; 0
     cfe:	80 81       	ld	r24, Z
     d00:	8f 7b       	andi	r24, 0xBF	; 191
     d02:	8c 93       	st	X, r24
		PORTA |= (1<<7);
     d04:	ab e3       	ldi	r26, 0x3B	; 59
     d06:	b0 e0       	ldi	r27, 0x00	; 0
     d08:	eb e3       	ldi	r30, 0x3B	; 59
     d0a:	f0 e0       	ldi	r31, 0x00	; 0
     d0c:	80 81       	ld	r24, Z
     d0e:	80 68       	ori	r24, 0x80	; 128
     d10:	8c 93       	st	X, r24
     d12:	5d c1       	rjmp	.+698    	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
		break;
	case 3:
		PORTA |= (1<<1);
     d14:	ab e3       	ldi	r26, 0x3B	; 59
     d16:	b0 e0       	ldi	r27, 0x00	; 0
     d18:	eb e3       	ldi	r30, 0x3B	; 59
     d1a:	f0 e0       	ldi	r31, 0x00	; 0
     d1c:	80 81       	ld	r24, Z
     d1e:	82 60       	ori	r24, 0x02	; 2
     d20:	8c 93       	st	X, r24
		PORTA |= (1<<2);
     d22:	ab e3       	ldi	r26, 0x3B	; 59
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	eb e3       	ldi	r30, 0x3B	; 59
     d28:	f0 e0       	ldi	r31, 0x00	; 0
     d2a:	80 81       	ld	r24, Z
     d2c:	84 60       	ori	r24, 0x04	; 4
     d2e:	8c 93       	st	X, r24
		PORTA |= (1<<3);
     d30:	ab e3       	ldi	r26, 0x3B	; 59
     d32:	b0 e0       	ldi	r27, 0x00	; 0
     d34:	eb e3       	ldi	r30, 0x3B	; 59
     d36:	f0 e0       	ldi	r31, 0x00	; 0
     d38:	80 81       	ld	r24, Z
     d3a:	88 60       	ori	r24, 0x08	; 8
     d3c:	8c 93       	st	X, r24
		PORTA |= (1<<4);
     d3e:	ab e3       	ldi	r26, 0x3B	; 59
     d40:	b0 e0       	ldi	r27, 0x00	; 0
     d42:	eb e3       	ldi	r30, 0x3B	; 59
     d44:	f0 e0       	ldi	r31, 0x00	; 0
     d46:	80 81       	ld	r24, Z
     d48:	80 61       	ori	r24, 0x10	; 16
     d4a:	8c 93       	st	X, r24
		PORTA &= ~(1<<5);
     d4c:	ab e3       	ldi	r26, 0x3B	; 59
     d4e:	b0 e0       	ldi	r27, 0x00	; 0
     d50:	eb e3       	ldi	r30, 0x3B	; 59
     d52:	f0 e0       	ldi	r31, 0x00	; 0
     d54:	80 81       	ld	r24, Z
     d56:	8f 7d       	andi	r24, 0xDF	; 223
     d58:	8c 93       	st	X, r24
		PORTA &= ~(1<<6);
     d5a:	ab e3       	ldi	r26, 0x3B	; 59
     d5c:	b0 e0       	ldi	r27, 0x00	; 0
     d5e:	eb e3       	ldi	r30, 0x3B	; 59
     d60:	f0 e0       	ldi	r31, 0x00	; 0
     d62:	80 81       	ld	r24, Z
     d64:	8f 7b       	andi	r24, 0xBF	; 191
     d66:	8c 93       	st	X, r24
		PORTA |= (1<<7);
     d68:	ab e3       	ldi	r26, 0x3B	; 59
     d6a:	b0 e0       	ldi	r27, 0x00	; 0
     d6c:	eb e3       	ldi	r30, 0x3B	; 59
     d6e:	f0 e0       	ldi	r31, 0x00	; 0
     d70:	80 81       	ld	r24, Z
     d72:	80 68       	ori	r24, 0x80	; 128
     d74:	8c 93       	st	X, r24
     d76:	2b c1       	rjmp	.+598    	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
		break;
	case 4:
		PORTA &= ~(1<<1);
     d78:	ab e3       	ldi	r26, 0x3B	; 59
     d7a:	b0 e0       	ldi	r27, 0x00	; 0
     d7c:	eb e3       	ldi	r30, 0x3B	; 59
     d7e:	f0 e0       	ldi	r31, 0x00	; 0
     d80:	80 81       	ld	r24, Z
     d82:	8d 7f       	andi	r24, 0xFD	; 253
     d84:	8c 93       	st	X, r24
		PORTA |= (1<<2);
     d86:	ab e3       	ldi	r26, 0x3B	; 59
     d88:	b0 e0       	ldi	r27, 0x00	; 0
     d8a:	eb e3       	ldi	r30, 0x3B	; 59
     d8c:	f0 e0       	ldi	r31, 0x00	; 0
     d8e:	80 81       	ld	r24, Z
     d90:	84 60       	ori	r24, 0x04	; 4
     d92:	8c 93       	st	X, r24
		PORTA |= (1<<3);
     d94:	ab e3       	ldi	r26, 0x3B	; 59
     d96:	b0 e0       	ldi	r27, 0x00	; 0
     d98:	eb e3       	ldi	r30, 0x3B	; 59
     d9a:	f0 e0       	ldi	r31, 0x00	; 0
     d9c:	80 81       	ld	r24, Z
     d9e:	88 60       	ori	r24, 0x08	; 8
     da0:	8c 93       	st	X, r24
		PORTA &= ~(1<<4);
     da2:	ab e3       	ldi	r26, 0x3B	; 59
     da4:	b0 e0       	ldi	r27, 0x00	; 0
     da6:	eb e3       	ldi	r30, 0x3B	; 59
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	80 81       	ld	r24, Z
     dac:	8f 7e       	andi	r24, 0xEF	; 239
     dae:	8c 93       	st	X, r24
		PORTA &= ~(1<<5);
     db0:	ab e3       	ldi	r26, 0x3B	; 59
     db2:	b0 e0       	ldi	r27, 0x00	; 0
     db4:	eb e3       	ldi	r30, 0x3B	; 59
     db6:	f0 e0       	ldi	r31, 0x00	; 0
     db8:	80 81       	ld	r24, Z
     dba:	8f 7d       	andi	r24, 0xDF	; 223
     dbc:	8c 93       	st	X, r24
		PORTA |= (1<<6);
     dbe:	ab e3       	ldi	r26, 0x3B	; 59
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	eb e3       	ldi	r30, 0x3B	; 59
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	80 81       	ld	r24, Z
     dc8:	80 64       	ori	r24, 0x40	; 64
     dca:	8c 93       	st	X, r24
		PORTA |= (1<<7);
     dcc:	ab e3       	ldi	r26, 0x3B	; 59
     dce:	b0 e0       	ldi	r27, 0x00	; 0
     dd0:	eb e3       	ldi	r30, 0x3B	; 59
     dd2:	f0 e0       	ldi	r31, 0x00	; 0
     dd4:	80 81       	ld	r24, Z
     dd6:	80 68       	ori	r24, 0x80	; 128
     dd8:	8c 93       	st	X, r24
     dda:	f9 c0       	rjmp	.+498    	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
		break;
	case 5:
		PORTA |= (1<<1);
     ddc:	ab e3       	ldi	r26, 0x3B	; 59
     dde:	b0 e0       	ldi	r27, 0x00	; 0
     de0:	eb e3       	ldi	r30, 0x3B	; 59
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	80 81       	ld	r24, Z
     de6:	82 60       	ori	r24, 0x02	; 2
     de8:	8c 93       	st	X, r24
		PORTA &= ~(1<<2);
     dea:	ab e3       	ldi	r26, 0x3B	; 59
     dec:	b0 e0       	ldi	r27, 0x00	; 0
     dee:	eb e3       	ldi	r30, 0x3B	; 59
     df0:	f0 e0       	ldi	r31, 0x00	; 0
     df2:	80 81       	ld	r24, Z
     df4:	8b 7f       	andi	r24, 0xFB	; 251
     df6:	8c 93       	st	X, r24
		PORTA |= (1<<3);
     df8:	ab e3       	ldi	r26, 0x3B	; 59
     dfa:	b0 e0       	ldi	r27, 0x00	; 0
     dfc:	eb e3       	ldi	r30, 0x3B	; 59
     dfe:	f0 e0       	ldi	r31, 0x00	; 0
     e00:	80 81       	ld	r24, Z
     e02:	88 60       	ori	r24, 0x08	; 8
     e04:	8c 93       	st	X, r24
		PORTA |= (1<<4);
     e06:	ab e3       	ldi	r26, 0x3B	; 59
     e08:	b0 e0       	ldi	r27, 0x00	; 0
     e0a:	eb e3       	ldi	r30, 0x3B	; 59
     e0c:	f0 e0       	ldi	r31, 0x00	; 0
     e0e:	80 81       	ld	r24, Z
     e10:	80 61       	ori	r24, 0x10	; 16
     e12:	8c 93       	st	X, r24
		PORTA &= ~(1<<5);
     e14:	ab e3       	ldi	r26, 0x3B	; 59
     e16:	b0 e0       	ldi	r27, 0x00	; 0
     e18:	eb e3       	ldi	r30, 0x3B	; 59
     e1a:	f0 e0       	ldi	r31, 0x00	; 0
     e1c:	80 81       	ld	r24, Z
     e1e:	8f 7d       	andi	r24, 0xDF	; 223
     e20:	8c 93       	st	X, r24
		PORTA |= (1<<6);
     e22:	ab e3       	ldi	r26, 0x3B	; 59
     e24:	b0 e0       	ldi	r27, 0x00	; 0
     e26:	eb e3       	ldi	r30, 0x3B	; 59
     e28:	f0 e0       	ldi	r31, 0x00	; 0
     e2a:	80 81       	ld	r24, Z
     e2c:	80 64       	ori	r24, 0x40	; 64
     e2e:	8c 93       	st	X, r24
		PORTA |= (1<<7);
     e30:	ab e3       	ldi	r26, 0x3B	; 59
     e32:	b0 e0       	ldi	r27, 0x00	; 0
     e34:	eb e3       	ldi	r30, 0x3B	; 59
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	80 81       	ld	r24, Z
     e3a:	80 68       	ori	r24, 0x80	; 128
     e3c:	8c 93       	st	X, r24
     e3e:	c7 c0       	rjmp	.+398    	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
		break;
	case 6:
		PORTA |= (1<<1);
     e40:	ab e3       	ldi	r26, 0x3B	; 59
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	eb e3       	ldi	r30, 0x3B	; 59
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	80 81       	ld	r24, Z
     e4a:	82 60       	ori	r24, 0x02	; 2
     e4c:	8c 93       	st	X, r24
		PORTA &= ~(1<<2);
     e4e:	ab e3       	ldi	r26, 0x3B	; 59
     e50:	b0 e0       	ldi	r27, 0x00	; 0
     e52:	eb e3       	ldi	r30, 0x3B	; 59
     e54:	f0 e0       	ldi	r31, 0x00	; 0
     e56:	80 81       	ld	r24, Z
     e58:	8b 7f       	andi	r24, 0xFB	; 251
     e5a:	8c 93       	st	X, r24
		PORTA |= (1<<3);
     e5c:	ab e3       	ldi	r26, 0x3B	; 59
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	eb e3       	ldi	r30, 0x3B	; 59
     e62:	f0 e0       	ldi	r31, 0x00	; 0
     e64:	80 81       	ld	r24, Z
     e66:	88 60       	ori	r24, 0x08	; 8
     e68:	8c 93       	st	X, r24
		PORTA |= (1<<4);
     e6a:	ab e3       	ldi	r26, 0x3B	; 59
     e6c:	b0 e0       	ldi	r27, 0x00	; 0
     e6e:	eb e3       	ldi	r30, 0x3B	; 59
     e70:	f0 e0       	ldi	r31, 0x00	; 0
     e72:	80 81       	ld	r24, Z
     e74:	80 61       	ori	r24, 0x10	; 16
     e76:	8c 93       	st	X, r24
		PORTA |= (1<<5);
     e78:	ab e3       	ldi	r26, 0x3B	; 59
     e7a:	b0 e0       	ldi	r27, 0x00	; 0
     e7c:	eb e3       	ldi	r30, 0x3B	; 59
     e7e:	f0 e0       	ldi	r31, 0x00	; 0
     e80:	80 81       	ld	r24, Z
     e82:	80 62       	ori	r24, 0x20	; 32
     e84:	8c 93       	st	X, r24
		PORTA |= (1<<6);
     e86:	ab e3       	ldi	r26, 0x3B	; 59
     e88:	b0 e0       	ldi	r27, 0x00	; 0
     e8a:	eb e3       	ldi	r30, 0x3B	; 59
     e8c:	f0 e0       	ldi	r31, 0x00	; 0
     e8e:	80 81       	ld	r24, Z
     e90:	80 64       	ori	r24, 0x40	; 64
     e92:	8c 93       	st	X, r24
		PORTA |= (1<<7);
     e94:	ab e3       	ldi	r26, 0x3B	; 59
     e96:	b0 e0       	ldi	r27, 0x00	; 0
     e98:	eb e3       	ldi	r30, 0x3B	; 59
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	80 81       	ld	r24, Z
     e9e:	80 68       	ori	r24, 0x80	; 128
     ea0:	8c 93       	st	X, r24
     ea2:	95 c0       	rjmp	.+298    	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
		break;
	case 7:
		PORTA |= (1<<1);
     ea4:	ab e3       	ldi	r26, 0x3B	; 59
     ea6:	b0 e0       	ldi	r27, 0x00	; 0
     ea8:	eb e3       	ldi	r30, 0x3B	; 59
     eaa:	f0 e0       	ldi	r31, 0x00	; 0
     eac:	80 81       	ld	r24, Z
     eae:	82 60       	ori	r24, 0x02	; 2
     eb0:	8c 93       	st	X, r24
		PORTA |= (1<<2);
     eb2:	ab e3       	ldi	r26, 0x3B	; 59
     eb4:	b0 e0       	ldi	r27, 0x00	; 0
     eb6:	eb e3       	ldi	r30, 0x3B	; 59
     eb8:	f0 e0       	ldi	r31, 0x00	; 0
     eba:	80 81       	ld	r24, Z
     ebc:	84 60       	ori	r24, 0x04	; 4
     ebe:	8c 93       	st	X, r24
		PORTA |= (1<<3);
     ec0:	ab e3       	ldi	r26, 0x3B	; 59
     ec2:	b0 e0       	ldi	r27, 0x00	; 0
     ec4:	eb e3       	ldi	r30, 0x3B	; 59
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	80 81       	ld	r24, Z
     eca:	88 60       	ori	r24, 0x08	; 8
     ecc:	8c 93       	st	X, r24
		PORTA &= ~(1<<4);
     ece:	ab e3       	ldi	r26, 0x3B	; 59
     ed0:	b0 e0       	ldi	r27, 0x00	; 0
     ed2:	eb e3       	ldi	r30, 0x3B	; 59
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	80 81       	ld	r24, Z
     ed8:	8f 7e       	andi	r24, 0xEF	; 239
     eda:	8c 93       	st	X, r24
		PORTA &= ~(1<<5);
     edc:	ab e3       	ldi	r26, 0x3B	; 59
     ede:	b0 e0       	ldi	r27, 0x00	; 0
     ee0:	eb e3       	ldi	r30, 0x3B	; 59
     ee2:	f0 e0       	ldi	r31, 0x00	; 0
     ee4:	80 81       	ld	r24, Z
     ee6:	8f 7d       	andi	r24, 0xDF	; 223
     ee8:	8c 93       	st	X, r24
		PORTA &= ~(1<<6);
     eea:	ab e3       	ldi	r26, 0x3B	; 59
     eec:	b0 e0       	ldi	r27, 0x00	; 0
     eee:	eb e3       	ldi	r30, 0x3B	; 59
     ef0:	f0 e0       	ldi	r31, 0x00	; 0
     ef2:	80 81       	ld	r24, Z
     ef4:	8f 7b       	andi	r24, 0xBF	; 191
     ef6:	8c 93       	st	X, r24
		PORTA &= ~(1<<7);
     ef8:	ab e3       	ldi	r26, 0x3B	; 59
     efa:	b0 e0       	ldi	r27, 0x00	; 0
     efc:	eb e3       	ldi	r30, 0x3B	; 59
     efe:	f0 e0       	ldi	r31, 0x00	; 0
     f00:	80 81       	ld	r24, Z
     f02:	8f 77       	andi	r24, 0x7F	; 127
     f04:	8c 93       	st	X, r24
     f06:	63 c0       	rjmp	.+198    	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
		break;
	case 8:
		PORTA |= (1<<1);
     f08:	ab e3       	ldi	r26, 0x3B	; 59
     f0a:	b0 e0       	ldi	r27, 0x00	; 0
     f0c:	eb e3       	ldi	r30, 0x3B	; 59
     f0e:	f0 e0       	ldi	r31, 0x00	; 0
     f10:	80 81       	ld	r24, Z
     f12:	82 60       	ori	r24, 0x02	; 2
     f14:	8c 93       	st	X, r24
		PORTA |= (1<<2);
     f16:	ab e3       	ldi	r26, 0x3B	; 59
     f18:	b0 e0       	ldi	r27, 0x00	; 0
     f1a:	eb e3       	ldi	r30, 0x3B	; 59
     f1c:	f0 e0       	ldi	r31, 0x00	; 0
     f1e:	80 81       	ld	r24, Z
     f20:	84 60       	ori	r24, 0x04	; 4
     f22:	8c 93       	st	X, r24
		PORTA |= (1<<3);
     f24:	ab e3       	ldi	r26, 0x3B	; 59
     f26:	b0 e0       	ldi	r27, 0x00	; 0
     f28:	eb e3       	ldi	r30, 0x3B	; 59
     f2a:	f0 e0       	ldi	r31, 0x00	; 0
     f2c:	80 81       	ld	r24, Z
     f2e:	88 60       	ori	r24, 0x08	; 8
     f30:	8c 93       	st	X, r24
		PORTA |= (1<<4);
     f32:	ab e3       	ldi	r26, 0x3B	; 59
     f34:	b0 e0       	ldi	r27, 0x00	; 0
     f36:	eb e3       	ldi	r30, 0x3B	; 59
     f38:	f0 e0       	ldi	r31, 0x00	; 0
     f3a:	80 81       	ld	r24, Z
     f3c:	80 61       	ori	r24, 0x10	; 16
     f3e:	8c 93       	st	X, r24
		PORTA |= (1<<5);
     f40:	ab e3       	ldi	r26, 0x3B	; 59
     f42:	b0 e0       	ldi	r27, 0x00	; 0
     f44:	eb e3       	ldi	r30, 0x3B	; 59
     f46:	f0 e0       	ldi	r31, 0x00	; 0
     f48:	80 81       	ld	r24, Z
     f4a:	80 62       	ori	r24, 0x20	; 32
     f4c:	8c 93       	st	X, r24
		PORTA |= (1<<6);
     f4e:	ab e3       	ldi	r26, 0x3B	; 59
     f50:	b0 e0       	ldi	r27, 0x00	; 0
     f52:	eb e3       	ldi	r30, 0x3B	; 59
     f54:	f0 e0       	ldi	r31, 0x00	; 0
     f56:	80 81       	ld	r24, Z
     f58:	80 64       	ori	r24, 0x40	; 64
     f5a:	8c 93       	st	X, r24
		PORTA |= (1<<7);
     f5c:	ab e3       	ldi	r26, 0x3B	; 59
     f5e:	b0 e0       	ldi	r27, 0x00	; 0
     f60:	eb e3       	ldi	r30, 0x3B	; 59
     f62:	f0 e0       	ldi	r31, 0x00	; 0
     f64:	80 81       	ld	r24, Z
     f66:	80 68       	ori	r24, 0x80	; 128
     f68:	8c 93       	st	X, r24
     f6a:	31 c0       	rjmp	.+98     	; 0xfce <Eta32mini_SevenSegment_Display+0x498>
		break;
	case 9:
		PORTA |= (1<<1);
     f6c:	ab e3       	ldi	r26, 0x3B	; 59
     f6e:	b0 e0       	ldi	r27, 0x00	; 0
     f70:	eb e3       	ldi	r30, 0x3B	; 59
     f72:	f0 e0       	ldi	r31, 0x00	; 0
     f74:	80 81       	ld	r24, Z
     f76:	82 60       	ori	r24, 0x02	; 2
     f78:	8c 93       	st	X, r24
		PORTA |= (1<<2);
     f7a:	ab e3       	ldi	r26, 0x3B	; 59
     f7c:	b0 e0       	ldi	r27, 0x00	; 0
     f7e:	eb e3       	ldi	r30, 0x3B	; 59
     f80:	f0 e0       	ldi	r31, 0x00	; 0
     f82:	80 81       	ld	r24, Z
     f84:	84 60       	ori	r24, 0x04	; 4
     f86:	8c 93       	st	X, r24
		PORTA |= (1<<3);
     f88:	ab e3       	ldi	r26, 0x3B	; 59
     f8a:	b0 e0       	ldi	r27, 0x00	; 0
     f8c:	eb e3       	ldi	r30, 0x3B	; 59
     f8e:	f0 e0       	ldi	r31, 0x00	; 0
     f90:	80 81       	ld	r24, Z
     f92:	88 60       	ori	r24, 0x08	; 8
     f94:	8c 93       	st	X, r24
		PORTA &= ~(1<<4);
     f96:	ab e3       	ldi	r26, 0x3B	; 59
     f98:	b0 e0       	ldi	r27, 0x00	; 0
     f9a:	eb e3       	ldi	r30, 0x3B	; 59
     f9c:	f0 e0       	ldi	r31, 0x00	; 0
     f9e:	80 81       	ld	r24, Z
     fa0:	8f 7e       	andi	r24, 0xEF	; 239
     fa2:	8c 93       	st	X, r24
		PORTA &= ~(1<<5);
     fa4:	ab e3       	ldi	r26, 0x3B	; 59
     fa6:	b0 e0       	ldi	r27, 0x00	; 0
     fa8:	eb e3       	ldi	r30, 0x3B	; 59
     faa:	f0 e0       	ldi	r31, 0x00	; 0
     fac:	80 81       	ld	r24, Z
     fae:	8f 7d       	andi	r24, 0xDF	; 223
     fb0:	8c 93       	st	X, r24
		PORTA |= (1<<6);
     fb2:	ab e3       	ldi	r26, 0x3B	; 59
     fb4:	b0 e0       	ldi	r27, 0x00	; 0
     fb6:	eb e3       	ldi	r30, 0x3B	; 59
     fb8:	f0 e0       	ldi	r31, 0x00	; 0
     fba:	80 81       	ld	r24, Z
     fbc:	80 64       	ori	r24, 0x40	; 64
     fbe:	8c 93       	st	X, r24
		PORTA |= (1<<7);
     fc0:	ab e3       	ldi	r26, 0x3B	; 59
     fc2:	b0 e0       	ldi	r27, 0x00	; 0
     fc4:	eb e3       	ldi	r30, 0x3B	; 59
     fc6:	f0 e0       	ldi	r31, 0x00	; 0
     fc8:	80 81       	ld	r24, Z
     fca:	80 68       	ori	r24, 0x80	; 128
     fcc:	8c 93       	st	X, r24
		break;
	}
}
     fce:	0f 90       	pop	r0
     fd0:	0f 90       	pop	r0
     fd2:	0f 90       	pop	r0
     fd4:	cf 91       	pop	r28
     fd6:	df 91       	pop	r29
     fd8:	08 95       	ret

00000fda <LED_BINARY>:




void LED_BINARY(unsigned char BIN)
{
     fda:	df 93       	push	r29
     fdc:	cf 93       	push	r28
     fde:	00 d0       	rcall	.+0      	; 0xfe0 <LED_BINARY+0x6>
     fe0:	0f 92       	push	r0
     fe2:	cd b7       	in	r28, 0x3d	; 61
     fe4:	de b7       	in	r29, 0x3e	; 62
     fe6:	89 83       	std	Y+1, r24	; 0x01
	switch(BIN)
     fe8:	89 81       	ldd	r24, Y+1	; 0x01
     fea:	28 2f       	mov	r18, r24
     fec:	30 e0       	ldi	r19, 0x00	; 0
     fee:	3b 83       	std	Y+3, r19	; 0x03
     ff0:	2a 83       	std	Y+2, r18	; 0x02
     ff2:	8a 81       	ldd	r24, Y+2	; 0x02
     ff4:	9b 81       	ldd	r25, Y+3	; 0x03
     ff6:	83 30       	cpi	r24, 0x03	; 3
     ff8:	91 05       	cpc	r25, r1
     ffa:	09 f4       	brne	.+2      	; 0xffe <LED_BINARY+0x24>
     ffc:	70 c0       	rjmp	.+224    	; 0x10de <LED_BINARY+0x104>
     ffe:	2a 81       	ldd	r18, Y+2	; 0x02
    1000:	3b 81       	ldd	r19, Y+3	; 0x03
    1002:	24 30       	cpi	r18, 0x04	; 4
    1004:	31 05       	cpc	r19, r1
    1006:	84 f4       	brge	.+32     	; 0x1028 <LED_BINARY+0x4e>
    1008:	8a 81       	ldd	r24, Y+2	; 0x02
    100a:	9b 81       	ldd	r25, Y+3	; 0x03
    100c:	81 30       	cpi	r24, 0x01	; 1
    100e:	91 05       	cpc	r25, r1
    1010:	d1 f1       	breq	.+116    	; 0x1086 <LED_BINARY+0xac>
    1012:	2a 81       	ldd	r18, Y+2	; 0x02
    1014:	3b 81       	ldd	r19, Y+3	; 0x03
    1016:	22 30       	cpi	r18, 0x02	; 2
    1018:	31 05       	cpc	r19, r1
    101a:	0c f0       	brlt	.+2      	; 0x101e <LED_BINARY+0x44>
    101c:	4a c0       	rjmp	.+148    	; 0x10b2 <LED_BINARY+0xd8>
    101e:	8a 81       	ldd	r24, Y+2	; 0x02
    1020:	9b 81       	ldd	r25, Y+3	; 0x03
    1022:	00 97       	sbiw	r24, 0x00	; 0
    1024:	d1 f0       	breq	.+52     	; 0x105a <LED_BINARY+0x80>
    1026:	c8 c0       	rjmp	.+400    	; 0x11b8 <LED_BINARY+0x1de>
    1028:	2a 81       	ldd	r18, Y+2	; 0x02
    102a:	3b 81       	ldd	r19, Y+3	; 0x03
    102c:	25 30       	cpi	r18, 0x05	; 5
    102e:	31 05       	cpc	r19, r1
    1030:	09 f4       	brne	.+2      	; 0x1034 <LED_BINARY+0x5a>
    1032:	81 c0       	rjmp	.+258    	; 0x1136 <LED_BINARY+0x15c>
    1034:	8a 81       	ldd	r24, Y+2	; 0x02
    1036:	9b 81       	ldd	r25, Y+3	; 0x03
    1038:	85 30       	cpi	r24, 0x05	; 5
    103a:	91 05       	cpc	r25, r1
    103c:	0c f4       	brge	.+2      	; 0x1040 <LED_BINARY+0x66>
    103e:	65 c0       	rjmp	.+202    	; 0x110a <LED_BINARY+0x130>
    1040:	2a 81       	ldd	r18, Y+2	; 0x02
    1042:	3b 81       	ldd	r19, Y+3	; 0x03
    1044:	26 30       	cpi	r18, 0x06	; 6
    1046:	31 05       	cpc	r19, r1
    1048:	09 f4       	brne	.+2      	; 0x104c <LED_BINARY+0x72>
    104a:	8b c0       	rjmp	.+278    	; 0x1162 <LED_BINARY+0x188>
    104c:	8a 81       	ldd	r24, Y+2	; 0x02
    104e:	9b 81       	ldd	r25, Y+3	; 0x03
    1050:	87 30       	cpi	r24, 0x07	; 7
    1052:	91 05       	cpc	r25, r1
    1054:	09 f4       	brne	.+2      	; 0x1058 <LED_BINARY+0x7e>
    1056:	9b c0       	rjmp	.+310    	; 0x118e <LED_BINARY+0x1b4>
    1058:	af c0       	rjmp	.+350    	; 0x11b8 <LED_BINARY+0x1de>
	{
	case 0:
		PORTC &= ~ (1<<0);
    105a:	a5 e3       	ldi	r26, 0x35	; 53
    105c:	b0 e0       	ldi	r27, 0x00	; 0
    105e:	e5 e3       	ldi	r30, 0x35	; 53
    1060:	f0 e0       	ldi	r31, 0x00	; 0
    1062:	80 81       	ld	r24, Z
    1064:	8e 7f       	andi	r24, 0xFE	; 254
    1066:	8c 93       	st	X, r24
		PORTC &= ~ (1<<1);
    1068:	a5 e3       	ldi	r26, 0x35	; 53
    106a:	b0 e0       	ldi	r27, 0x00	; 0
    106c:	e5 e3       	ldi	r30, 0x35	; 53
    106e:	f0 e0       	ldi	r31, 0x00	; 0
    1070:	80 81       	ld	r24, Z
    1072:	8d 7f       	andi	r24, 0xFD	; 253
    1074:	8c 93       	st	X, r24
		PORTC &= ~ (1<<2);
    1076:	a5 e3       	ldi	r26, 0x35	; 53
    1078:	b0 e0       	ldi	r27, 0x00	; 0
    107a:	e5 e3       	ldi	r30, 0x35	; 53
    107c:	f0 e0       	ldi	r31, 0x00	; 0
    107e:	80 81       	ld	r24, Z
    1080:	8b 7f       	andi	r24, 0xFB	; 251
    1082:	8c 93       	st	X, r24
    1084:	99 c0       	rjmp	.+306    	; 0x11b8 <LED_BINARY+0x1de>
		break;
	case 1:
		PORTC |= (1<<0);
    1086:	a5 e3       	ldi	r26, 0x35	; 53
    1088:	b0 e0       	ldi	r27, 0x00	; 0
    108a:	e5 e3       	ldi	r30, 0x35	; 53
    108c:	f0 e0       	ldi	r31, 0x00	; 0
    108e:	80 81       	ld	r24, Z
    1090:	81 60       	ori	r24, 0x01	; 1
    1092:	8c 93       	st	X, r24
		PORTC &= ~ (1<<1);
    1094:	a5 e3       	ldi	r26, 0x35	; 53
    1096:	b0 e0       	ldi	r27, 0x00	; 0
    1098:	e5 e3       	ldi	r30, 0x35	; 53
    109a:	f0 e0       	ldi	r31, 0x00	; 0
    109c:	80 81       	ld	r24, Z
    109e:	8d 7f       	andi	r24, 0xFD	; 253
    10a0:	8c 93       	st	X, r24
		PORTC &= ~ (1<<2);
    10a2:	a5 e3       	ldi	r26, 0x35	; 53
    10a4:	b0 e0       	ldi	r27, 0x00	; 0
    10a6:	e5 e3       	ldi	r30, 0x35	; 53
    10a8:	f0 e0       	ldi	r31, 0x00	; 0
    10aa:	80 81       	ld	r24, Z
    10ac:	8b 7f       	andi	r24, 0xFB	; 251
    10ae:	8c 93       	st	X, r24
    10b0:	83 c0       	rjmp	.+262    	; 0x11b8 <LED_BINARY+0x1de>
		break;
	case 2:
		PORTC &= ~ (1<<0);
    10b2:	a5 e3       	ldi	r26, 0x35	; 53
    10b4:	b0 e0       	ldi	r27, 0x00	; 0
    10b6:	e5 e3       	ldi	r30, 0x35	; 53
    10b8:	f0 e0       	ldi	r31, 0x00	; 0
    10ba:	80 81       	ld	r24, Z
    10bc:	8e 7f       	andi	r24, 0xFE	; 254
    10be:	8c 93       	st	X, r24
		PORTC |= (1<<1);
    10c0:	a5 e3       	ldi	r26, 0x35	; 53
    10c2:	b0 e0       	ldi	r27, 0x00	; 0
    10c4:	e5 e3       	ldi	r30, 0x35	; 53
    10c6:	f0 e0       	ldi	r31, 0x00	; 0
    10c8:	80 81       	ld	r24, Z
    10ca:	82 60       	ori	r24, 0x02	; 2
    10cc:	8c 93       	st	X, r24
		PORTC &= ~(1<<2);
    10ce:	a5 e3       	ldi	r26, 0x35	; 53
    10d0:	b0 e0       	ldi	r27, 0x00	; 0
    10d2:	e5 e3       	ldi	r30, 0x35	; 53
    10d4:	f0 e0       	ldi	r31, 0x00	; 0
    10d6:	80 81       	ld	r24, Z
    10d8:	8b 7f       	andi	r24, 0xFB	; 251
    10da:	8c 93       	st	X, r24
    10dc:	6d c0       	rjmp	.+218    	; 0x11b8 <LED_BINARY+0x1de>
		break;
	case 3:
		PORTC |= (1<<0);
    10de:	a5 e3       	ldi	r26, 0x35	; 53
    10e0:	b0 e0       	ldi	r27, 0x00	; 0
    10e2:	e5 e3       	ldi	r30, 0x35	; 53
    10e4:	f0 e0       	ldi	r31, 0x00	; 0
    10e6:	80 81       	ld	r24, Z
    10e8:	81 60       	ori	r24, 0x01	; 1
    10ea:	8c 93       	st	X, r24
		PORTC |= (1<<1);
    10ec:	a5 e3       	ldi	r26, 0x35	; 53
    10ee:	b0 e0       	ldi	r27, 0x00	; 0
    10f0:	e5 e3       	ldi	r30, 0x35	; 53
    10f2:	f0 e0       	ldi	r31, 0x00	; 0
    10f4:	80 81       	ld	r24, Z
    10f6:	82 60       	ori	r24, 0x02	; 2
    10f8:	8c 93       	st	X, r24
		PORTC &= ~(1<<2);
    10fa:	a5 e3       	ldi	r26, 0x35	; 53
    10fc:	b0 e0       	ldi	r27, 0x00	; 0
    10fe:	e5 e3       	ldi	r30, 0x35	; 53
    1100:	f0 e0       	ldi	r31, 0x00	; 0
    1102:	80 81       	ld	r24, Z
    1104:	8b 7f       	andi	r24, 0xFB	; 251
    1106:	8c 93       	st	X, r24
    1108:	57 c0       	rjmp	.+174    	; 0x11b8 <LED_BINARY+0x1de>
		break;
	case 4:
		PORTC &= ~ (1<<0);
    110a:	a5 e3       	ldi	r26, 0x35	; 53
    110c:	b0 e0       	ldi	r27, 0x00	; 0
    110e:	e5 e3       	ldi	r30, 0x35	; 53
    1110:	f0 e0       	ldi	r31, 0x00	; 0
    1112:	80 81       	ld	r24, Z
    1114:	8e 7f       	andi	r24, 0xFE	; 254
    1116:	8c 93       	st	X, r24
		PORTC &= ~ (1<<1);
    1118:	a5 e3       	ldi	r26, 0x35	; 53
    111a:	b0 e0       	ldi	r27, 0x00	; 0
    111c:	e5 e3       	ldi	r30, 0x35	; 53
    111e:	f0 e0       	ldi	r31, 0x00	; 0
    1120:	80 81       	ld	r24, Z
    1122:	8d 7f       	andi	r24, 0xFD	; 253
    1124:	8c 93       	st	X, r24
		PORTC |= (1<<2);
    1126:	a5 e3       	ldi	r26, 0x35	; 53
    1128:	b0 e0       	ldi	r27, 0x00	; 0
    112a:	e5 e3       	ldi	r30, 0x35	; 53
    112c:	f0 e0       	ldi	r31, 0x00	; 0
    112e:	80 81       	ld	r24, Z
    1130:	84 60       	ori	r24, 0x04	; 4
    1132:	8c 93       	st	X, r24
    1134:	41 c0       	rjmp	.+130    	; 0x11b8 <LED_BINARY+0x1de>
		break;
	case 5:
		PORTC |= (1<<0);
    1136:	a5 e3       	ldi	r26, 0x35	; 53
    1138:	b0 e0       	ldi	r27, 0x00	; 0
    113a:	e5 e3       	ldi	r30, 0x35	; 53
    113c:	f0 e0       	ldi	r31, 0x00	; 0
    113e:	80 81       	ld	r24, Z
    1140:	81 60       	ori	r24, 0x01	; 1
    1142:	8c 93       	st	X, r24
		PORTC &= ~ (1<<1);
    1144:	a5 e3       	ldi	r26, 0x35	; 53
    1146:	b0 e0       	ldi	r27, 0x00	; 0
    1148:	e5 e3       	ldi	r30, 0x35	; 53
    114a:	f0 e0       	ldi	r31, 0x00	; 0
    114c:	80 81       	ld	r24, Z
    114e:	8d 7f       	andi	r24, 0xFD	; 253
    1150:	8c 93       	st	X, r24
		PORTC |=(1<<2);
    1152:	a5 e3       	ldi	r26, 0x35	; 53
    1154:	b0 e0       	ldi	r27, 0x00	; 0
    1156:	e5 e3       	ldi	r30, 0x35	; 53
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	80 81       	ld	r24, Z
    115c:	84 60       	ori	r24, 0x04	; 4
    115e:	8c 93       	st	X, r24
    1160:	2b c0       	rjmp	.+86     	; 0x11b8 <LED_BINARY+0x1de>
		break;
	case 6:
		PORTC &= ~ (1<<0);
    1162:	a5 e3       	ldi	r26, 0x35	; 53
    1164:	b0 e0       	ldi	r27, 0x00	; 0
    1166:	e5 e3       	ldi	r30, 0x35	; 53
    1168:	f0 e0       	ldi	r31, 0x00	; 0
    116a:	80 81       	ld	r24, Z
    116c:	8e 7f       	andi	r24, 0xFE	; 254
    116e:	8c 93       	st	X, r24
		PORTC |= (1<<1);
    1170:	a5 e3       	ldi	r26, 0x35	; 53
    1172:	b0 e0       	ldi	r27, 0x00	; 0
    1174:	e5 e3       	ldi	r30, 0x35	; 53
    1176:	f0 e0       	ldi	r31, 0x00	; 0
    1178:	80 81       	ld	r24, Z
    117a:	82 60       	ori	r24, 0x02	; 2
    117c:	8c 93       	st	X, r24
		PORTC |=(1<<2);
    117e:	a5 e3       	ldi	r26, 0x35	; 53
    1180:	b0 e0       	ldi	r27, 0x00	; 0
    1182:	e5 e3       	ldi	r30, 0x35	; 53
    1184:	f0 e0       	ldi	r31, 0x00	; 0
    1186:	80 81       	ld	r24, Z
    1188:	84 60       	ori	r24, 0x04	; 4
    118a:	8c 93       	st	X, r24
    118c:	15 c0       	rjmp	.+42     	; 0x11b8 <LED_BINARY+0x1de>
		break;
	case 7:
		PORTC |= (1<<0);
    118e:	a5 e3       	ldi	r26, 0x35	; 53
    1190:	b0 e0       	ldi	r27, 0x00	; 0
    1192:	e5 e3       	ldi	r30, 0x35	; 53
    1194:	f0 e0       	ldi	r31, 0x00	; 0
    1196:	80 81       	ld	r24, Z
    1198:	81 60       	ori	r24, 0x01	; 1
    119a:	8c 93       	st	X, r24
	    PORTC |= (1<<1);
    119c:	a5 e3       	ldi	r26, 0x35	; 53
    119e:	b0 e0       	ldi	r27, 0x00	; 0
    11a0:	e5 e3       	ldi	r30, 0x35	; 53
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	80 81       	ld	r24, Z
    11a6:	82 60       	ori	r24, 0x02	; 2
    11a8:	8c 93       	st	X, r24
	    PORTC |=(1<<2);
    11aa:	a5 e3       	ldi	r26, 0x35	; 53
    11ac:	b0 e0       	ldi	r27, 0x00	; 0
    11ae:	e5 e3       	ldi	r30, 0x35	; 53
    11b0:	f0 e0       	ldi	r31, 0x00	; 0
    11b2:	80 81       	ld	r24, Z
    11b4:	84 60       	ori	r24, 0x04	; 4
    11b6:	8c 93       	st	X, r24
		break;

	}
}
    11b8:	0f 90       	pop	r0
    11ba:	0f 90       	pop	r0
    11bc:	0f 90       	pop	r0
    11be:	cf 91       	pop	r28
    11c0:	df 91       	pop	r29
    11c2:	08 95       	ret

000011c4 <main>:




int main(void)
{
    11c4:	0f 93       	push	r16
    11c6:	1f 93       	push	r17
    11c8:	df 93       	push	r29
    11ca:	cf 93       	push	r28
    11cc:	cd b7       	in	r28, 0x3d	; 61
    11ce:	de b7       	in	r29, 0x3e	; 62
    11d0:	c0 50       	subi	r28, 0x00	; 0
    11d2:	d1 40       	sbci	r29, 0x01	; 1
    11d4:	0f b6       	in	r0, 0x3f	; 63
    11d6:	f8 94       	cli
    11d8:	de bf       	out	0x3e, r29	; 62
    11da:	0f be       	out	0x3f, r0	; 63
    11dc:	cd bf       	out	0x3d, r28	; 61
	unsigned char count = 0;
    11de:	fe 01       	movw	r30, r28
    11e0:	e0 50       	subi	r30, 0x00	; 0
    11e2:	ff 4f       	sbci	r31, 0xFF	; 255
    11e4:	10 82       	st	Z, r1
	unsigned char enable = 1;
    11e6:	fe 01       	movw	r30, r28
    11e8:	e1 50       	subi	r30, 0x01	; 1
    11ea:	ff 4f       	sbci	r31, 0xFF	; 255
    11ec:	81 e0       	ldi	r24, 0x01	; 1
    11ee:	80 83       	st	Z, r24

	DDRD  &= ~(1<<2) & ~(1<<3) & ~(1<<4) & ~(1<<5) ;     //push buttons
    11f0:	a1 e3       	ldi	r26, 0x31	; 49
    11f2:	b0 e0       	ldi	r27, 0x00	; 0
    11f4:	e1 e3       	ldi	r30, 0x31	; 49
    11f6:	f0 e0       	ldi	r31, 0x00	; 0
    11f8:	80 81       	ld	r24, Z
    11fa:	83 7c       	andi	r24, 0xC3	; 195
    11fc:	8c 93       	st	X, r24
	DDRC  |= (1<<5);   //buzzer
    11fe:	a4 e3       	ldi	r26, 0x34	; 52
    1200:	b0 e0       	ldi	r27, 0x00	; 0
    1202:	e4 e3       	ldi	r30, 0x34	; 52
    1204:	f0 e0       	ldi	r31, 0x00	; 0
    1206:	80 81       	ld	r24, Z
    1208:	80 62       	ori	r24, 0x20	; 32
    120a:	8c 93       	st	X, r24
	DDRC  |= (1<<0);  //led
    120c:	a4 e3       	ldi	r26, 0x34	; 52
    120e:	b0 e0       	ldi	r27, 0x00	; 0
    1210:	e4 e3       	ldi	r30, 0x34	; 52
    1212:	f0 e0       	ldi	r31, 0x00	; 0
    1214:	80 81       	ld	r24, Z
    1216:	81 60       	ori	r24, 0x01	; 1
    1218:	8c 93       	st	X, r24
	DDRC  |= (1<<1);  //led
    121a:	a4 e3       	ldi	r26, 0x34	; 52
    121c:	b0 e0       	ldi	r27, 0x00	; 0
    121e:	e4 e3       	ldi	r30, 0x34	; 52
    1220:	f0 e0       	ldi	r31, 0x00	; 0
    1222:	80 81       	ld	r24, Z
    1224:	82 60       	ori	r24, 0x02	; 2
    1226:	8c 93       	st	X, r24
	DDRC  |= (1<<2);  //led
    1228:	a4 e3       	ldi	r26, 0x34	; 52
    122a:	b0 e0       	ldi	r27, 0x00	; 0
    122c:	e4 e3       	ldi	r30, 0x34	; 52
    122e:	f0 e0       	ldi	r31, 0x00	; 0
    1230:	80 81       	ld	r24, Z
    1232:	84 60       	ori	r24, 0x04	; 4
    1234:	8c 93       	st	X, r24
    DDRC  |= (1<<6);
    1236:	a4 e3       	ldi	r26, 0x34	; 52
    1238:	b0 e0       	ldi	r27, 0x00	; 0
    123a:	e4 e3       	ldi	r30, 0x34	; 52
    123c:	f0 e0       	ldi	r31, 0x00	; 0
    123e:	80 81       	ld	r24, Z
    1240:	80 64       	ori	r24, 0x40	; 64
    1242:	8c 93       	st	X, r24
	PORTC |= (1<<6);//7-segment control
    1244:	a5 e3       	ldi	r26, 0x35	; 53
    1246:	b0 e0       	ldi	r27, 0x00	; 0
    1248:	e5 e3       	ldi	r30, 0x35	; 53
    124a:	f0 e0       	ldi	r31, 0x00	; 0
    124c:	80 81       	ld	r24, Z
    124e:	80 64       	ori	r24, 0x40	; 64
    1250:	8c 93       	st	X, r24

	DDRA  |= 0xFE;// 7-segment leds from PA1 --> PA7
    1252:	aa e3       	ldi	r26, 0x3A	; 58
    1254:	b0 e0       	ldi	r27, 0x00	; 0
    1256:	ea e3       	ldi	r30, 0x3A	; 58
    1258:	f0 e0       	ldi	r31, 0x00	; 0
    125a:	80 81       	ld	r24, Z
    125c:	8e 6f       	ori	r24, 0xFE	; 254
    125e:	8c 93       	st	X, r24

	Eta32mini_SevenSegment_Display(count); // Display ZERO value on the 7-segment at the beginning
    1260:	fe 01       	movw	r30, r28
    1262:	e0 50       	subi	r30, 0x00	; 0
    1264:	ff 4f       	sbci	r31, 0xFF	; 255
    1266:	80 81       	ld	r24, Z
    1268:	0e 94 9b 05 	call	0xb36	; 0xb36 <Eta32mini_SevenSegment_Display>

	while(1)
	{
		if( !(PIND & (1<<PD2)) ) // increment
    126c:	e0 e3       	ldi	r30, 0x30	; 48
    126e:	f0 e0       	ldi	r31, 0x00	; 0
    1270:	80 81       	ld	r24, Z
    1272:	88 2f       	mov	r24, r24
    1274:	90 e0       	ldi	r25, 0x00	; 0
    1276:	84 70       	andi	r24, 0x04	; 4
    1278:	90 70       	andi	r25, 0x00	; 0
    127a:	00 97       	sbiw	r24, 0x00	; 0
    127c:	09 f0       	breq	.+2      	; 0x1280 <main+0xbc>
    127e:	4f c5       	rjmp	.+2718   	; 0x1d1e <main+0xb5a>
    1280:	fe 01       	movw	r30, r28
    1282:	e7 50       	subi	r30, 0x07	; 7
    1284:	ff 4f       	sbci	r31, 0xFF	; 255
    1286:	80 e0       	ldi	r24, 0x00	; 0
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	a0 ef       	ldi	r26, 0xF0	; 240
    128c:	b1 e4       	ldi	r27, 0x41	; 65
    128e:	80 83       	st	Z, r24
    1290:	91 83       	std	Z+1, r25	; 0x01
    1292:	a2 83       	std	Z+2, r26	; 0x02
    1294:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1296:	8e 01       	movw	r16, r28
    1298:	0b 50       	subi	r16, 0x0B	; 11
    129a:	1f 4f       	sbci	r17, 0xFF	; 255
    129c:	fe 01       	movw	r30, r28
    129e:	e7 50       	subi	r30, 0x07	; 7
    12a0:	ff 4f       	sbci	r31, 0xFF	; 255
    12a2:	60 81       	ld	r22, Z
    12a4:	71 81       	ldd	r23, Z+1	; 0x01
    12a6:	82 81       	ldd	r24, Z+2	; 0x02
    12a8:	93 81       	ldd	r25, Z+3	; 0x03
    12aa:	20 e0       	ldi	r18, 0x00	; 0
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	4a e7       	ldi	r20, 0x7A	; 122
    12b0:	53 e4       	ldi	r21, 0x43	; 67
    12b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12b6:	dc 01       	movw	r26, r24
    12b8:	cb 01       	movw	r24, r22
    12ba:	f8 01       	movw	r30, r16
    12bc:	80 83       	st	Z, r24
    12be:	91 83       	std	Z+1, r25	; 0x01
    12c0:	a2 83       	std	Z+2, r26	; 0x02
    12c2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12c4:	fe 01       	movw	r30, r28
    12c6:	eb 50       	subi	r30, 0x0B	; 11
    12c8:	ff 4f       	sbci	r31, 0xFF	; 255
    12ca:	60 81       	ld	r22, Z
    12cc:	71 81       	ldd	r23, Z+1	; 0x01
    12ce:	82 81       	ldd	r24, Z+2	; 0x02
    12d0:	93 81       	ldd	r25, Z+3	; 0x03
    12d2:	20 e0       	ldi	r18, 0x00	; 0
    12d4:	30 e0       	ldi	r19, 0x00	; 0
    12d6:	40 e8       	ldi	r20, 0x80	; 128
    12d8:	5f e3       	ldi	r21, 0x3F	; 63
    12da:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    12de:	88 23       	and	r24, r24
    12e0:	44 f4       	brge	.+16     	; 0x12f2 <main+0x12e>
		__ticks = 1;
    12e2:	fe 01       	movw	r30, r28
    12e4:	ed 50       	subi	r30, 0x0D	; 13
    12e6:	ff 4f       	sbci	r31, 0xFF	; 255
    12e8:	81 e0       	ldi	r24, 0x01	; 1
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	91 83       	std	Z+1, r25	; 0x01
    12ee:	80 83       	st	Z, r24
    12f0:	64 c0       	rjmp	.+200    	; 0x13ba <main+0x1f6>
	else if (__tmp > 65535)
    12f2:	fe 01       	movw	r30, r28
    12f4:	eb 50       	subi	r30, 0x0B	; 11
    12f6:	ff 4f       	sbci	r31, 0xFF	; 255
    12f8:	60 81       	ld	r22, Z
    12fa:	71 81       	ldd	r23, Z+1	; 0x01
    12fc:	82 81       	ldd	r24, Z+2	; 0x02
    12fe:	93 81       	ldd	r25, Z+3	; 0x03
    1300:	20 e0       	ldi	r18, 0x00	; 0
    1302:	3f ef       	ldi	r19, 0xFF	; 255
    1304:	4f e7       	ldi	r20, 0x7F	; 127
    1306:	57 e4       	ldi	r21, 0x47	; 71
    1308:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    130c:	18 16       	cp	r1, r24
    130e:	0c f0       	brlt	.+2      	; 0x1312 <main+0x14e>
    1310:	43 c0       	rjmp	.+134    	; 0x1398 <main+0x1d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1312:	fe 01       	movw	r30, r28
    1314:	e7 50       	subi	r30, 0x07	; 7
    1316:	ff 4f       	sbci	r31, 0xFF	; 255
    1318:	60 81       	ld	r22, Z
    131a:	71 81       	ldd	r23, Z+1	; 0x01
    131c:	82 81       	ldd	r24, Z+2	; 0x02
    131e:	93 81       	ldd	r25, Z+3	; 0x03
    1320:	20 e0       	ldi	r18, 0x00	; 0
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	40 e2       	ldi	r20, 0x20	; 32
    1326:	51 e4       	ldi	r21, 0x41	; 65
    1328:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    132c:	dc 01       	movw	r26, r24
    132e:	cb 01       	movw	r24, r22
    1330:	8e 01       	movw	r16, r28
    1332:	0d 50       	subi	r16, 0x0D	; 13
    1334:	1f 4f       	sbci	r17, 0xFF	; 255
    1336:	bc 01       	movw	r22, r24
    1338:	cd 01       	movw	r24, r26
    133a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    133e:	dc 01       	movw	r26, r24
    1340:	cb 01       	movw	r24, r22
    1342:	f8 01       	movw	r30, r16
    1344:	91 83       	std	Z+1, r25	; 0x01
    1346:	80 83       	st	Z, r24
    1348:	1f c0       	rjmp	.+62     	; 0x1388 <main+0x1c4>
    134a:	fe 01       	movw	r30, r28
    134c:	ef 50       	subi	r30, 0x0F	; 15
    134e:	ff 4f       	sbci	r31, 0xFF	; 255
    1350:	89 e1       	ldi	r24, 0x19	; 25
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	91 83       	std	Z+1, r25	; 0x01
    1356:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1358:	fe 01       	movw	r30, r28
    135a:	ef 50       	subi	r30, 0x0F	; 15
    135c:	ff 4f       	sbci	r31, 0xFF	; 255
    135e:	80 81       	ld	r24, Z
    1360:	91 81       	ldd	r25, Z+1	; 0x01
    1362:	01 97       	sbiw	r24, 0x01	; 1
    1364:	f1 f7       	brne	.-4      	; 0x1362 <main+0x19e>
    1366:	fe 01       	movw	r30, r28
    1368:	ef 50       	subi	r30, 0x0F	; 15
    136a:	ff 4f       	sbci	r31, 0xFF	; 255
    136c:	91 83       	std	Z+1, r25	; 0x01
    136e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1370:	de 01       	movw	r26, r28
    1372:	ad 50       	subi	r26, 0x0D	; 13
    1374:	bf 4f       	sbci	r27, 0xFF	; 255
    1376:	fe 01       	movw	r30, r28
    1378:	ed 50       	subi	r30, 0x0D	; 13
    137a:	ff 4f       	sbci	r31, 0xFF	; 255
    137c:	80 81       	ld	r24, Z
    137e:	91 81       	ldd	r25, Z+1	; 0x01
    1380:	01 97       	sbiw	r24, 0x01	; 1
    1382:	11 96       	adiw	r26, 0x01	; 1
    1384:	9c 93       	st	X, r25
    1386:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1388:	fe 01       	movw	r30, r28
    138a:	ed 50       	subi	r30, 0x0D	; 13
    138c:	ff 4f       	sbci	r31, 0xFF	; 255
    138e:	80 81       	ld	r24, Z
    1390:	91 81       	ldd	r25, Z+1	; 0x01
    1392:	00 97       	sbiw	r24, 0x00	; 0
    1394:	d1 f6       	brne	.-76     	; 0x134a <main+0x186>
    1396:	28 c0       	rjmp	.+80     	; 0x13e8 <main+0x224>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1398:	8e 01       	movw	r16, r28
    139a:	0d 50       	subi	r16, 0x0D	; 13
    139c:	1f 4f       	sbci	r17, 0xFF	; 255
    139e:	fe 01       	movw	r30, r28
    13a0:	eb 50       	subi	r30, 0x0B	; 11
    13a2:	ff 4f       	sbci	r31, 0xFF	; 255
    13a4:	60 81       	ld	r22, Z
    13a6:	71 81       	ldd	r23, Z+1	; 0x01
    13a8:	82 81       	ldd	r24, Z+2	; 0x02
    13aa:	93 81       	ldd	r25, Z+3	; 0x03
    13ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13b0:	dc 01       	movw	r26, r24
    13b2:	cb 01       	movw	r24, r22
    13b4:	f8 01       	movw	r30, r16
    13b6:	91 83       	std	Z+1, r25	; 0x01
    13b8:	80 83       	st	Z, r24
    13ba:	de 01       	movw	r26, r28
    13bc:	a1 51       	subi	r26, 0x11	; 17
    13be:	bf 4f       	sbci	r27, 0xFF	; 255
    13c0:	fe 01       	movw	r30, r28
    13c2:	ed 50       	subi	r30, 0x0D	; 13
    13c4:	ff 4f       	sbci	r31, 0xFF	; 255
    13c6:	80 81       	ld	r24, Z
    13c8:	91 81       	ldd	r25, Z+1	; 0x01
    13ca:	11 96       	adiw	r26, 0x01	; 1
    13cc:	9c 93       	st	X, r25
    13ce:	8e 93       	st	-X, r24
    13d0:	fe 01       	movw	r30, r28
    13d2:	e1 51       	subi	r30, 0x11	; 17
    13d4:	ff 4f       	sbci	r31, 0xFF	; 255
    13d6:	80 81       	ld	r24, Z
    13d8:	91 81       	ldd	r25, Z+1	; 0x01
    13da:	01 97       	sbiw	r24, 0x01	; 1
    13dc:	f1 f7       	brne	.-4      	; 0x13da <main+0x216>
    13de:	fe 01       	movw	r30, r28
    13e0:	e1 51       	subi	r30, 0x11	; 17
    13e2:	ff 4f       	sbci	r31, 0xFF	; 255
    13e4:	91 83       	std	Z+1, r25	; 0x01
    13e6:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if( !(PIND & (1<<PD2)) ) //second check due to switch bouncing
    13e8:	e0 e3       	ldi	r30, 0x30	; 48
    13ea:	f0 e0       	ldi	r31, 0x00	; 0
    13ec:	80 81       	ld	r24, Z
    13ee:	88 2f       	mov	r24, r24
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	84 70       	andi	r24, 0x04	; 4
    13f4:	90 70       	andi	r25, 0x00	; 0
    13f6:	00 97       	sbiw	r24, 0x00	; 0
    13f8:	09 f0       	breq	.+2      	; 0x13fc <main+0x238>
    13fa:	87 c4       	rjmp	.+2318   	; 0x1d0a <main+0xb46>
			{
				if (enable == 1){
    13fc:	fe 01       	movw	r30, r28
    13fe:	e1 50       	subi	r30, 0x01	; 1
    1400:	ff 4f       	sbci	r31, 0xFF	; 255
    1402:	80 81       	ld	r24, Z
    1404:	81 30       	cpi	r24, 0x01	; 1
    1406:	09 f0       	breq	.+2      	; 0x140a <main+0x246>
    1408:	80 c4       	rjmp	.+2304   	; 0x1d0a <main+0xb46>
				if(count != 7)
    140a:	fe 01       	movw	r30, r28
    140c:	e0 50       	subi	r30, 0x00	; 0
    140e:	ff 4f       	sbci	r31, 0xFF	; 255
    1410:	80 81       	ld	r24, Z
    1412:	87 30       	cpi	r24, 0x07	; 7
    1414:	b1 f0       	breq	.+44     	; 0x1442 <main+0x27e>
				{
					count++;
    1416:	de 01       	movw	r26, r28
    1418:	a0 50       	subi	r26, 0x00	; 0
    141a:	bf 4f       	sbci	r27, 0xFF	; 255
    141c:	fe 01       	movw	r30, r28
    141e:	e0 50       	subi	r30, 0x00	; 0
    1420:	ff 4f       	sbci	r31, 0xFF	; 255
    1422:	80 81       	ld	r24, Z
    1424:	8f 5f       	subi	r24, 0xFF	; 255
    1426:	8c 93       	st	X, r24
					Eta32mini_SevenSegment_Display(count);
    1428:	fe 01       	movw	r30, r28
    142a:	e0 50       	subi	r30, 0x00	; 0
    142c:	ff 4f       	sbci	r31, 0xFF	; 255
    142e:	80 81       	ld	r24, Z
    1430:	0e 94 9b 05 	call	0xb36	; 0xb36 <Eta32mini_SevenSegment_Display>
					LED_BINARY(count);
    1434:	fe 01       	movw	r30, r28
    1436:	e0 50       	subi	r30, 0x00	; 0
    1438:	ff 4f       	sbci	r31, 0xFF	; 255
    143a:	80 81       	ld	r24, Z
    143c:	0e 94 ed 07 	call	0xfda	; 0xfda <LED_BINARY>
    1440:	64 c4       	rjmp	.+2248   	; 0x1d0a <main+0xb46>
								}
				else if(count == 7){
    1442:	fe 01       	movw	r30, r28
    1444:	e0 50       	subi	r30, 0x00	; 0
    1446:	ff 4f       	sbci	r31, 0xFF	; 255
    1448:	80 81       	ld	r24, Z
    144a:	87 30       	cpi	r24, 0x07	; 7
    144c:	09 f0       	breq	.+2      	; 0x1450 <main+0x28c>
    144e:	5d c4       	rjmp	.+2234   	; 0x1d0a <main+0xb46>
									PORTC  |= (1<<5);   //1st iteration
    1450:	a5 e3       	ldi	r26, 0x35	; 53
    1452:	b0 e0       	ldi	r27, 0x00	; 0
    1454:	e5 e3       	ldi	r30, 0x35	; 53
    1456:	f0 e0       	ldi	r31, 0x00	; 0
    1458:	80 81       	ld	r24, Z
    145a:	80 62       	ori	r24, 0x20	; 32
    145c:	8c 93       	st	X, r24
    145e:	fe 01       	movw	r30, r28
    1460:	e5 51       	subi	r30, 0x15	; 21
    1462:	ff 4f       	sbci	r31, 0xFF	; 255
    1464:	80 e0       	ldi	r24, 0x00	; 0
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	aa ef       	ldi	r26, 0xFA	; 250
    146a:	b3 e4       	ldi	r27, 0x43	; 67
    146c:	80 83       	st	Z, r24
    146e:	91 83       	std	Z+1, r25	; 0x01
    1470:	a2 83       	std	Z+2, r26	; 0x02
    1472:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1474:	8e 01       	movw	r16, r28
    1476:	09 51       	subi	r16, 0x19	; 25
    1478:	1f 4f       	sbci	r17, 0xFF	; 255
    147a:	fe 01       	movw	r30, r28
    147c:	e5 51       	subi	r30, 0x15	; 21
    147e:	ff 4f       	sbci	r31, 0xFF	; 255
    1480:	60 81       	ld	r22, Z
    1482:	71 81       	ldd	r23, Z+1	; 0x01
    1484:	82 81       	ldd	r24, Z+2	; 0x02
    1486:	93 81       	ldd	r25, Z+3	; 0x03
    1488:	20 e0       	ldi	r18, 0x00	; 0
    148a:	30 e0       	ldi	r19, 0x00	; 0
    148c:	4a e7       	ldi	r20, 0x7A	; 122
    148e:	53 e4       	ldi	r21, 0x43	; 67
    1490:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1494:	dc 01       	movw	r26, r24
    1496:	cb 01       	movw	r24, r22
    1498:	f8 01       	movw	r30, r16
    149a:	80 83       	st	Z, r24
    149c:	91 83       	std	Z+1, r25	; 0x01
    149e:	a2 83       	std	Z+2, r26	; 0x02
    14a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14a2:	fe 01       	movw	r30, r28
    14a4:	e9 51       	subi	r30, 0x19	; 25
    14a6:	ff 4f       	sbci	r31, 0xFF	; 255
    14a8:	60 81       	ld	r22, Z
    14aa:	71 81       	ldd	r23, Z+1	; 0x01
    14ac:	82 81       	ldd	r24, Z+2	; 0x02
    14ae:	93 81       	ldd	r25, Z+3	; 0x03
    14b0:	20 e0       	ldi	r18, 0x00	; 0
    14b2:	30 e0       	ldi	r19, 0x00	; 0
    14b4:	40 e8       	ldi	r20, 0x80	; 128
    14b6:	5f e3       	ldi	r21, 0x3F	; 63
    14b8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14bc:	88 23       	and	r24, r24
    14be:	44 f4       	brge	.+16     	; 0x14d0 <main+0x30c>
		__ticks = 1;
    14c0:	fe 01       	movw	r30, r28
    14c2:	eb 51       	subi	r30, 0x1B	; 27
    14c4:	ff 4f       	sbci	r31, 0xFF	; 255
    14c6:	81 e0       	ldi	r24, 0x01	; 1
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	91 83       	std	Z+1, r25	; 0x01
    14cc:	80 83       	st	Z, r24
    14ce:	64 c0       	rjmp	.+200    	; 0x1598 <main+0x3d4>
	else if (__tmp > 65535)
    14d0:	fe 01       	movw	r30, r28
    14d2:	e9 51       	subi	r30, 0x19	; 25
    14d4:	ff 4f       	sbci	r31, 0xFF	; 255
    14d6:	60 81       	ld	r22, Z
    14d8:	71 81       	ldd	r23, Z+1	; 0x01
    14da:	82 81       	ldd	r24, Z+2	; 0x02
    14dc:	93 81       	ldd	r25, Z+3	; 0x03
    14de:	20 e0       	ldi	r18, 0x00	; 0
    14e0:	3f ef       	ldi	r19, 0xFF	; 255
    14e2:	4f e7       	ldi	r20, 0x7F	; 127
    14e4:	57 e4       	ldi	r21, 0x47	; 71
    14e6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    14ea:	18 16       	cp	r1, r24
    14ec:	0c f0       	brlt	.+2      	; 0x14f0 <main+0x32c>
    14ee:	43 c0       	rjmp	.+134    	; 0x1576 <main+0x3b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14f0:	fe 01       	movw	r30, r28
    14f2:	e5 51       	subi	r30, 0x15	; 21
    14f4:	ff 4f       	sbci	r31, 0xFF	; 255
    14f6:	60 81       	ld	r22, Z
    14f8:	71 81       	ldd	r23, Z+1	; 0x01
    14fa:	82 81       	ldd	r24, Z+2	; 0x02
    14fc:	93 81       	ldd	r25, Z+3	; 0x03
    14fe:	20 e0       	ldi	r18, 0x00	; 0
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	40 e2       	ldi	r20, 0x20	; 32
    1504:	51 e4       	ldi	r21, 0x41	; 65
    1506:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    150a:	dc 01       	movw	r26, r24
    150c:	cb 01       	movw	r24, r22
    150e:	8e 01       	movw	r16, r28
    1510:	0b 51       	subi	r16, 0x1B	; 27
    1512:	1f 4f       	sbci	r17, 0xFF	; 255
    1514:	bc 01       	movw	r22, r24
    1516:	cd 01       	movw	r24, r26
    1518:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    151c:	dc 01       	movw	r26, r24
    151e:	cb 01       	movw	r24, r22
    1520:	f8 01       	movw	r30, r16
    1522:	91 83       	std	Z+1, r25	; 0x01
    1524:	80 83       	st	Z, r24
    1526:	1f c0       	rjmp	.+62     	; 0x1566 <main+0x3a2>
    1528:	fe 01       	movw	r30, r28
    152a:	ed 51       	subi	r30, 0x1D	; 29
    152c:	ff 4f       	sbci	r31, 0xFF	; 255
    152e:	89 e1       	ldi	r24, 0x19	; 25
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	91 83       	std	Z+1, r25	; 0x01
    1534:	80 83       	st	Z, r24
    1536:	fe 01       	movw	r30, r28
    1538:	ed 51       	subi	r30, 0x1D	; 29
    153a:	ff 4f       	sbci	r31, 0xFF	; 255
    153c:	80 81       	ld	r24, Z
    153e:	91 81       	ldd	r25, Z+1	; 0x01
    1540:	01 97       	sbiw	r24, 0x01	; 1
    1542:	f1 f7       	brne	.-4      	; 0x1540 <main+0x37c>
    1544:	fe 01       	movw	r30, r28
    1546:	ed 51       	subi	r30, 0x1D	; 29
    1548:	ff 4f       	sbci	r31, 0xFF	; 255
    154a:	91 83       	std	Z+1, r25	; 0x01
    154c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    154e:	de 01       	movw	r26, r28
    1550:	ab 51       	subi	r26, 0x1B	; 27
    1552:	bf 4f       	sbci	r27, 0xFF	; 255
    1554:	fe 01       	movw	r30, r28
    1556:	eb 51       	subi	r30, 0x1B	; 27
    1558:	ff 4f       	sbci	r31, 0xFF	; 255
    155a:	80 81       	ld	r24, Z
    155c:	91 81       	ldd	r25, Z+1	; 0x01
    155e:	01 97       	sbiw	r24, 0x01	; 1
    1560:	11 96       	adiw	r26, 0x01	; 1
    1562:	9c 93       	st	X, r25
    1564:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1566:	fe 01       	movw	r30, r28
    1568:	eb 51       	subi	r30, 0x1B	; 27
    156a:	ff 4f       	sbci	r31, 0xFF	; 255
    156c:	80 81       	ld	r24, Z
    156e:	91 81       	ldd	r25, Z+1	; 0x01
    1570:	00 97       	sbiw	r24, 0x00	; 0
    1572:	d1 f6       	brne	.-76     	; 0x1528 <main+0x364>
    1574:	27 c0       	rjmp	.+78     	; 0x15c4 <main+0x400>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1576:	8e 01       	movw	r16, r28
    1578:	0b 51       	subi	r16, 0x1B	; 27
    157a:	1f 4f       	sbci	r17, 0xFF	; 255
    157c:	fe 01       	movw	r30, r28
    157e:	e9 51       	subi	r30, 0x19	; 25
    1580:	ff 4f       	sbci	r31, 0xFF	; 255
    1582:	60 81       	ld	r22, Z
    1584:	71 81       	ldd	r23, Z+1	; 0x01
    1586:	82 81       	ldd	r24, Z+2	; 0x02
    1588:	93 81       	ldd	r25, Z+3	; 0x03
    158a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    158e:	dc 01       	movw	r26, r24
    1590:	cb 01       	movw	r24, r22
    1592:	f8 01       	movw	r30, r16
    1594:	91 83       	std	Z+1, r25	; 0x01
    1596:	80 83       	st	Z, r24
    1598:	de 01       	movw	r26, r28
    159a:	af 51       	subi	r26, 0x1F	; 31
    159c:	bf 4f       	sbci	r27, 0xFF	; 255
    159e:	fe 01       	movw	r30, r28
    15a0:	eb 51       	subi	r30, 0x1B	; 27
    15a2:	ff 4f       	sbci	r31, 0xFF	; 255
    15a4:	80 81       	ld	r24, Z
    15a6:	91 81       	ldd	r25, Z+1	; 0x01
    15a8:	8d 93       	st	X+, r24
    15aa:	9c 93       	st	X, r25
    15ac:	fe 01       	movw	r30, r28
    15ae:	ef 51       	subi	r30, 0x1F	; 31
    15b0:	ff 4f       	sbci	r31, 0xFF	; 255
    15b2:	80 81       	ld	r24, Z
    15b4:	91 81       	ldd	r25, Z+1	; 0x01
    15b6:	01 97       	sbiw	r24, 0x01	; 1
    15b8:	f1 f7       	brne	.-4      	; 0x15b6 <main+0x3f2>
    15ba:	fe 01       	movw	r30, r28
    15bc:	ef 51       	subi	r30, 0x1F	; 31
    15be:	ff 4f       	sbci	r31, 0xFF	; 255
    15c0:	91 83       	std	Z+1, r25	; 0x01
    15c2:	80 83       	st	Z, r24
									_delay_ms(500);
									PORTC  &= ~(1<<5);
    15c4:	a5 e3       	ldi	r26, 0x35	; 53
    15c6:	b0 e0       	ldi	r27, 0x00	; 0
    15c8:	e5 e3       	ldi	r30, 0x35	; 53
    15ca:	f0 e0       	ldi	r31, 0x00	; 0
    15cc:	80 81       	ld	r24, Z
    15ce:	8f 7d       	andi	r24, 0xDF	; 223
    15d0:	8c 93       	st	X, r24
    15d2:	fe 01       	movw	r30, r28
    15d4:	e3 52       	subi	r30, 0x23	; 35
    15d6:	ff 4f       	sbci	r31, 0xFF	; 255
    15d8:	80 e0       	ldi	r24, 0x00	; 0
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	aa ef       	ldi	r26, 0xFA	; 250
    15de:	b3 e4       	ldi	r27, 0x43	; 67
    15e0:	80 83       	st	Z, r24
    15e2:	91 83       	std	Z+1, r25	; 0x01
    15e4:	a2 83       	std	Z+2, r26	; 0x02
    15e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15e8:	8e 01       	movw	r16, r28
    15ea:	07 52       	subi	r16, 0x27	; 39
    15ec:	1f 4f       	sbci	r17, 0xFF	; 255
    15ee:	fe 01       	movw	r30, r28
    15f0:	e3 52       	subi	r30, 0x23	; 35
    15f2:	ff 4f       	sbci	r31, 0xFF	; 255
    15f4:	60 81       	ld	r22, Z
    15f6:	71 81       	ldd	r23, Z+1	; 0x01
    15f8:	82 81       	ldd	r24, Z+2	; 0x02
    15fa:	93 81       	ldd	r25, Z+3	; 0x03
    15fc:	20 e0       	ldi	r18, 0x00	; 0
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	4a e7       	ldi	r20, 0x7A	; 122
    1602:	53 e4       	ldi	r21, 0x43	; 67
    1604:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1608:	dc 01       	movw	r26, r24
    160a:	cb 01       	movw	r24, r22
    160c:	f8 01       	movw	r30, r16
    160e:	80 83       	st	Z, r24
    1610:	91 83       	std	Z+1, r25	; 0x01
    1612:	a2 83       	std	Z+2, r26	; 0x02
    1614:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1616:	fe 01       	movw	r30, r28
    1618:	e7 52       	subi	r30, 0x27	; 39
    161a:	ff 4f       	sbci	r31, 0xFF	; 255
    161c:	60 81       	ld	r22, Z
    161e:	71 81       	ldd	r23, Z+1	; 0x01
    1620:	82 81       	ldd	r24, Z+2	; 0x02
    1622:	93 81       	ldd	r25, Z+3	; 0x03
    1624:	20 e0       	ldi	r18, 0x00	; 0
    1626:	30 e0       	ldi	r19, 0x00	; 0
    1628:	40 e8       	ldi	r20, 0x80	; 128
    162a:	5f e3       	ldi	r21, 0x3F	; 63
    162c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1630:	88 23       	and	r24, r24
    1632:	44 f4       	brge	.+16     	; 0x1644 <main+0x480>
		__ticks = 1;
    1634:	fe 01       	movw	r30, r28
    1636:	e9 52       	subi	r30, 0x29	; 41
    1638:	ff 4f       	sbci	r31, 0xFF	; 255
    163a:	81 e0       	ldi	r24, 0x01	; 1
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	91 83       	std	Z+1, r25	; 0x01
    1640:	80 83       	st	Z, r24
    1642:	64 c0       	rjmp	.+200    	; 0x170c <main+0x548>
	else if (__tmp > 65535)
    1644:	fe 01       	movw	r30, r28
    1646:	e7 52       	subi	r30, 0x27	; 39
    1648:	ff 4f       	sbci	r31, 0xFF	; 255
    164a:	60 81       	ld	r22, Z
    164c:	71 81       	ldd	r23, Z+1	; 0x01
    164e:	82 81       	ldd	r24, Z+2	; 0x02
    1650:	93 81       	ldd	r25, Z+3	; 0x03
    1652:	20 e0       	ldi	r18, 0x00	; 0
    1654:	3f ef       	ldi	r19, 0xFF	; 255
    1656:	4f e7       	ldi	r20, 0x7F	; 127
    1658:	57 e4       	ldi	r21, 0x47	; 71
    165a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    165e:	18 16       	cp	r1, r24
    1660:	0c f0       	brlt	.+2      	; 0x1664 <main+0x4a0>
    1662:	43 c0       	rjmp	.+134    	; 0x16ea <main+0x526>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1664:	fe 01       	movw	r30, r28
    1666:	e3 52       	subi	r30, 0x23	; 35
    1668:	ff 4f       	sbci	r31, 0xFF	; 255
    166a:	60 81       	ld	r22, Z
    166c:	71 81       	ldd	r23, Z+1	; 0x01
    166e:	82 81       	ldd	r24, Z+2	; 0x02
    1670:	93 81       	ldd	r25, Z+3	; 0x03
    1672:	20 e0       	ldi	r18, 0x00	; 0
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	40 e2       	ldi	r20, 0x20	; 32
    1678:	51 e4       	ldi	r21, 0x41	; 65
    167a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    167e:	dc 01       	movw	r26, r24
    1680:	cb 01       	movw	r24, r22
    1682:	8e 01       	movw	r16, r28
    1684:	09 52       	subi	r16, 0x29	; 41
    1686:	1f 4f       	sbci	r17, 0xFF	; 255
    1688:	bc 01       	movw	r22, r24
    168a:	cd 01       	movw	r24, r26
    168c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1690:	dc 01       	movw	r26, r24
    1692:	cb 01       	movw	r24, r22
    1694:	f8 01       	movw	r30, r16
    1696:	91 83       	std	Z+1, r25	; 0x01
    1698:	80 83       	st	Z, r24
    169a:	1f c0       	rjmp	.+62     	; 0x16da <main+0x516>
    169c:	fe 01       	movw	r30, r28
    169e:	eb 52       	subi	r30, 0x2B	; 43
    16a0:	ff 4f       	sbci	r31, 0xFF	; 255
    16a2:	89 e1       	ldi	r24, 0x19	; 25
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	91 83       	std	Z+1, r25	; 0x01
    16a8:	80 83       	st	Z, r24
    16aa:	fe 01       	movw	r30, r28
    16ac:	eb 52       	subi	r30, 0x2B	; 43
    16ae:	ff 4f       	sbci	r31, 0xFF	; 255
    16b0:	80 81       	ld	r24, Z
    16b2:	91 81       	ldd	r25, Z+1	; 0x01
    16b4:	01 97       	sbiw	r24, 0x01	; 1
    16b6:	f1 f7       	brne	.-4      	; 0x16b4 <main+0x4f0>
    16b8:	fe 01       	movw	r30, r28
    16ba:	eb 52       	subi	r30, 0x2B	; 43
    16bc:	ff 4f       	sbci	r31, 0xFF	; 255
    16be:	91 83       	std	Z+1, r25	; 0x01
    16c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16c2:	de 01       	movw	r26, r28
    16c4:	a9 52       	subi	r26, 0x29	; 41
    16c6:	bf 4f       	sbci	r27, 0xFF	; 255
    16c8:	fe 01       	movw	r30, r28
    16ca:	e9 52       	subi	r30, 0x29	; 41
    16cc:	ff 4f       	sbci	r31, 0xFF	; 255
    16ce:	80 81       	ld	r24, Z
    16d0:	91 81       	ldd	r25, Z+1	; 0x01
    16d2:	01 97       	sbiw	r24, 0x01	; 1
    16d4:	11 96       	adiw	r26, 0x01	; 1
    16d6:	9c 93       	st	X, r25
    16d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16da:	fe 01       	movw	r30, r28
    16dc:	e9 52       	subi	r30, 0x29	; 41
    16de:	ff 4f       	sbci	r31, 0xFF	; 255
    16e0:	80 81       	ld	r24, Z
    16e2:	91 81       	ldd	r25, Z+1	; 0x01
    16e4:	00 97       	sbiw	r24, 0x00	; 0
    16e6:	d1 f6       	brne	.-76     	; 0x169c <main+0x4d8>
    16e8:	27 c0       	rjmp	.+78     	; 0x1738 <main+0x574>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16ea:	8e 01       	movw	r16, r28
    16ec:	09 52       	subi	r16, 0x29	; 41
    16ee:	1f 4f       	sbci	r17, 0xFF	; 255
    16f0:	fe 01       	movw	r30, r28
    16f2:	e7 52       	subi	r30, 0x27	; 39
    16f4:	ff 4f       	sbci	r31, 0xFF	; 255
    16f6:	60 81       	ld	r22, Z
    16f8:	71 81       	ldd	r23, Z+1	; 0x01
    16fa:	82 81       	ldd	r24, Z+2	; 0x02
    16fc:	93 81       	ldd	r25, Z+3	; 0x03
    16fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1702:	dc 01       	movw	r26, r24
    1704:	cb 01       	movw	r24, r22
    1706:	f8 01       	movw	r30, r16
    1708:	91 83       	std	Z+1, r25	; 0x01
    170a:	80 83       	st	Z, r24
    170c:	de 01       	movw	r26, r28
    170e:	ad 52       	subi	r26, 0x2D	; 45
    1710:	bf 4f       	sbci	r27, 0xFF	; 255
    1712:	fe 01       	movw	r30, r28
    1714:	e9 52       	subi	r30, 0x29	; 41
    1716:	ff 4f       	sbci	r31, 0xFF	; 255
    1718:	80 81       	ld	r24, Z
    171a:	91 81       	ldd	r25, Z+1	; 0x01
    171c:	8d 93       	st	X+, r24
    171e:	9c 93       	st	X, r25
    1720:	fe 01       	movw	r30, r28
    1722:	ed 52       	subi	r30, 0x2D	; 45
    1724:	ff 4f       	sbci	r31, 0xFF	; 255
    1726:	80 81       	ld	r24, Z
    1728:	91 81       	ldd	r25, Z+1	; 0x01
    172a:	01 97       	sbiw	r24, 0x01	; 1
    172c:	f1 f7       	brne	.-4      	; 0x172a <main+0x566>
    172e:	fe 01       	movw	r30, r28
    1730:	ed 52       	subi	r30, 0x2D	; 45
    1732:	ff 4f       	sbci	r31, 0xFF	; 255
    1734:	91 83       	std	Z+1, r25	; 0x01
    1736:	80 83       	st	Z, r24
									_delay_ms(500);

									PORTC  |= (1<<5);   //2nd iteration
    1738:	a5 e3       	ldi	r26, 0x35	; 53
    173a:	b0 e0       	ldi	r27, 0x00	; 0
    173c:	e5 e3       	ldi	r30, 0x35	; 53
    173e:	f0 e0       	ldi	r31, 0x00	; 0
    1740:	80 81       	ld	r24, Z
    1742:	80 62       	ori	r24, 0x20	; 32
    1744:	8c 93       	st	X, r24
    1746:	fe 01       	movw	r30, r28
    1748:	e1 53       	subi	r30, 0x31	; 49
    174a:	ff 4f       	sbci	r31, 0xFF	; 255
    174c:	80 e0       	ldi	r24, 0x00	; 0
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	aa ef       	ldi	r26, 0xFA	; 250
    1752:	b3 e4       	ldi	r27, 0x43	; 67
    1754:	80 83       	st	Z, r24
    1756:	91 83       	std	Z+1, r25	; 0x01
    1758:	a2 83       	std	Z+2, r26	; 0x02
    175a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    175c:	8e 01       	movw	r16, r28
    175e:	05 53       	subi	r16, 0x35	; 53
    1760:	1f 4f       	sbci	r17, 0xFF	; 255
    1762:	fe 01       	movw	r30, r28
    1764:	e1 53       	subi	r30, 0x31	; 49
    1766:	ff 4f       	sbci	r31, 0xFF	; 255
    1768:	60 81       	ld	r22, Z
    176a:	71 81       	ldd	r23, Z+1	; 0x01
    176c:	82 81       	ldd	r24, Z+2	; 0x02
    176e:	93 81       	ldd	r25, Z+3	; 0x03
    1770:	20 e0       	ldi	r18, 0x00	; 0
    1772:	30 e0       	ldi	r19, 0x00	; 0
    1774:	4a e7       	ldi	r20, 0x7A	; 122
    1776:	53 e4       	ldi	r21, 0x43	; 67
    1778:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    177c:	dc 01       	movw	r26, r24
    177e:	cb 01       	movw	r24, r22
    1780:	f8 01       	movw	r30, r16
    1782:	80 83       	st	Z, r24
    1784:	91 83       	std	Z+1, r25	; 0x01
    1786:	a2 83       	std	Z+2, r26	; 0x02
    1788:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    178a:	fe 01       	movw	r30, r28
    178c:	e5 53       	subi	r30, 0x35	; 53
    178e:	ff 4f       	sbci	r31, 0xFF	; 255
    1790:	60 81       	ld	r22, Z
    1792:	71 81       	ldd	r23, Z+1	; 0x01
    1794:	82 81       	ldd	r24, Z+2	; 0x02
    1796:	93 81       	ldd	r25, Z+3	; 0x03
    1798:	20 e0       	ldi	r18, 0x00	; 0
    179a:	30 e0       	ldi	r19, 0x00	; 0
    179c:	40 e8       	ldi	r20, 0x80	; 128
    179e:	5f e3       	ldi	r21, 0x3F	; 63
    17a0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17a4:	88 23       	and	r24, r24
    17a6:	44 f4       	brge	.+16     	; 0x17b8 <main+0x5f4>
		__ticks = 1;
    17a8:	fe 01       	movw	r30, r28
    17aa:	e7 53       	subi	r30, 0x37	; 55
    17ac:	ff 4f       	sbci	r31, 0xFF	; 255
    17ae:	81 e0       	ldi	r24, 0x01	; 1
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	91 83       	std	Z+1, r25	; 0x01
    17b4:	80 83       	st	Z, r24
    17b6:	64 c0       	rjmp	.+200    	; 0x1880 <main+0x6bc>
	else if (__tmp > 65535)
    17b8:	fe 01       	movw	r30, r28
    17ba:	e5 53       	subi	r30, 0x35	; 53
    17bc:	ff 4f       	sbci	r31, 0xFF	; 255
    17be:	60 81       	ld	r22, Z
    17c0:	71 81       	ldd	r23, Z+1	; 0x01
    17c2:	82 81       	ldd	r24, Z+2	; 0x02
    17c4:	93 81       	ldd	r25, Z+3	; 0x03
    17c6:	20 e0       	ldi	r18, 0x00	; 0
    17c8:	3f ef       	ldi	r19, 0xFF	; 255
    17ca:	4f e7       	ldi	r20, 0x7F	; 127
    17cc:	57 e4       	ldi	r21, 0x47	; 71
    17ce:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    17d2:	18 16       	cp	r1, r24
    17d4:	0c f0       	brlt	.+2      	; 0x17d8 <main+0x614>
    17d6:	43 c0       	rjmp	.+134    	; 0x185e <main+0x69a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17d8:	fe 01       	movw	r30, r28
    17da:	e1 53       	subi	r30, 0x31	; 49
    17dc:	ff 4f       	sbci	r31, 0xFF	; 255
    17de:	60 81       	ld	r22, Z
    17e0:	71 81       	ldd	r23, Z+1	; 0x01
    17e2:	82 81       	ldd	r24, Z+2	; 0x02
    17e4:	93 81       	ldd	r25, Z+3	; 0x03
    17e6:	20 e0       	ldi	r18, 0x00	; 0
    17e8:	30 e0       	ldi	r19, 0x00	; 0
    17ea:	40 e2       	ldi	r20, 0x20	; 32
    17ec:	51 e4       	ldi	r21, 0x41	; 65
    17ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17f2:	dc 01       	movw	r26, r24
    17f4:	cb 01       	movw	r24, r22
    17f6:	8e 01       	movw	r16, r28
    17f8:	07 53       	subi	r16, 0x37	; 55
    17fa:	1f 4f       	sbci	r17, 0xFF	; 255
    17fc:	bc 01       	movw	r22, r24
    17fe:	cd 01       	movw	r24, r26
    1800:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1804:	dc 01       	movw	r26, r24
    1806:	cb 01       	movw	r24, r22
    1808:	f8 01       	movw	r30, r16
    180a:	91 83       	std	Z+1, r25	; 0x01
    180c:	80 83       	st	Z, r24
    180e:	1f c0       	rjmp	.+62     	; 0x184e <main+0x68a>
    1810:	fe 01       	movw	r30, r28
    1812:	e9 53       	subi	r30, 0x39	; 57
    1814:	ff 4f       	sbci	r31, 0xFF	; 255
    1816:	89 e1       	ldi	r24, 0x19	; 25
    1818:	90 e0       	ldi	r25, 0x00	; 0
    181a:	91 83       	std	Z+1, r25	; 0x01
    181c:	80 83       	st	Z, r24
    181e:	fe 01       	movw	r30, r28
    1820:	e9 53       	subi	r30, 0x39	; 57
    1822:	ff 4f       	sbci	r31, 0xFF	; 255
    1824:	80 81       	ld	r24, Z
    1826:	91 81       	ldd	r25, Z+1	; 0x01
    1828:	01 97       	sbiw	r24, 0x01	; 1
    182a:	f1 f7       	brne	.-4      	; 0x1828 <main+0x664>
    182c:	fe 01       	movw	r30, r28
    182e:	e9 53       	subi	r30, 0x39	; 57
    1830:	ff 4f       	sbci	r31, 0xFF	; 255
    1832:	91 83       	std	Z+1, r25	; 0x01
    1834:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1836:	de 01       	movw	r26, r28
    1838:	a7 53       	subi	r26, 0x37	; 55
    183a:	bf 4f       	sbci	r27, 0xFF	; 255
    183c:	fe 01       	movw	r30, r28
    183e:	e7 53       	subi	r30, 0x37	; 55
    1840:	ff 4f       	sbci	r31, 0xFF	; 255
    1842:	80 81       	ld	r24, Z
    1844:	91 81       	ldd	r25, Z+1	; 0x01
    1846:	01 97       	sbiw	r24, 0x01	; 1
    1848:	11 96       	adiw	r26, 0x01	; 1
    184a:	9c 93       	st	X, r25
    184c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    184e:	fe 01       	movw	r30, r28
    1850:	e7 53       	subi	r30, 0x37	; 55
    1852:	ff 4f       	sbci	r31, 0xFF	; 255
    1854:	80 81       	ld	r24, Z
    1856:	91 81       	ldd	r25, Z+1	; 0x01
    1858:	00 97       	sbiw	r24, 0x00	; 0
    185a:	d1 f6       	brne	.-76     	; 0x1810 <main+0x64c>
    185c:	27 c0       	rjmp	.+78     	; 0x18ac <main+0x6e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    185e:	8e 01       	movw	r16, r28
    1860:	07 53       	subi	r16, 0x37	; 55
    1862:	1f 4f       	sbci	r17, 0xFF	; 255
    1864:	fe 01       	movw	r30, r28
    1866:	e5 53       	subi	r30, 0x35	; 53
    1868:	ff 4f       	sbci	r31, 0xFF	; 255
    186a:	60 81       	ld	r22, Z
    186c:	71 81       	ldd	r23, Z+1	; 0x01
    186e:	82 81       	ldd	r24, Z+2	; 0x02
    1870:	93 81       	ldd	r25, Z+3	; 0x03
    1872:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1876:	dc 01       	movw	r26, r24
    1878:	cb 01       	movw	r24, r22
    187a:	f8 01       	movw	r30, r16
    187c:	91 83       	std	Z+1, r25	; 0x01
    187e:	80 83       	st	Z, r24
    1880:	de 01       	movw	r26, r28
    1882:	ab 53       	subi	r26, 0x3B	; 59
    1884:	bf 4f       	sbci	r27, 0xFF	; 255
    1886:	fe 01       	movw	r30, r28
    1888:	e7 53       	subi	r30, 0x37	; 55
    188a:	ff 4f       	sbci	r31, 0xFF	; 255
    188c:	80 81       	ld	r24, Z
    188e:	91 81       	ldd	r25, Z+1	; 0x01
    1890:	8d 93       	st	X+, r24
    1892:	9c 93       	st	X, r25
    1894:	fe 01       	movw	r30, r28
    1896:	eb 53       	subi	r30, 0x3B	; 59
    1898:	ff 4f       	sbci	r31, 0xFF	; 255
    189a:	80 81       	ld	r24, Z
    189c:	91 81       	ldd	r25, Z+1	; 0x01
    189e:	01 97       	sbiw	r24, 0x01	; 1
    18a0:	f1 f7       	brne	.-4      	; 0x189e <main+0x6da>
    18a2:	fe 01       	movw	r30, r28
    18a4:	eb 53       	subi	r30, 0x3B	; 59
    18a6:	ff 4f       	sbci	r31, 0xFF	; 255
    18a8:	91 83       	std	Z+1, r25	; 0x01
    18aa:	80 83       	st	Z, r24
									_delay_ms(500);
									PORTC  &= ~(1<<5);
    18ac:	a5 e3       	ldi	r26, 0x35	; 53
    18ae:	b0 e0       	ldi	r27, 0x00	; 0
    18b0:	e5 e3       	ldi	r30, 0x35	; 53
    18b2:	f0 e0       	ldi	r31, 0x00	; 0
    18b4:	80 81       	ld	r24, Z
    18b6:	8f 7d       	andi	r24, 0xDF	; 223
    18b8:	8c 93       	st	X, r24
    18ba:	fe 01       	movw	r30, r28
    18bc:	ef 53       	subi	r30, 0x3F	; 63
    18be:	ff 4f       	sbci	r31, 0xFF	; 255
    18c0:	80 e0       	ldi	r24, 0x00	; 0
    18c2:	90 e0       	ldi	r25, 0x00	; 0
    18c4:	aa ef       	ldi	r26, 0xFA	; 250
    18c6:	b3 e4       	ldi	r27, 0x43	; 67
    18c8:	80 83       	st	Z, r24
    18ca:	91 83       	std	Z+1, r25	; 0x01
    18cc:	a2 83       	std	Z+2, r26	; 0x02
    18ce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18d0:	8e 01       	movw	r16, r28
    18d2:	03 54       	subi	r16, 0x43	; 67
    18d4:	1f 4f       	sbci	r17, 0xFF	; 255
    18d6:	fe 01       	movw	r30, r28
    18d8:	ef 53       	subi	r30, 0x3F	; 63
    18da:	ff 4f       	sbci	r31, 0xFF	; 255
    18dc:	60 81       	ld	r22, Z
    18de:	71 81       	ldd	r23, Z+1	; 0x01
    18e0:	82 81       	ldd	r24, Z+2	; 0x02
    18e2:	93 81       	ldd	r25, Z+3	; 0x03
    18e4:	20 e0       	ldi	r18, 0x00	; 0
    18e6:	30 e0       	ldi	r19, 0x00	; 0
    18e8:	4a e7       	ldi	r20, 0x7A	; 122
    18ea:	53 e4       	ldi	r21, 0x43	; 67
    18ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18f0:	dc 01       	movw	r26, r24
    18f2:	cb 01       	movw	r24, r22
    18f4:	f8 01       	movw	r30, r16
    18f6:	80 83       	st	Z, r24
    18f8:	91 83       	std	Z+1, r25	; 0x01
    18fa:	a2 83       	std	Z+2, r26	; 0x02
    18fc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18fe:	fe 01       	movw	r30, r28
    1900:	e3 54       	subi	r30, 0x43	; 67
    1902:	ff 4f       	sbci	r31, 0xFF	; 255
    1904:	60 81       	ld	r22, Z
    1906:	71 81       	ldd	r23, Z+1	; 0x01
    1908:	82 81       	ldd	r24, Z+2	; 0x02
    190a:	93 81       	ldd	r25, Z+3	; 0x03
    190c:	20 e0       	ldi	r18, 0x00	; 0
    190e:	30 e0       	ldi	r19, 0x00	; 0
    1910:	40 e8       	ldi	r20, 0x80	; 128
    1912:	5f e3       	ldi	r21, 0x3F	; 63
    1914:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1918:	88 23       	and	r24, r24
    191a:	44 f4       	brge	.+16     	; 0x192c <main+0x768>
		__ticks = 1;
    191c:	fe 01       	movw	r30, r28
    191e:	e5 54       	subi	r30, 0x45	; 69
    1920:	ff 4f       	sbci	r31, 0xFF	; 255
    1922:	81 e0       	ldi	r24, 0x01	; 1
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	91 83       	std	Z+1, r25	; 0x01
    1928:	80 83       	st	Z, r24
    192a:	64 c0       	rjmp	.+200    	; 0x19f4 <main+0x830>
	else if (__tmp > 65535)
    192c:	fe 01       	movw	r30, r28
    192e:	e3 54       	subi	r30, 0x43	; 67
    1930:	ff 4f       	sbci	r31, 0xFF	; 255
    1932:	60 81       	ld	r22, Z
    1934:	71 81       	ldd	r23, Z+1	; 0x01
    1936:	82 81       	ldd	r24, Z+2	; 0x02
    1938:	93 81       	ldd	r25, Z+3	; 0x03
    193a:	20 e0       	ldi	r18, 0x00	; 0
    193c:	3f ef       	ldi	r19, 0xFF	; 255
    193e:	4f e7       	ldi	r20, 0x7F	; 127
    1940:	57 e4       	ldi	r21, 0x47	; 71
    1942:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1946:	18 16       	cp	r1, r24
    1948:	0c f0       	brlt	.+2      	; 0x194c <main+0x788>
    194a:	43 c0       	rjmp	.+134    	; 0x19d2 <main+0x80e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    194c:	fe 01       	movw	r30, r28
    194e:	ef 53       	subi	r30, 0x3F	; 63
    1950:	ff 4f       	sbci	r31, 0xFF	; 255
    1952:	60 81       	ld	r22, Z
    1954:	71 81       	ldd	r23, Z+1	; 0x01
    1956:	82 81       	ldd	r24, Z+2	; 0x02
    1958:	93 81       	ldd	r25, Z+3	; 0x03
    195a:	20 e0       	ldi	r18, 0x00	; 0
    195c:	30 e0       	ldi	r19, 0x00	; 0
    195e:	40 e2       	ldi	r20, 0x20	; 32
    1960:	51 e4       	ldi	r21, 0x41	; 65
    1962:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1966:	dc 01       	movw	r26, r24
    1968:	cb 01       	movw	r24, r22
    196a:	8e 01       	movw	r16, r28
    196c:	05 54       	subi	r16, 0x45	; 69
    196e:	1f 4f       	sbci	r17, 0xFF	; 255
    1970:	bc 01       	movw	r22, r24
    1972:	cd 01       	movw	r24, r26
    1974:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1978:	dc 01       	movw	r26, r24
    197a:	cb 01       	movw	r24, r22
    197c:	f8 01       	movw	r30, r16
    197e:	91 83       	std	Z+1, r25	; 0x01
    1980:	80 83       	st	Z, r24
    1982:	1f c0       	rjmp	.+62     	; 0x19c2 <main+0x7fe>
    1984:	fe 01       	movw	r30, r28
    1986:	e7 54       	subi	r30, 0x47	; 71
    1988:	ff 4f       	sbci	r31, 0xFF	; 255
    198a:	89 e1       	ldi	r24, 0x19	; 25
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	91 83       	std	Z+1, r25	; 0x01
    1990:	80 83       	st	Z, r24
    1992:	fe 01       	movw	r30, r28
    1994:	e7 54       	subi	r30, 0x47	; 71
    1996:	ff 4f       	sbci	r31, 0xFF	; 255
    1998:	80 81       	ld	r24, Z
    199a:	91 81       	ldd	r25, Z+1	; 0x01
    199c:	01 97       	sbiw	r24, 0x01	; 1
    199e:	f1 f7       	brne	.-4      	; 0x199c <main+0x7d8>
    19a0:	fe 01       	movw	r30, r28
    19a2:	e7 54       	subi	r30, 0x47	; 71
    19a4:	ff 4f       	sbci	r31, 0xFF	; 255
    19a6:	91 83       	std	Z+1, r25	; 0x01
    19a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19aa:	de 01       	movw	r26, r28
    19ac:	a5 54       	subi	r26, 0x45	; 69
    19ae:	bf 4f       	sbci	r27, 0xFF	; 255
    19b0:	fe 01       	movw	r30, r28
    19b2:	e5 54       	subi	r30, 0x45	; 69
    19b4:	ff 4f       	sbci	r31, 0xFF	; 255
    19b6:	80 81       	ld	r24, Z
    19b8:	91 81       	ldd	r25, Z+1	; 0x01
    19ba:	01 97       	sbiw	r24, 0x01	; 1
    19bc:	11 96       	adiw	r26, 0x01	; 1
    19be:	9c 93       	st	X, r25
    19c0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c2:	fe 01       	movw	r30, r28
    19c4:	e5 54       	subi	r30, 0x45	; 69
    19c6:	ff 4f       	sbci	r31, 0xFF	; 255
    19c8:	80 81       	ld	r24, Z
    19ca:	91 81       	ldd	r25, Z+1	; 0x01
    19cc:	00 97       	sbiw	r24, 0x00	; 0
    19ce:	d1 f6       	brne	.-76     	; 0x1984 <main+0x7c0>
    19d0:	27 c0       	rjmp	.+78     	; 0x1a20 <main+0x85c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19d2:	8e 01       	movw	r16, r28
    19d4:	05 54       	subi	r16, 0x45	; 69
    19d6:	1f 4f       	sbci	r17, 0xFF	; 255
    19d8:	fe 01       	movw	r30, r28
    19da:	e3 54       	subi	r30, 0x43	; 67
    19dc:	ff 4f       	sbci	r31, 0xFF	; 255
    19de:	60 81       	ld	r22, Z
    19e0:	71 81       	ldd	r23, Z+1	; 0x01
    19e2:	82 81       	ldd	r24, Z+2	; 0x02
    19e4:	93 81       	ldd	r25, Z+3	; 0x03
    19e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19ea:	dc 01       	movw	r26, r24
    19ec:	cb 01       	movw	r24, r22
    19ee:	f8 01       	movw	r30, r16
    19f0:	91 83       	std	Z+1, r25	; 0x01
    19f2:	80 83       	st	Z, r24
    19f4:	de 01       	movw	r26, r28
    19f6:	a9 54       	subi	r26, 0x49	; 73
    19f8:	bf 4f       	sbci	r27, 0xFF	; 255
    19fa:	fe 01       	movw	r30, r28
    19fc:	e5 54       	subi	r30, 0x45	; 69
    19fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1a00:	80 81       	ld	r24, Z
    1a02:	91 81       	ldd	r25, Z+1	; 0x01
    1a04:	8d 93       	st	X+, r24
    1a06:	9c 93       	st	X, r25
    1a08:	fe 01       	movw	r30, r28
    1a0a:	e9 54       	subi	r30, 0x49	; 73
    1a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0e:	80 81       	ld	r24, Z
    1a10:	91 81       	ldd	r25, Z+1	; 0x01
    1a12:	01 97       	sbiw	r24, 0x01	; 1
    1a14:	f1 f7       	brne	.-4      	; 0x1a12 <main+0x84e>
    1a16:	fe 01       	movw	r30, r28
    1a18:	e9 54       	subi	r30, 0x49	; 73
    1a1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a1c:	91 83       	std	Z+1, r25	; 0x01
    1a1e:	80 83       	st	Z, r24
									_delay_ms(500);

									PORTC  |= (1<<5);   //3rd iteration
    1a20:	a5 e3       	ldi	r26, 0x35	; 53
    1a22:	b0 e0       	ldi	r27, 0x00	; 0
    1a24:	e5 e3       	ldi	r30, 0x35	; 53
    1a26:	f0 e0       	ldi	r31, 0x00	; 0
    1a28:	80 81       	ld	r24, Z
    1a2a:	80 62       	ori	r24, 0x20	; 32
    1a2c:	8c 93       	st	X, r24
    1a2e:	fe 01       	movw	r30, r28
    1a30:	ed 54       	subi	r30, 0x4D	; 77
    1a32:	ff 4f       	sbci	r31, 0xFF	; 255
    1a34:	80 e0       	ldi	r24, 0x00	; 0
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	aa ef       	ldi	r26, 0xFA	; 250
    1a3a:	b3 e4       	ldi	r27, 0x43	; 67
    1a3c:	80 83       	st	Z, r24
    1a3e:	91 83       	std	Z+1, r25	; 0x01
    1a40:	a2 83       	std	Z+2, r26	; 0x02
    1a42:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a44:	8e 01       	movw	r16, r28
    1a46:	01 55       	subi	r16, 0x51	; 81
    1a48:	1f 4f       	sbci	r17, 0xFF	; 255
    1a4a:	fe 01       	movw	r30, r28
    1a4c:	ed 54       	subi	r30, 0x4D	; 77
    1a4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a50:	60 81       	ld	r22, Z
    1a52:	71 81       	ldd	r23, Z+1	; 0x01
    1a54:	82 81       	ldd	r24, Z+2	; 0x02
    1a56:	93 81       	ldd	r25, Z+3	; 0x03
    1a58:	20 e0       	ldi	r18, 0x00	; 0
    1a5a:	30 e0       	ldi	r19, 0x00	; 0
    1a5c:	4a e7       	ldi	r20, 0x7A	; 122
    1a5e:	53 e4       	ldi	r21, 0x43	; 67
    1a60:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a64:	dc 01       	movw	r26, r24
    1a66:	cb 01       	movw	r24, r22
    1a68:	f8 01       	movw	r30, r16
    1a6a:	80 83       	st	Z, r24
    1a6c:	91 83       	std	Z+1, r25	; 0x01
    1a6e:	a2 83       	std	Z+2, r26	; 0x02
    1a70:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a72:	fe 01       	movw	r30, r28
    1a74:	e1 55       	subi	r30, 0x51	; 81
    1a76:	ff 4f       	sbci	r31, 0xFF	; 255
    1a78:	60 81       	ld	r22, Z
    1a7a:	71 81       	ldd	r23, Z+1	; 0x01
    1a7c:	82 81       	ldd	r24, Z+2	; 0x02
    1a7e:	93 81       	ldd	r25, Z+3	; 0x03
    1a80:	20 e0       	ldi	r18, 0x00	; 0
    1a82:	30 e0       	ldi	r19, 0x00	; 0
    1a84:	40 e8       	ldi	r20, 0x80	; 128
    1a86:	5f e3       	ldi	r21, 0x3F	; 63
    1a88:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a8c:	88 23       	and	r24, r24
    1a8e:	44 f4       	brge	.+16     	; 0x1aa0 <main+0x8dc>
		__ticks = 1;
    1a90:	fe 01       	movw	r30, r28
    1a92:	e3 55       	subi	r30, 0x53	; 83
    1a94:	ff 4f       	sbci	r31, 0xFF	; 255
    1a96:	81 e0       	ldi	r24, 0x01	; 1
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	91 83       	std	Z+1, r25	; 0x01
    1a9c:	80 83       	st	Z, r24
    1a9e:	64 c0       	rjmp	.+200    	; 0x1b68 <main+0x9a4>
	else if (__tmp > 65535)
    1aa0:	fe 01       	movw	r30, r28
    1aa2:	e1 55       	subi	r30, 0x51	; 81
    1aa4:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa6:	60 81       	ld	r22, Z
    1aa8:	71 81       	ldd	r23, Z+1	; 0x01
    1aaa:	82 81       	ldd	r24, Z+2	; 0x02
    1aac:	93 81       	ldd	r25, Z+3	; 0x03
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	3f ef       	ldi	r19, 0xFF	; 255
    1ab2:	4f e7       	ldi	r20, 0x7F	; 127
    1ab4:	57 e4       	ldi	r21, 0x47	; 71
    1ab6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1aba:	18 16       	cp	r1, r24
    1abc:	0c f0       	brlt	.+2      	; 0x1ac0 <main+0x8fc>
    1abe:	43 c0       	rjmp	.+134    	; 0x1b46 <main+0x982>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ac0:	fe 01       	movw	r30, r28
    1ac2:	ed 54       	subi	r30, 0x4D	; 77
    1ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac6:	60 81       	ld	r22, Z
    1ac8:	71 81       	ldd	r23, Z+1	; 0x01
    1aca:	82 81       	ldd	r24, Z+2	; 0x02
    1acc:	93 81       	ldd	r25, Z+3	; 0x03
    1ace:	20 e0       	ldi	r18, 0x00	; 0
    1ad0:	30 e0       	ldi	r19, 0x00	; 0
    1ad2:	40 e2       	ldi	r20, 0x20	; 32
    1ad4:	51 e4       	ldi	r21, 0x41	; 65
    1ad6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ada:	dc 01       	movw	r26, r24
    1adc:	cb 01       	movw	r24, r22
    1ade:	8e 01       	movw	r16, r28
    1ae0:	03 55       	subi	r16, 0x53	; 83
    1ae2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ae4:	bc 01       	movw	r22, r24
    1ae6:	cd 01       	movw	r24, r26
    1ae8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1aec:	dc 01       	movw	r26, r24
    1aee:	cb 01       	movw	r24, r22
    1af0:	f8 01       	movw	r30, r16
    1af2:	91 83       	std	Z+1, r25	; 0x01
    1af4:	80 83       	st	Z, r24
    1af6:	1f c0       	rjmp	.+62     	; 0x1b36 <main+0x972>
    1af8:	fe 01       	movw	r30, r28
    1afa:	e5 55       	subi	r30, 0x55	; 85
    1afc:	ff 4f       	sbci	r31, 0xFF	; 255
    1afe:	89 e1       	ldi	r24, 0x19	; 25
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	91 83       	std	Z+1, r25	; 0x01
    1b04:	80 83       	st	Z, r24
    1b06:	fe 01       	movw	r30, r28
    1b08:	e5 55       	subi	r30, 0x55	; 85
    1b0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0c:	80 81       	ld	r24, Z
    1b0e:	91 81       	ldd	r25, Z+1	; 0x01
    1b10:	01 97       	sbiw	r24, 0x01	; 1
    1b12:	f1 f7       	brne	.-4      	; 0x1b10 <main+0x94c>
    1b14:	fe 01       	movw	r30, r28
    1b16:	e5 55       	subi	r30, 0x55	; 85
    1b18:	ff 4f       	sbci	r31, 0xFF	; 255
    1b1a:	91 83       	std	Z+1, r25	; 0x01
    1b1c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b1e:	de 01       	movw	r26, r28
    1b20:	a3 55       	subi	r26, 0x53	; 83
    1b22:	bf 4f       	sbci	r27, 0xFF	; 255
    1b24:	fe 01       	movw	r30, r28
    1b26:	e3 55       	subi	r30, 0x53	; 83
    1b28:	ff 4f       	sbci	r31, 0xFF	; 255
    1b2a:	80 81       	ld	r24, Z
    1b2c:	91 81       	ldd	r25, Z+1	; 0x01
    1b2e:	01 97       	sbiw	r24, 0x01	; 1
    1b30:	11 96       	adiw	r26, 0x01	; 1
    1b32:	9c 93       	st	X, r25
    1b34:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b36:	fe 01       	movw	r30, r28
    1b38:	e3 55       	subi	r30, 0x53	; 83
    1b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b3c:	80 81       	ld	r24, Z
    1b3e:	91 81       	ldd	r25, Z+1	; 0x01
    1b40:	00 97       	sbiw	r24, 0x00	; 0
    1b42:	d1 f6       	brne	.-76     	; 0x1af8 <main+0x934>
    1b44:	27 c0       	rjmp	.+78     	; 0x1b94 <main+0x9d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b46:	8e 01       	movw	r16, r28
    1b48:	03 55       	subi	r16, 0x53	; 83
    1b4a:	1f 4f       	sbci	r17, 0xFF	; 255
    1b4c:	fe 01       	movw	r30, r28
    1b4e:	e1 55       	subi	r30, 0x51	; 81
    1b50:	ff 4f       	sbci	r31, 0xFF	; 255
    1b52:	60 81       	ld	r22, Z
    1b54:	71 81       	ldd	r23, Z+1	; 0x01
    1b56:	82 81       	ldd	r24, Z+2	; 0x02
    1b58:	93 81       	ldd	r25, Z+3	; 0x03
    1b5a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b5e:	dc 01       	movw	r26, r24
    1b60:	cb 01       	movw	r24, r22
    1b62:	f8 01       	movw	r30, r16
    1b64:	91 83       	std	Z+1, r25	; 0x01
    1b66:	80 83       	st	Z, r24
    1b68:	de 01       	movw	r26, r28
    1b6a:	a7 55       	subi	r26, 0x57	; 87
    1b6c:	bf 4f       	sbci	r27, 0xFF	; 255
    1b6e:	fe 01       	movw	r30, r28
    1b70:	e3 55       	subi	r30, 0x53	; 83
    1b72:	ff 4f       	sbci	r31, 0xFF	; 255
    1b74:	80 81       	ld	r24, Z
    1b76:	91 81       	ldd	r25, Z+1	; 0x01
    1b78:	8d 93       	st	X+, r24
    1b7a:	9c 93       	st	X, r25
    1b7c:	fe 01       	movw	r30, r28
    1b7e:	e7 55       	subi	r30, 0x57	; 87
    1b80:	ff 4f       	sbci	r31, 0xFF	; 255
    1b82:	80 81       	ld	r24, Z
    1b84:	91 81       	ldd	r25, Z+1	; 0x01
    1b86:	01 97       	sbiw	r24, 0x01	; 1
    1b88:	f1 f7       	brne	.-4      	; 0x1b86 <main+0x9c2>
    1b8a:	fe 01       	movw	r30, r28
    1b8c:	e7 55       	subi	r30, 0x57	; 87
    1b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b90:	91 83       	std	Z+1, r25	; 0x01
    1b92:	80 83       	st	Z, r24
									_delay_ms(500);
									PORTC  &= ~(1<<5);
    1b94:	a5 e3       	ldi	r26, 0x35	; 53
    1b96:	b0 e0       	ldi	r27, 0x00	; 0
    1b98:	e5 e3       	ldi	r30, 0x35	; 53
    1b9a:	f0 e0       	ldi	r31, 0x00	; 0
    1b9c:	80 81       	ld	r24, Z
    1b9e:	8f 7d       	andi	r24, 0xDF	; 223
    1ba0:	8c 93       	st	X, r24
    1ba2:	fe 01       	movw	r30, r28
    1ba4:	eb 55       	subi	r30, 0x5B	; 91
    1ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba8:	80 e0       	ldi	r24, 0x00	; 0
    1baa:	90 e0       	ldi	r25, 0x00	; 0
    1bac:	aa ef       	ldi	r26, 0xFA	; 250
    1bae:	b3 e4       	ldi	r27, 0x43	; 67
    1bb0:	80 83       	st	Z, r24
    1bb2:	91 83       	std	Z+1, r25	; 0x01
    1bb4:	a2 83       	std	Z+2, r26	; 0x02
    1bb6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bb8:	8e 01       	movw	r16, r28
    1bba:	0f 55       	subi	r16, 0x5F	; 95
    1bbc:	1f 4f       	sbci	r17, 0xFF	; 255
    1bbe:	fe 01       	movw	r30, r28
    1bc0:	eb 55       	subi	r30, 0x5B	; 91
    1bc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc4:	60 81       	ld	r22, Z
    1bc6:	71 81       	ldd	r23, Z+1	; 0x01
    1bc8:	82 81       	ldd	r24, Z+2	; 0x02
    1bca:	93 81       	ldd	r25, Z+3	; 0x03
    1bcc:	20 e0       	ldi	r18, 0x00	; 0
    1bce:	30 e0       	ldi	r19, 0x00	; 0
    1bd0:	4a e7       	ldi	r20, 0x7A	; 122
    1bd2:	53 e4       	ldi	r21, 0x43	; 67
    1bd4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bd8:	dc 01       	movw	r26, r24
    1bda:	cb 01       	movw	r24, r22
    1bdc:	f8 01       	movw	r30, r16
    1bde:	80 83       	st	Z, r24
    1be0:	91 83       	std	Z+1, r25	; 0x01
    1be2:	a2 83       	std	Z+2, r26	; 0x02
    1be4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1be6:	fe 01       	movw	r30, r28
    1be8:	ef 55       	subi	r30, 0x5F	; 95
    1bea:	ff 4f       	sbci	r31, 0xFF	; 255
    1bec:	60 81       	ld	r22, Z
    1bee:	71 81       	ldd	r23, Z+1	; 0x01
    1bf0:	82 81       	ldd	r24, Z+2	; 0x02
    1bf2:	93 81       	ldd	r25, Z+3	; 0x03
    1bf4:	20 e0       	ldi	r18, 0x00	; 0
    1bf6:	30 e0       	ldi	r19, 0x00	; 0
    1bf8:	40 e8       	ldi	r20, 0x80	; 128
    1bfa:	5f e3       	ldi	r21, 0x3F	; 63
    1bfc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c00:	88 23       	and	r24, r24
    1c02:	44 f4       	brge	.+16     	; 0x1c14 <main+0xa50>
		__ticks = 1;
    1c04:	fe 01       	movw	r30, r28
    1c06:	e1 56       	subi	r30, 0x61	; 97
    1c08:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0a:	81 e0       	ldi	r24, 0x01	; 1
    1c0c:	90 e0       	ldi	r25, 0x00	; 0
    1c0e:	91 83       	std	Z+1, r25	; 0x01
    1c10:	80 83       	st	Z, r24
    1c12:	64 c0       	rjmp	.+200    	; 0x1cdc <main+0xb18>
	else if (__tmp > 65535)
    1c14:	fe 01       	movw	r30, r28
    1c16:	ef 55       	subi	r30, 0x5F	; 95
    1c18:	ff 4f       	sbci	r31, 0xFF	; 255
    1c1a:	60 81       	ld	r22, Z
    1c1c:	71 81       	ldd	r23, Z+1	; 0x01
    1c1e:	82 81       	ldd	r24, Z+2	; 0x02
    1c20:	93 81       	ldd	r25, Z+3	; 0x03
    1c22:	20 e0       	ldi	r18, 0x00	; 0
    1c24:	3f ef       	ldi	r19, 0xFF	; 255
    1c26:	4f e7       	ldi	r20, 0x7F	; 127
    1c28:	57 e4       	ldi	r21, 0x47	; 71
    1c2a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c2e:	18 16       	cp	r1, r24
    1c30:	0c f0       	brlt	.+2      	; 0x1c34 <main+0xa70>
    1c32:	43 c0       	rjmp	.+134    	; 0x1cba <main+0xaf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c34:	fe 01       	movw	r30, r28
    1c36:	eb 55       	subi	r30, 0x5B	; 91
    1c38:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3a:	60 81       	ld	r22, Z
    1c3c:	71 81       	ldd	r23, Z+1	; 0x01
    1c3e:	82 81       	ldd	r24, Z+2	; 0x02
    1c40:	93 81       	ldd	r25, Z+3	; 0x03
    1c42:	20 e0       	ldi	r18, 0x00	; 0
    1c44:	30 e0       	ldi	r19, 0x00	; 0
    1c46:	40 e2       	ldi	r20, 0x20	; 32
    1c48:	51 e4       	ldi	r21, 0x41	; 65
    1c4a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c4e:	dc 01       	movw	r26, r24
    1c50:	cb 01       	movw	r24, r22
    1c52:	8e 01       	movw	r16, r28
    1c54:	01 56       	subi	r16, 0x61	; 97
    1c56:	1f 4f       	sbci	r17, 0xFF	; 255
    1c58:	bc 01       	movw	r22, r24
    1c5a:	cd 01       	movw	r24, r26
    1c5c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c60:	dc 01       	movw	r26, r24
    1c62:	cb 01       	movw	r24, r22
    1c64:	f8 01       	movw	r30, r16
    1c66:	91 83       	std	Z+1, r25	; 0x01
    1c68:	80 83       	st	Z, r24
    1c6a:	1f c0       	rjmp	.+62     	; 0x1caa <main+0xae6>
    1c6c:	fe 01       	movw	r30, r28
    1c6e:	e3 56       	subi	r30, 0x63	; 99
    1c70:	ff 4f       	sbci	r31, 0xFF	; 255
    1c72:	89 e1       	ldi	r24, 0x19	; 25
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	91 83       	std	Z+1, r25	; 0x01
    1c78:	80 83       	st	Z, r24
    1c7a:	fe 01       	movw	r30, r28
    1c7c:	e3 56       	subi	r30, 0x63	; 99
    1c7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c80:	80 81       	ld	r24, Z
    1c82:	91 81       	ldd	r25, Z+1	; 0x01
    1c84:	01 97       	sbiw	r24, 0x01	; 1
    1c86:	f1 f7       	brne	.-4      	; 0x1c84 <main+0xac0>
    1c88:	fe 01       	movw	r30, r28
    1c8a:	e3 56       	subi	r30, 0x63	; 99
    1c8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c8e:	91 83       	std	Z+1, r25	; 0x01
    1c90:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c92:	de 01       	movw	r26, r28
    1c94:	a1 56       	subi	r26, 0x61	; 97
    1c96:	bf 4f       	sbci	r27, 0xFF	; 255
    1c98:	fe 01       	movw	r30, r28
    1c9a:	e1 56       	subi	r30, 0x61	; 97
    1c9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c9e:	80 81       	ld	r24, Z
    1ca0:	91 81       	ldd	r25, Z+1	; 0x01
    1ca2:	01 97       	sbiw	r24, 0x01	; 1
    1ca4:	11 96       	adiw	r26, 0x01	; 1
    1ca6:	9c 93       	st	X, r25
    1ca8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1caa:	fe 01       	movw	r30, r28
    1cac:	e1 56       	subi	r30, 0x61	; 97
    1cae:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb0:	80 81       	ld	r24, Z
    1cb2:	91 81       	ldd	r25, Z+1	; 0x01
    1cb4:	00 97       	sbiw	r24, 0x00	; 0
    1cb6:	d1 f6       	brne	.-76     	; 0x1c6c <main+0xaa8>
    1cb8:	28 c0       	rjmp	.+80     	; 0x1d0a <main+0xb46>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cba:	8e 01       	movw	r16, r28
    1cbc:	01 56       	subi	r16, 0x61	; 97
    1cbe:	1f 4f       	sbci	r17, 0xFF	; 255
    1cc0:	fe 01       	movw	r30, r28
    1cc2:	ef 55       	subi	r30, 0x5F	; 95
    1cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc6:	60 81       	ld	r22, Z
    1cc8:	71 81       	ldd	r23, Z+1	; 0x01
    1cca:	82 81       	ldd	r24, Z+2	; 0x02
    1ccc:	93 81       	ldd	r25, Z+3	; 0x03
    1cce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cd2:	dc 01       	movw	r26, r24
    1cd4:	cb 01       	movw	r24, r22
    1cd6:	f8 01       	movw	r30, r16
    1cd8:	91 83       	std	Z+1, r25	; 0x01
    1cda:	80 83       	st	Z, r24
    1cdc:	de 01       	movw	r26, r28
    1cde:	a5 56       	subi	r26, 0x65	; 101
    1ce0:	bf 4f       	sbci	r27, 0xFF	; 255
    1ce2:	fe 01       	movw	r30, r28
    1ce4:	e1 56       	subi	r30, 0x61	; 97
    1ce6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce8:	80 81       	ld	r24, Z
    1cea:	91 81       	ldd	r25, Z+1	; 0x01
    1cec:	11 96       	adiw	r26, 0x01	; 1
    1cee:	9c 93       	st	X, r25
    1cf0:	8e 93       	st	-X, r24
    1cf2:	fe 01       	movw	r30, r28
    1cf4:	e5 56       	subi	r30, 0x65	; 101
    1cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf8:	80 81       	ld	r24, Z
    1cfa:	91 81       	ldd	r25, Z+1	; 0x01
    1cfc:	01 97       	sbiw	r24, 0x01	; 1
    1cfe:	f1 f7       	brne	.-4      	; 0x1cfc <main+0xb38>
    1d00:	fe 01       	movw	r30, r28
    1d02:	e5 56       	subi	r30, 0x65	; 101
    1d04:	ff 4f       	sbci	r31, 0xFF	; 255
    1d06:	91 83       	std	Z+1, r25	; 0x01
    1d08:	80 83       	st	Z, r24
									_delay_ms(500);
								}
				}

			}
			while( !(PIND & (1<<PD2)) ){} // wait until switch is released
    1d0a:	e0 e3       	ldi	r30, 0x30	; 48
    1d0c:	f0 e0       	ldi	r31, 0x00	; 0
    1d0e:	80 81       	ld	r24, Z
    1d10:	88 2f       	mov	r24, r24
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	84 70       	andi	r24, 0x04	; 4
    1d16:	90 70       	andi	r25, 0x00	; 0
    1d18:	00 97       	sbiw	r24, 0x00	; 0
    1d1a:	b9 f3       	breq	.-18     	; 0x1d0a <main+0xb46>
    1d1c:	ce c5       	rjmp	.+2972   	; 0x28ba <main+0x16f6>
		}
		else if(!(PIND & (1<<PD3))) //decrement
    1d1e:	e0 e3       	ldi	r30, 0x30	; 48
    1d20:	f0 e0       	ldi	r31, 0x00	; 0
    1d22:	80 81       	ld	r24, Z
    1d24:	88 2f       	mov	r24, r24
    1d26:	90 e0       	ldi	r25, 0x00	; 0
    1d28:	88 70       	andi	r24, 0x08	; 8
    1d2a:	90 70       	andi	r25, 0x00	; 0
    1d2c:	00 97       	sbiw	r24, 0x00	; 0
    1d2e:	09 f0       	breq	.+2      	; 0x1d32 <main+0xb6e>
    1d30:	20 c5       	rjmp	.+2624   	; 0x2772 <main+0x15ae>
    1d32:	fe 01       	movw	r30, r28
    1d34:	e9 56       	subi	r30, 0x69	; 105
    1d36:	ff 4f       	sbci	r31, 0xFF	; 255
    1d38:	80 e0       	ldi	r24, 0x00	; 0
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
    1d3c:	a0 ef       	ldi	r26, 0xF0	; 240
    1d3e:	b1 e4       	ldi	r27, 0x41	; 65
    1d40:	80 83       	st	Z, r24
    1d42:	91 83       	std	Z+1, r25	; 0x01
    1d44:	a2 83       	std	Z+2, r26	; 0x02
    1d46:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d48:	8e 01       	movw	r16, r28
    1d4a:	0d 56       	subi	r16, 0x6D	; 109
    1d4c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d4e:	fe 01       	movw	r30, r28
    1d50:	e9 56       	subi	r30, 0x69	; 105
    1d52:	ff 4f       	sbci	r31, 0xFF	; 255
    1d54:	60 81       	ld	r22, Z
    1d56:	71 81       	ldd	r23, Z+1	; 0x01
    1d58:	82 81       	ldd	r24, Z+2	; 0x02
    1d5a:	93 81       	ldd	r25, Z+3	; 0x03
    1d5c:	20 e0       	ldi	r18, 0x00	; 0
    1d5e:	30 e0       	ldi	r19, 0x00	; 0
    1d60:	4a e7       	ldi	r20, 0x7A	; 122
    1d62:	53 e4       	ldi	r21, 0x43	; 67
    1d64:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d68:	dc 01       	movw	r26, r24
    1d6a:	cb 01       	movw	r24, r22
    1d6c:	f8 01       	movw	r30, r16
    1d6e:	80 83       	st	Z, r24
    1d70:	91 83       	std	Z+1, r25	; 0x01
    1d72:	a2 83       	std	Z+2, r26	; 0x02
    1d74:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d76:	fe 01       	movw	r30, r28
    1d78:	ed 56       	subi	r30, 0x6D	; 109
    1d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7c:	60 81       	ld	r22, Z
    1d7e:	71 81       	ldd	r23, Z+1	; 0x01
    1d80:	82 81       	ldd	r24, Z+2	; 0x02
    1d82:	93 81       	ldd	r25, Z+3	; 0x03
    1d84:	20 e0       	ldi	r18, 0x00	; 0
    1d86:	30 e0       	ldi	r19, 0x00	; 0
    1d88:	40 e8       	ldi	r20, 0x80	; 128
    1d8a:	5f e3       	ldi	r21, 0x3F	; 63
    1d8c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d90:	88 23       	and	r24, r24
    1d92:	44 f4       	brge	.+16     	; 0x1da4 <main+0xbe0>
		__ticks = 1;
    1d94:	fe 01       	movw	r30, r28
    1d96:	ef 56       	subi	r30, 0x6F	; 111
    1d98:	ff 4f       	sbci	r31, 0xFF	; 255
    1d9a:	81 e0       	ldi	r24, 0x01	; 1
    1d9c:	90 e0       	ldi	r25, 0x00	; 0
    1d9e:	91 83       	std	Z+1, r25	; 0x01
    1da0:	80 83       	st	Z, r24
    1da2:	64 c0       	rjmp	.+200    	; 0x1e6c <main+0xca8>
	else if (__tmp > 65535)
    1da4:	fe 01       	movw	r30, r28
    1da6:	ed 56       	subi	r30, 0x6D	; 109
    1da8:	ff 4f       	sbci	r31, 0xFF	; 255
    1daa:	60 81       	ld	r22, Z
    1dac:	71 81       	ldd	r23, Z+1	; 0x01
    1dae:	82 81       	ldd	r24, Z+2	; 0x02
    1db0:	93 81       	ldd	r25, Z+3	; 0x03
    1db2:	20 e0       	ldi	r18, 0x00	; 0
    1db4:	3f ef       	ldi	r19, 0xFF	; 255
    1db6:	4f e7       	ldi	r20, 0x7F	; 127
    1db8:	57 e4       	ldi	r21, 0x47	; 71
    1dba:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1dbe:	18 16       	cp	r1, r24
    1dc0:	0c f0       	brlt	.+2      	; 0x1dc4 <main+0xc00>
    1dc2:	43 c0       	rjmp	.+134    	; 0x1e4a <main+0xc86>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dc4:	fe 01       	movw	r30, r28
    1dc6:	e9 56       	subi	r30, 0x69	; 105
    1dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dca:	60 81       	ld	r22, Z
    1dcc:	71 81       	ldd	r23, Z+1	; 0x01
    1dce:	82 81       	ldd	r24, Z+2	; 0x02
    1dd0:	93 81       	ldd	r25, Z+3	; 0x03
    1dd2:	20 e0       	ldi	r18, 0x00	; 0
    1dd4:	30 e0       	ldi	r19, 0x00	; 0
    1dd6:	40 e2       	ldi	r20, 0x20	; 32
    1dd8:	51 e4       	ldi	r21, 0x41	; 65
    1dda:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dde:	dc 01       	movw	r26, r24
    1de0:	cb 01       	movw	r24, r22
    1de2:	8e 01       	movw	r16, r28
    1de4:	0f 56       	subi	r16, 0x6F	; 111
    1de6:	1f 4f       	sbci	r17, 0xFF	; 255
    1de8:	bc 01       	movw	r22, r24
    1dea:	cd 01       	movw	r24, r26
    1dec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1df0:	dc 01       	movw	r26, r24
    1df2:	cb 01       	movw	r24, r22
    1df4:	f8 01       	movw	r30, r16
    1df6:	91 83       	std	Z+1, r25	; 0x01
    1df8:	80 83       	st	Z, r24
    1dfa:	1f c0       	rjmp	.+62     	; 0x1e3a <main+0xc76>
    1dfc:	fe 01       	movw	r30, r28
    1dfe:	e1 57       	subi	r30, 0x71	; 113
    1e00:	ff 4f       	sbci	r31, 0xFF	; 255
    1e02:	89 e1       	ldi	r24, 0x19	; 25
    1e04:	90 e0       	ldi	r25, 0x00	; 0
    1e06:	91 83       	std	Z+1, r25	; 0x01
    1e08:	80 83       	st	Z, r24
    1e0a:	fe 01       	movw	r30, r28
    1e0c:	e1 57       	subi	r30, 0x71	; 113
    1e0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e10:	80 81       	ld	r24, Z
    1e12:	91 81       	ldd	r25, Z+1	; 0x01
    1e14:	01 97       	sbiw	r24, 0x01	; 1
    1e16:	f1 f7       	brne	.-4      	; 0x1e14 <main+0xc50>
    1e18:	fe 01       	movw	r30, r28
    1e1a:	e1 57       	subi	r30, 0x71	; 113
    1e1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e1e:	91 83       	std	Z+1, r25	; 0x01
    1e20:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e22:	de 01       	movw	r26, r28
    1e24:	af 56       	subi	r26, 0x6F	; 111
    1e26:	bf 4f       	sbci	r27, 0xFF	; 255
    1e28:	fe 01       	movw	r30, r28
    1e2a:	ef 56       	subi	r30, 0x6F	; 111
    1e2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2e:	80 81       	ld	r24, Z
    1e30:	91 81       	ldd	r25, Z+1	; 0x01
    1e32:	01 97       	sbiw	r24, 0x01	; 1
    1e34:	11 96       	adiw	r26, 0x01	; 1
    1e36:	9c 93       	st	X, r25
    1e38:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e3a:	fe 01       	movw	r30, r28
    1e3c:	ef 56       	subi	r30, 0x6F	; 111
    1e3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e40:	80 81       	ld	r24, Z
    1e42:	91 81       	ldd	r25, Z+1	; 0x01
    1e44:	00 97       	sbiw	r24, 0x00	; 0
    1e46:	d1 f6       	brne	.-76     	; 0x1dfc <main+0xc38>
    1e48:	28 c0       	rjmp	.+80     	; 0x1e9a <main+0xcd6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e4a:	8e 01       	movw	r16, r28
    1e4c:	0f 56       	subi	r16, 0x6F	; 111
    1e4e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e50:	fe 01       	movw	r30, r28
    1e52:	ed 56       	subi	r30, 0x6D	; 109
    1e54:	ff 4f       	sbci	r31, 0xFF	; 255
    1e56:	60 81       	ld	r22, Z
    1e58:	71 81       	ldd	r23, Z+1	; 0x01
    1e5a:	82 81       	ldd	r24, Z+2	; 0x02
    1e5c:	93 81       	ldd	r25, Z+3	; 0x03
    1e5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e62:	dc 01       	movw	r26, r24
    1e64:	cb 01       	movw	r24, r22
    1e66:	f8 01       	movw	r30, r16
    1e68:	91 83       	std	Z+1, r25	; 0x01
    1e6a:	80 83       	st	Z, r24
    1e6c:	de 01       	movw	r26, r28
    1e6e:	a3 57       	subi	r26, 0x73	; 115
    1e70:	bf 4f       	sbci	r27, 0xFF	; 255
    1e72:	fe 01       	movw	r30, r28
    1e74:	ef 56       	subi	r30, 0x6F	; 111
    1e76:	ff 4f       	sbci	r31, 0xFF	; 255
    1e78:	80 81       	ld	r24, Z
    1e7a:	91 81       	ldd	r25, Z+1	; 0x01
    1e7c:	11 96       	adiw	r26, 0x01	; 1
    1e7e:	9c 93       	st	X, r25
    1e80:	8e 93       	st	-X, r24
    1e82:	fe 01       	movw	r30, r28
    1e84:	e3 57       	subi	r30, 0x73	; 115
    1e86:	ff 4f       	sbci	r31, 0xFF	; 255
    1e88:	80 81       	ld	r24, Z
    1e8a:	91 81       	ldd	r25, Z+1	; 0x01
    1e8c:	01 97       	sbiw	r24, 0x01	; 1
    1e8e:	f1 f7       	brne	.-4      	; 0x1e8c <main+0xcc8>
    1e90:	fe 01       	movw	r30, r28
    1e92:	e3 57       	subi	r30, 0x73	; 115
    1e94:	ff 4f       	sbci	r31, 0xFF	; 255
    1e96:	91 83       	std	Z+1, r25	; 0x01
    1e98:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if( !(PIND & (1<<PD3)) ) //second check due to switch bouncing
    1e9a:	e0 e3       	ldi	r30, 0x30	; 48
    1e9c:	f0 e0       	ldi	r31, 0x00	; 0
    1e9e:	80 81       	ld	r24, Z
    1ea0:	88 2f       	mov	r24, r24
    1ea2:	90 e0       	ldi	r25, 0x00	; 0
    1ea4:	88 70       	andi	r24, 0x08	; 8
    1ea6:	90 70       	andi	r25, 0x00	; 0
    1ea8:	00 97       	sbiw	r24, 0x00	; 0
    1eaa:	09 f0       	breq	.+2      	; 0x1eae <main+0xcea>
    1eac:	58 c4       	rjmp	.+2224   	; 0x275e <main+0x159a>
			{
				if (enable == 1){
    1eae:	fe 01       	movw	r30, r28
    1eb0:	e1 50       	subi	r30, 0x01	; 1
    1eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb4:	80 81       	ld	r24, Z
    1eb6:	81 30       	cpi	r24, 0x01	; 1
    1eb8:	09 f0       	breq	.+2      	; 0x1ebc <main+0xcf8>
    1eba:	51 c4       	rjmp	.+2210   	; 0x275e <main+0x159a>
				if(count != 0)
    1ebc:	fe 01       	movw	r30, r28
    1ebe:	e0 50       	subi	r30, 0x00	; 0
    1ec0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec2:	80 81       	ld	r24, Z
    1ec4:	88 23       	and	r24, r24
    1ec6:	b1 f0       	breq	.+44     	; 0x1ef4 <main+0xd30>
				{
					// decrement 7-segment every press
					count--;
    1ec8:	de 01       	movw	r26, r28
    1eca:	a0 50       	subi	r26, 0x00	; 0
    1ecc:	bf 4f       	sbci	r27, 0xFF	; 255
    1ece:	fe 01       	movw	r30, r28
    1ed0:	e0 50       	subi	r30, 0x00	; 0
    1ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed4:	80 81       	ld	r24, Z
    1ed6:	81 50       	subi	r24, 0x01	; 1
    1ed8:	8c 93       	st	X, r24
					Eta32mini_SevenSegment_Display(count);
    1eda:	fe 01       	movw	r30, r28
    1edc:	e0 50       	subi	r30, 0x00	; 0
    1ede:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee0:	80 81       	ld	r24, Z
    1ee2:	0e 94 9b 05 	call	0xb36	; 0xb36 <Eta32mini_SevenSegment_Display>
					LED_BINARY(count);
    1ee6:	fe 01       	movw	r30, r28
    1ee8:	e0 50       	subi	r30, 0x00	; 0
    1eea:	ff 4f       	sbci	r31, 0xFF	; 255
    1eec:	80 81       	ld	r24, Z
    1eee:	0e 94 ed 07 	call	0xfda	; 0xfda <LED_BINARY>
    1ef2:	35 c4       	rjmp	.+2154   	; 0x275e <main+0x159a>
				}
				else if(count == 0){
    1ef4:	fe 01       	movw	r30, r28
    1ef6:	e0 50       	subi	r30, 0x00	; 0
    1ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    1efa:	80 81       	ld	r24, Z
    1efc:	88 23       	and	r24, r24
    1efe:	09 f0       	breq	.+2      	; 0x1f02 <main+0xd3e>
    1f00:	2e c4       	rjmp	.+2140   	; 0x275e <main+0x159a>
					PORTC  |= (1<<5);   //1st iteration
    1f02:	a5 e3       	ldi	r26, 0x35	; 53
    1f04:	b0 e0       	ldi	r27, 0x00	; 0
    1f06:	e5 e3       	ldi	r30, 0x35	; 53
    1f08:	f0 e0       	ldi	r31, 0x00	; 0
    1f0a:	80 81       	ld	r24, Z
    1f0c:	80 62       	ori	r24, 0x20	; 32
    1f0e:	8c 93       	st	X, r24
    1f10:	fe 01       	movw	r30, r28
    1f12:	e7 57       	subi	r30, 0x77	; 119
    1f14:	ff 4f       	sbci	r31, 0xFF	; 255
    1f16:	80 e0       	ldi	r24, 0x00	; 0
    1f18:	90 e0       	ldi	r25, 0x00	; 0
    1f1a:	aa ef       	ldi	r26, 0xFA	; 250
    1f1c:	b3 e4       	ldi	r27, 0x43	; 67
    1f1e:	80 83       	st	Z, r24
    1f20:	91 83       	std	Z+1, r25	; 0x01
    1f22:	a2 83       	std	Z+2, r26	; 0x02
    1f24:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f26:	8e 01       	movw	r16, r28
    1f28:	0b 57       	subi	r16, 0x7B	; 123
    1f2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f2c:	fe 01       	movw	r30, r28
    1f2e:	e7 57       	subi	r30, 0x77	; 119
    1f30:	ff 4f       	sbci	r31, 0xFF	; 255
    1f32:	60 81       	ld	r22, Z
    1f34:	71 81       	ldd	r23, Z+1	; 0x01
    1f36:	82 81       	ldd	r24, Z+2	; 0x02
    1f38:	93 81       	ldd	r25, Z+3	; 0x03
    1f3a:	20 e0       	ldi	r18, 0x00	; 0
    1f3c:	30 e0       	ldi	r19, 0x00	; 0
    1f3e:	4a e7       	ldi	r20, 0x7A	; 122
    1f40:	53 e4       	ldi	r21, 0x43	; 67
    1f42:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f46:	dc 01       	movw	r26, r24
    1f48:	cb 01       	movw	r24, r22
    1f4a:	f8 01       	movw	r30, r16
    1f4c:	80 83       	st	Z, r24
    1f4e:	91 83       	std	Z+1, r25	; 0x01
    1f50:	a2 83       	std	Z+2, r26	; 0x02
    1f52:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f54:	fe 01       	movw	r30, r28
    1f56:	eb 57       	subi	r30, 0x7B	; 123
    1f58:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5a:	60 81       	ld	r22, Z
    1f5c:	71 81       	ldd	r23, Z+1	; 0x01
    1f5e:	82 81       	ldd	r24, Z+2	; 0x02
    1f60:	93 81       	ldd	r25, Z+3	; 0x03
    1f62:	20 e0       	ldi	r18, 0x00	; 0
    1f64:	30 e0       	ldi	r19, 0x00	; 0
    1f66:	40 e8       	ldi	r20, 0x80	; 128
    1f68:	5f e3       	ldi	r21, 0x3F	; 63
    1f6a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f6e:	88 23       	and	r24, r24
    1f70:	44 f4       	brge	.+16     	; 0x1f82 <main+0xdbe>
		__ticks = 1;
    1f72:	fe 01       	movw	r30, r28
    1f74:	ed 57       	subi	r30, 0x7D	; 125
    1f76:	ff 4f       	sbci	r31, 0xFF	; 255
    1f78:	81 e0       	ldi	r24, 0x01	; 1
    1f7a:	90 e0       	ldi	r25, 0x00	; 0
    1f7c:	91 83       	std	Z+1, r25	; 0x01
    1f7e:	80 83       	st	Z, r24
    1f80:	64 c0       	rjmp	.+200    	; 0x204a <main+0xe86>
	else if (__tmp > 65535)
    1f82:	fe 01       	movw	r30, r28
    1f84:	eb 57       	subi	r30, 0x7B	; 123
    1f86:	ff 4f       	sbci	r31, 0xFF	; 255
    1f88:	60 81       	ld	r22, Z
    1f8a:	71 81       	ldd	r23, Z+1	; 0x01
    1f8c:	82 81       	ldd	r24, Z+2	; 0x02
    1f8e:	93 81       	ldd	r25, Z+3	; 0x03
    1f90:	20 e0       	ldi	r18, 0x00	; 0
    1f92:	3f ef       	ldi	r19, 0xFF	; 255
    1f94:	4f e7       	ldi	r20, 0x7F	; 127
    1f96:	57 e4       	ldi	r21, 0x47	; 71
    1f98:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f9c:	18 16       	cp	r1, r24
    1f9e:	0c f0       	brlt	.+2      	; 0x1fa2 <main+0xdde>
    1fa0:	43 c0       	rjmp	.+134    	; 0x2028 <main+0xe64>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fa2:	fe 01       	movw	r30, r28
    1fa4:	e7 57       	subi	r30, 0x77	; 119
    1fa6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa8:	60 81       	ld	r22, Z
    1faa:	71 81       	ldd	r23, Z+1	; 0x01
    1fac:	82 81       	ldd	r24, Z+2	; 0x02
    1fae:	93 81       	ldd	r25, Z+3	; 0x03
    1fb0:	20 e0       	ldi	r18, 0x00	; 0
    1fb2:	30 e0       	ldi	r19, 0x00	; 0
    1fb4:	40 e2       	ldi	r20, 0x20	; 32
    1fb6:	51 e4       	ldi	r21, 0x41	; 65
    1fb8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fbc:	dc 01       	movw	r26, r24
    1fbe:	cb 01       	movw	r24, r22
    1fc0:	8e 01       	movw	r16, r28
    1fc2:	0d 57       	subi	r16, 0x7D	; 125
    1fc4:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc6:	bc 01       	movw	r22, r24
    1fc8:	cd 01       	movw	r24, r26
    1fca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fce:	dc 01       	movw	r26, r24
    1fd0:	cb 01       	movw	r24, r22
    1fd2:	f8 01       	movw	r30, r16
    1fd4:	91 83       	std	Z+1, r25	; 0x01
    1fd6:	80 83       	st	Z, r24
    1fd8:	1f c0       	rjmp	.+62     	; 0x2018 <main+0xe54>
    1fda:	fe 01       	movw	r30, r28
    1fdc:	ef 57       	subi	r30, 0x7F	; 127
    1fde:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe0:	89 e1       	ldi	r24, 0x19	; 25
    1fe2:	90 e0       	ldi	r25, 0x00	; 0
    1fe4:	91 83       	std	Z+1, r25	; 0x01
    1fe6:	80 83       	st	Z, r24
    1fe8:	fe 01       	movw	r30, r28
    1fea:	ef 57       	subi	r30, 0x7F	; 127
    1fec:	ff 4f       	sbci	r31, 0xFF	; 255
    1fee:	80 81       	ld	r24, Z
    1ff0:	91 81       	ldd	r25, Z+1	; 0x01
    1ff2:	01 97       	sbiw	r24, 0x01	; 1
    1ff4:	f1 f7       	brne	.-4      	; 0x1ff2 <main+0xe2e>
    1ff6:	fe 01       	movw	r30, r28
    1ff8:	ef 57       	subi	r30, 0x7F	; 127
    1ffa:	ff 4f       	sbci	r31, 0xFF	; 255
    1ffc:	91 83       	std	Z+1, r25	; 0x01
    1ffe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2000:	de 01       	movw	r26, r28
    2002:	ad 57       	subi	r26, 0x7D	; 125
    2004:	bf 4f       	sbci	r27, 0xFF	; 255
    2006:	fe 01       	movw	r30, r28
    2008:	ed 57       	subi	r30, 0x7D	; 125
    200a:	ff 4f       	sbci	r31, 0xFF	; 255
    200c:	80 81       	ld	r24, Z
    200e:	91 81       	ldd	r25, Z+1	; 0x01
    2010:	01 97       	sbiw	r24, 0x01	; 1
    2012:	11 96       	adiw	r26, 0x01	; 1
    2014:	9c 93       	st	X, r25
    2016:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2018:	fe 01       	movw	r30, r28
    201a:	ed 57       	subi	r30, 0x7D	; 125
    201c:	ff 4f       	sbci	r31, 0xFF	; 255
    201e:	80 81       	ld	r24, Z
    2020:	91 81       	ldd	r25, Z+1	; 0x01
    2022:	00 97       	sbiw	r24, 0x00	; 0
    2024:	d1 f6       	brne	.-76     	; 0x1fda <main+0xe16>
    2026:	27 c0       	rjmp	.+78     	; 0x2076 <main+0xeb2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2028:	8e 01       	movw	r16, r28
    202a:	0d 57       	subi	r16, 0x7D	; 125
    202c:	1f 4f       	sbci	r17, 0xFF	; 255
    202e:	fe 01       	movw	r30, r28
    2030:	eb 57       	subi	r30, 0x7B	; 123
    2032:	ff 4f       	sbci	r31, 0xFF	; 255
    2034:	60 81       	ld	r22, Z
    2036:	71 81       	ldd	r23, Z+1	; 0x01
    2038:	82 81       	ldd	r24, Z+2	; 0x02
    203a:	93 81       	ldd	r25, Z+3	; 0x03
    203c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2040:	dc 01       	movw	r26, r24
    2042:	cb 01       	movw	r24, r22
    2044:	f8 01       	movw	r30, r16
    2046:	91 83       	std	Z+1, r25	; 0x01
    2048:	80 83       	st	Z, r24
    204a:	de 01       	movw	r26, r28
    204c:	a1 58       	subi	r26, 0x81	; 129
    204e:	bf 4f       	sbci	r27, 0xFF	; 255
    2050:	fe 01       	movw	r30, r28
    2052:	ed 57       	subi	r30, 0x7D	; 125
    2054:	ff 4f       	sbci	r31, 0xFF	; 255
    2056:	80 81       	ld	r24, Z
    2058:	91 81       	ldd	r25, Z+1	; 0x01
    205a:	8d 93       	st	X+, r24
    205c:	9c 93       	st	X, r25
    205e:	fe 01       	movw	r30, r28
    2060:	e1 58       	subi	r30, 0x81	; 129
    2062:	ff 4f       	sbci	r31, 0xFF	; 255
    2064:	80 81       	ld	r24, Z
    2066:	91 81       	ldd	r25, Z+1	; 0x01
    2068:	01 97       	sbiw	r24, 0x01	; 1
    206a:	f1 f7       	brne	.-4      	; 0x2068 <main+0xea4>
    206c:	fe 01       	movw	r30, r28
    206e:	e1 58       	subi	r30, 0x81	; 129
    2070:	ff 4f       	sbci	r31, 0xFF	; 255
    2072:	91 83       	std	Z+1, r25	; 0x01
    2074:	80 83       	st	Z, r24
					_delay_ms(500);
					PORTC  &= ~(1<<5);
    2076:	a5 e3       	ldi	r26, 0x35	; 53
    2078:	b0 e0       	ldi	r27, 0x00	; 0
    207a:	e5 e3       	ldi	r30, 0x35	; 53
    207c:	f0 e0       	ldi	r31, 0x00	; 0
    207e:	80 81       	ld	r24, Z
    2080:	8f 7d       	andi	r24, 0xDF	; 223
    2082:	8c 93       	st	X, r24
    2084:	fe 01       	movw	r30, r28
    2086:	e5 58       	subi	r30, 0x85	; 133
    2088:	ff 4f       	sbci	r31, 0xFF	; 255
    208a:	80 e0       	ldi	r24, 0x00	; 0
    208c:	90 e0       	ldi	r25, 0x00	; 0
    208e:	aa ef       	ldi	r26, 0xFA	; 250
    2090:	b3 e4       	ldi	r27, 0x43	; 67
    2092:	80 83       	st	Z, r24
    2094:	91 83       	std	Z+1, r25	; 0x01
    2096:	a2 83       	std	Z+2, r26	; 0x02
    2098:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    209a:	8e 01       	movw	r16, r28
    209c:	09 58       	subi	r16, 0x89	; 137
    209e:	1f 4f       	sbci	r17, 0xFF	; 255
    20a0:	fe 01       	movw	r30, r28
    20a2:	e5 58       	subi	r30, 0x85	; 133
    20a4:	ff 4f       	sbci	r31, 0xFF	; 255
    20a6:	60 81       	ld	r22, Z
    20a8:	71 81       	ldd	r23, Z+1	; 0x01
    20aa:	82 81       	ldd	r24, Z+2	; 0x02
    20ac:	93 81       	ldd	r25, Z+3	; 0x03
    20ae:	20 e0       	ldi	r18, 0x00	; 0
    20b0:	30 e0       	ldi	r19, 0x00	; 0
    20b2:	4a e7       	ldi	r20, 0x7A	; 122
    20b4:	53 e4       	ldi	r21, 0x43	; 67
    20b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20ba:	dc 01       	movw	r26, r24
    20bc:	cb 01       	movw	r24, r22
    20be:	f8 01       	movw	r30, r16
    20c0:	80 83       	st	Z, r24
    20c2:	91 83       	std	Z+1, r25	; 0x01
    20c4:	a2 83       	std	Z+2, r26	; 0x02
    20c6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20c8:	fe 01       	movw	r30, r28
    20ca:	e9 58       	subi	r30, 0x89	; 137
    20cc:	ff 4f       	sbci	r31, 0xFF	; 255
    20ce:	60 81       	ld	r22, Z
    20d0:	71 81       	ldd	r23, Z+1	; 0x01
    20d2:	82 81       	ldd	r24, Z+2	; 0x02
    20d4:	93 81       	ldd	r25, Z+3	; 0x03
    20d6:	20 e0       	ldi	r18, 0x00	; 0
    20d8:	30 e0       	ldi	r19, 0x00	; 0
    20da:	40 e8       	ldi	r20, 0x80	; 128
    20dc:	5f e3       	ldi	r21, 0x3F	; 63
    20de:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20e2:	88 23       	and	r24, r24
    20e4:	44 f4       	brge	.+16     	; 0x20f6 <main+0xf32>
		__ticks = 1;
    20e6:	fe 01       	movw	r30, r28
    20e8:	eb 58       	subi	r30, 0x8B	; 139
    20ea:	ff 4f       	sbci	r31, 0xFF	; 255
    20ec:	81 e0       	ldi	r24, 0x01	; 1
    20ee:	90 e0       	ldi	r25, 0x00	; 0
    20f0:	91 83       	std	Z+1, r25	; 0x01
    20f2:	80 83       	st	Z, r24
    20f4:	64 c0       	rjmp	.+200    	; 0x21be <main+0xffa>
	else if (__tmp > 65535)
    20f6:	fe 01       	movw	r30, r28
    20f8:	e9 58       	subi	r30, 0x89	; 137
    20fa:	ff 4f       	sbci	r31, 0xFF	; 255
    20fc:	60 81       	ld	r22, Z
    20fe:	71 81       	ldd	r23, Z+1	; 0x01
    2100:	82 81       	ldd	r24, Z+2	; 0x02
    2102:	93 81       	ldd	r25, Z+3	; 0x03
    2104:	20 e0       	ldi	r18, 0x00	; 0
    2106:	3f ef       	ldi	r19, 0xFF	; 255
    2108:	4f e7       	ldi	r20, 0x7F	; 127
    210a:	57 e4       	ldi	r21, 0x47	; 71
    210c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2110:	18 16       	cp	r1, r24
    2112:	0c f0       	brlt	.+2      	; 0x2116 <main+0xf52>
    2114:	43 c0       	rjmp	.+134    	; 0x219c <main+0xfd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2116:	fe 01       	movw	r30, r28
    2118:	e5 58       	subi	r30, 0x85	; 133
    211a:	ff 4f       	sbci	r31, 0xFF	; 255
    211c:	60 81       	ld	r22, Z
    211e:	71 81       	ldd	r23, Z+1	; 0x01
    2120:	82 81       	ldd	r24, Z+2	; 0x02
    2122:	93 81       	ldd	r25, Z+3	; 0x03
    2124:	20 e0       	ldi	r18, 0x00	; 0
    2126:	30 e0       	ldi	r19, 0x00	; 0
    2128:	40 e2       	ldi	r20, 0x20	; 32
    212a:	51 e4       	ldi	r21, 0x41	; 65
    212c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2130:	dc 01       	movw	r26, r24
    2132:	cb 01       	movw	r24, r22
    2134:	8e 01       	movw	r16, r28
    2136:	0b 58       	subi	r16, 0x8B	; 139
    2138:	1f 4f       	sbci	r17, 0xFF	; 255
    213a:	bc 01       	movw	r22, r24
    213c:	cd 01       	movw	r24, r26
    213e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2142:	dc 01       	movw	r26, r24
    2144:	cb 01       	movw	r24, r22
    2146:	f8 01       	movw	r30, r16
    2148:	91 83       	std	Z+1, r25	; 0x01
    214a:	80 83       	st	Z, r24
    214c:	1f c0       	rjmp	.+62     	; 0x218c <main+0xfc8>
    214e:	fe 01       	movw	r30, r28
    2150:	ed 58       	subi	r30, 0x8D	; 141
    2152:	ff 4f       	sbci	r31, 0xFF	; 255
    2154:	89 e1       	ldi	r24, 0x19	; 25
    2156:	90 e0       	ldi	r25, 0x00	; 0
    2158:	91 83       	std	Z+1, r25	; 0x01
    215a:	80 83       	st	Z, r24
    215c:	fe 01       	movw	r30, r28
    215e:	ed 58       	subi	r30, 0x8D	; 141
    2160:	ff 4f       	sbci	r31, 0xFF	; 255
    2162:	80 81       	ld	r24, Z
    2164:	91 81       	ldd	r25, Z+1	; 0x01
    2166:	01 97       	sbiw	r24, 0x01	; 1
    2168:	f1 f7       	brne	.-4      	; 0x2166 <main+0xfa2>
    216a:	fe 01       	movw	r30, r28
    216c:	ed 58       	subi	r30, 0x8D	; 141
    216e:	ff 4f       	sbci	r31, 0xFF	; 255
    2170:	91 83       	std	Z+1, r25	; 0x01
    2172:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2174:	de 01       	movw	r26, r28
    2176:	ab 58       	subi	r26, 0x8B	; 139
    2178:	bf 4f       	sbci	r27, 0xFF	; 255
    217a:	fe 01       	movw	r30, r28
    217c:	eb 58       	subi	r30, 0x8B	; 139
    217e:	ff 4f       	sbci	r31, 0xFF	; 255
    2180:	80 81       	ld	r24, Z
    2182:	91 81       	ldd	r25, Z+1	; 0x01
    2184:	01 97       	sbiw	r24, 0x01	; 1
    2186:	11 96       	adiw	r26, 0x01	; 1
    2188:	9c 93       	st	X, r25
    218a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    218c:	fe 01       	movw	r30, r28
    218e:	eb 58       	subi	r30, 0x8B	; 139
    2190:	ff 4f       	sbci	r31, 0xFF	; 255
    2192:	80 81       	ld	r24, Z
    2194:	91 81       	ldd	r25, Z+1	; 0x01
    2196:	00 97       	sbiw	r24, 0x00	; 0
    2198:	d1 f6       	brne	.-76     	; 0x214e <main+0xf8a>
    219a:	27 c0       	rjmp	.+78     	; 0x21ea <main+0x1026>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    219c:	8e 01       	movw	r16, r28
    219e:	0b 58       	subi	r16, 0x8B	; 139
    21a0:	1f 4f       	sbci	r17, 0xFF	; 255
    21a2:	fe 01       	movw	r30, r28
    21a4:	e9 58       	subi	r30, 0x89	; 137
    21a6:	ff 4f       	sbci	r31, 0xFF	; 255
    21a8:	60 81       	ld	r22, Z
    21aa:	71 81       	ldd	r23, Z+1	; 0x01
    21ac:	82 81       	ldd	r24, Z+2	; 0x02
    21ae:	93 81       	ldd	r25, Z+3	; 0x03
    21b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21b4:	dc 01       	movw	r26, r24
    21b6:	cb 01       	movw	r24, r22
    21b8:	f8 01       	movw	r30, r16
    21ba:	91 83       	std	Z+1, r25	; 0x01
    21bc:	80 83       	st	Z, r24
    21be:	de 01       	movw	r26, r28
    21c0:	af 58       	subi	r26, 0x8F	; 143
    21c2:	bf 4f       	sbci	r27, 0xFF	; 255
    21c4:	fe 01       	movw	r30, r28
    21c6:	eb 58       	subi	r30, 0x8B	; 139
    21c8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ca:	80 81       	ld	r24, Z
    21cc:	91 81       	ldd	r25, Z+1	; 0x01
    21ce:	8d 93       	st	X+, r24
    21d0:	9c 93       	st	X, r25
    21d2:	fe 01       	movw	r30, r28
    21d4:	ef 58       	subi	r30, 0x8F	; 143
    21d6:	ff 4f       	sbci	r31, 0xFF	; 255
    21d8:	80 81       	ld	r24, Z
    21da:	91 81       	ldd	r25, Z+1	; 0x01
    21dc:	01 97       	sbiw	r24, 0x01	; 1
    21de:	f1 f7       	brne	.-4      	; 0x21dc <main+0x1018>
    21e0:	fe 01       	movw	r30, r28
    21e2:	ef 58       	subi	r30, 0x8F	; 143
    21e4:	ff 4f       	sbci	r31, 0xFF	; 255
    21e6:	91 83       	std	Z+1, r25	; 0x01
    21e8:	80 83       	st	Z, r24
					_delay_ms(500);

					PORTC  |= (1<<5);   //2nd iteration
    21ea:	a5 e3       	ldi	r26, 0x35	; 53
    21ec:	b0 e0       	ldi	r27, 0x00	; 0
    21ee:	e5 e3       	ldi	r30, 0x35	; 53
    21f0:	f0 e0       	ldi	r31, 0x00	; 0
    21f2:	80 81       	ld	r24, Z
    21f4:	80 62       	ori	r24, 0x20	; 32
    21f6:	8c 93       	st	X, r24
    21f8:	fe 01       	movw	r30, r28
    21fa:	e3 59       	subi	r30, 0x93	; 147
    21fc:	ff 4f       	sbci	r31, 0xFF	; 255
    21fe:	80 e0       	ldi	r24, 0x00	; 0
    2200:	90 e0       	ldi	r25, 0x00	; 0
    2202:	aa ef       	ldi	r26, 0xFA	; 250
    2204:	b3 e4       	ldi	r27, 0x43	; 67
    2206:	80 83       	st	Z, r24
    2208:	91 83       	std	Z+1, r25	; 0x01
    220a:	a2 83       	std	Z+2, r26	; 0x02
    220c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    220e:	8e 01       	movw	r16, r28
    2210:	07 59       	subi	r16, 0x97	; 151
    2212:	1f 4f       	sbci	r17, 0xFF	; 255
    2214:	fe 01       	movw	r30, r28
    2216:	e3 59       	subi	r30, 0x93	; 147
    2218:	ff 4f       	sbci	r31, 0xFF	; 255
    221a:	60 81       	ld	r22, Z
    221c:	71 81       	ldd	r23, Z+1	; 0x01
    221e:	82 81       	ldd	r24, Z+2	; 0x02
    2220:	93 81       	ldd	r25, Z+3	; 0x03
    2222:	20 e0       	ldi	r18, 0x00	; 0
    2224:	30 e0       	ldi	r19, 0x00	; 0
    2226:	4a e7       	ldi	r20, 0x7A	; 122
    2228:	53 e4       	ldi	r21, 0x43	; 67
    222a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    222e:	dc 01       	movw	r26, r24
    2230:	cb 01       	movw	r24, r22
    2232:	f8 01       	movw	r30, r16
    2234:	80 83       	st	Z, r24
    2236:	91 83       	std	Z+1, r25	; 0x01
    2238:	a2 83       	std	Z+2, r26	; 0x02
    223a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    223c:	fe 01       	movw	r30, r28
    223e:	e7 59       	subi	r30, 0x97	; 151
    2240:	ff 4f       	sbci	r31, 0xFF	; 255
    2242:	60 81       	ld	r22, Z
    2244:	71 81       	ldd	r23, Z+1	; 0x01
    2246:	82 81       	ldd	r24, Z+2	; 0x02
    2248:	93 81       	ldd	r25, Z+3	; 0x03
    224a:	20 e0       	ldi	r18, 0x00	; 0
    224c:	30 e0       	ldi	r19, 0x00	; 0
    224e:	40 e8       	ldi	r20, 0x80	; 128
    2250:	5f e3       	ldi	r21, 0x3F	; 63
    2252:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2256:	88 23       	and	r24, r24
    2258:	44 f4       	brge	.+16     	; 0x226a <main+0x10a6>
		__ticks = 1;
    225a:	fe 01       	movw	r30, r28
    225c:	e9 59       	subi	r30, 0x99	; 153
    225e:	ff 4f       	sbci	r31, 0xFF	; 255
    2260:	81 e0       	ldi	r24, 0x01	; 1
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	91 83       	std	Z+1, r25	; 0x01
    2266:	80 83       	st	Z, r24
    2268:	64 c0       	rjmp	.+200    	; 0x2332 <main+0x116e>
	else if (__tmp > 65535)
    226a:	fe 01       	movw	r30, r28
    226c:	e7 59       	subi	r30, 0x97	; 151
    226e:	ff 4f       	sbci	r31, 0xFF	; 255
    2270:	60 81       	ld	r22, Z
    2272:	71 81       	ldd	r23, Z+1	; 0x01
    2274:	82 81       	ldd	r24, Z+2	; 0x02
    2276:	93 81       	ldd	r25, Z+3	; 0x03
    2278:	20 e0       	ldi	r18, 0x00	; 0
    227a:	3f ef       	ldi	r19, 0xFF	; 255
    227c:	4f e7       	ldi	r20, 0x7F	; 127
    227e:	57 e4       	ldi	r21, 0x47	; 71
    2280:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2284:	18 16       	cp	r1, r24
    2286:	0c f0       	brlt	.+2      	; 0x228a <main+0x10c6>
    2288:	43 c0       	rjmp	.+134    	; 0x2310 <main+0x114c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    228a:	fe 01       	movw	r30, r28
    228c:	e3 59       	subi	r30, 0x93	; 147
    228e:	ff 4f       	sbci	r31, 0xFF	; 255
    2290:	60 81       	ld	r22, Z
    2292:	71 81       	ldd	r23, Z+1	; 0x01
    2294:	82 81       	ldd	r24, Z+2	; 0x02
    2296:	93 81       	ldd	r25, Z+3	; 0x03
    2298:	20 e0       	ldi	r18, 0x00	; 0
    229a:	30 e0       	ldi	r19, 0x00	; 0
    229c:	40 e2       	ldi	r20, 0x20	; 32
    229e:	51 e4       	ldi	r21, 0x41	; 65
    22a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22a4:	dc 01       	movw	r26, r24
    22a6:	cb 01       	movw	r24, r22
    22a8:	8e 01       	movw	r16, r28
    22aa:	09 59       	subi	r16, 0x99	; 153
    22ac:	1f 4f       	sbci	r17, 0xFF	; 255
    22ae:	bc 01       	movw	r22, r24
    22b0:	cd 01       	movw	r24, r26
    22b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22b6:	dc 01       	movw	r26, r24
    22b8:	cb 01       	movw	r24, r22
    22ba:	f8 01       	movw	r30, r16
    22bc:	91 83       	std	Z+1, r25	; 0x01
    22be:	80 83       	st	Z, r24
    22c0:	1f c0       	rjmp	.+62     	; 0x2300 <main+0x113c>
    22c2:	fe 01       	movw	r30, r28
    22c4:	eb 59       	subi	r30, 0x9B	; 155
    22c6:	ff 4f       	sbci	r31, 0xFF	; 255
    22c8:	89 e1       	ldi	r24, 0x19	; 25
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	91 83       	std	Z+1, r25	; 0x01
    22ce:	80 83       	st	Z, r24
    22d0:	fe 01       	movw	r30, r28
    22d2:	eb 59       	subi	r30, 0x9B	; 155
    22d4:	ff 4f       	sbci	r31, 0xFF	; 255
    22d6:	80 81       	ld	r24, Z
    22d8:	91 81       	ldd	r25, Z+1	; 0x01
    22da:	01 97       	sbiw	r24, 0x01	; 1
    22dc:	f1 f7       	brne	.-4      	; 0x22da <main+0x1116>
    22de:	fe 01       	movw	r30, r28
    22e0:	eb 59       	subi	r30, 0x9B	; 155
    22e2:	ff 4f       	sbci	r31, 0xFF	; 255
    22e4:	91 83       	std	Z+1, r25	; 0x01
    22e6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22e8:	de 01       	movw	r26, r28
    22ea:	a9 59       	subi	r26, 0x99	; 153
    22ec:	bf 4f       	sbci	r27, 0xFF	; 255
    22ee:	fe 01       	movw	r30, r28
    22f0:	e9 59       	subi	r30, 0x99	; 153
    22f2:	ff 4f       	sbci	r31, 0xFF	; 255
    22f4:	80 81       	ld	r24, Z
    22f6:	91 81       	ldd	r25, Z+1	; 0x01
    22f8:	01 97       	sbiw	r24, 0x01	; 1
    22fa:	11 96       	adiw	r26, 0x01	; 1
    22fc:	9c 93       	st	X, r25
    22fe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2300:	fe 01       	movw	r30, r28
    2302:	e9 59       	subi	r30, 0x99	; 153
    2304:	ff 4f       	sbci	r31, 0xFF	; 255
    2306:	80 81       	ld	r24, Z
    2308:	91 81       	ldd	r25, Z+1	; 0x01
    230a:	00 97       	sbiw	r24, 0x00	; 0
    230c:	d1 f6       	brne	.-76     	; 0x22c2 <main+0x10fe>
    230e:	27 c0       	rjmp	.+78     	; 0x235e <main+0x119a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2310:	8e 01       	movw	r16, r28
    2312:	09 59       	subi	r16, 0x99	; 153
    2314:	1f 4f       	sbci	r17, 0xFF	; 255
    2316:	fe 01       	movw	r30, r28
    2318:	e7 59       	subi	r30, 0x97	; 151
    231a:	ff 4f       	sbci	r31, 0xFF	; 255
    231c:	60 81       	ld	r22, Z
    231e:	71 81       	ldd	r23, Z+1	; 0x01
    2320:	82 81       	ldd	r24, Z+2	; 0x02
    2322:	93 81       	ldd	r25, Z+3	; 0x03
    2324:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2328:	dc 01       	movw	r26, r24
    232a:	cb 01       	movw	r24, r22
    232c:	f8 01       	movw	r30, r16
    232e:	91 83       	std	Z+1, r25	; 0x01
    2330:	80 83       	st	Z, r24
    2332:	de 01       	movw	r26, r28
    2334:	ad 59       	subi	r26, 0x9D	; 157
    2336:	bf 4f       	sbci	r27, 0xFF	; 255
    2338:	fe 01       	movw	r30, r28
    233a:	e9 59       	subi	r30, 0x99	; 153
    233c:	ff 4f       	sbci	r31, 0xFF	; 255
    233e:	80 81       	ld	r24, Z
    2340:	91 81       	ldd	r25, Z+1	; 0x01
    2342:	8d 93       	st	X+, r24
    2344:	9c 93       	st	X, r25
    2346:	fe 01       	movw	r30, r28
    2348:	ed 59       	subi	r30, 0x9D	; 157
    234a:	ff 4f       	sbci	r31, 0xFF	; 255
    234c:	80 81       	ld	r24, Z
    234e:	91 81       	ldd	r25, Z+1	; 0x01
    2350:	01 97       	sbiw	r24, 0x01	; 1
    2352:	f1 f7       	brne	.-4      	; 0x2350 <main+0x118c>
    2354:	fe 01       	movw	r30, r28
    2356:	ed 59       	subi	r30, 0x9D	; 157
    2358:	ff 4f       	sbci	r31, 0xFF	; 255
    235a:	91 83       	std	Z+1, r25	; 0x01
    235c:	80 83       	st	Z, r24
					_delay_ms(500);
					PORTC  &= ~(1<<5);
    235e:	a5 e3       	ldi	r26, 0x35	; 53
    2360:	b0 e0       	ldi	r27, 0x00	; 0
    2362:	e5 e3       	ldi	r30, 0x35	; 53
    2364:	f0 e0       	ldi	r31, 0x00	; 0
    2366:	80 81       	ld	r24, Z
    2368:	8f 7d       	andi	r24, 0xDF	; 223
    236a:	8c 93       	st	X, r24
    236c:	fe 01       	movw	r30, r28
    236e:	e1 5a       	subi	r30, 0xA1	; 161
    2370:	ff 4f       	sbci	r31, 0xFF	; 255
    2372:	80 e0       	ldi	r24, 0x00	; 0
    2374:	90 e0       	ldi	r25, 0x00	; 0
    2376:	aa ef       	ldi	r26, 0xFA	; 250
    2378:	b3 e4       	ldi	r27, 0x43	; 67
    237a:	80 83       	st	Z, r24
    237c:	91 83       	std	Z+1, r25	; 0x01
    237e:	a2 83       	std	Z+2, r26	; 0x02
    2380:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2382:	8e 01       	movw	r16, r28
    2384:	05 5a       	subi	r16, 0xA5	; 165
    2386:	1f 4f       	sbci	r17, 0xFF	; 255
    2388:	fe 01       	movw	r30, r28
    238a:	e1 5a       	subi	r30, 0xA1	; 161
    238c:	ff 4f       	sbci	r31, 0xFF	; 255
    238e:	60 81       	ld	r22, Z
    2390:	71 81       	ldd	r23, Z+1	; 0x01
    2392:	82 81       	ldd	r24, Z+2	; 0x02
    2394:	93 81       	ldd	r25, Z+3	; 0x03
    2396:	20 e0       	ldi	r18, 0x00	; 0
    2398:	30 e0       	ldi	r19, 0x00	; 0
    239a:	4a e7       	ldi	r20, 0x7A	; 122
    239c:	53 e4       	ldi	r21, 0x43	; 67
    239e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23a2:	dc 01       	movw	r26, r24
    23a4:	cb 01       	movw	r24, r22
    23a6:	f8 01       	movw	r30, r16
    23a8:	80 83       	st	Z, r24
    23aa:	91 83       	std	Z+1, r25	; 0x01
    23ac:	a2 83       	std	Z+2, r26	; 0x02
    23ae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23b0:	fe 01       	movw	r30, r28
    23b2:	e5 5a       	subi	r30, 0xA5	; 165
    23b4:	ff 4f       	sbci	r31, 0xFF	; 255
    23b6:	60 81       	ld	r22, Z
    23b8:	71 81       	ldd	r23, Z+1	; 0x01
    23ba:	82 81       	ldd	r24, Z+2	; 0x02
    23bc:	93 81       	ldd	r25, Z+3	; 0x03
    23be:	20 e0       	ldi	r18, 0x00	; 0
    23c0:	30 e0       	ldi	r19, 0x00	; 0
    23c2:	40 e8       	ldi	r20, 0x80	; 128
    23c4:	5f e3       	ldi	r21, 0x3F	; 63
    23c6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23ca:	88 23       	and	r24, r24
    23cc:	44 f4       	brge	.+16     	; 0x23de <main+0x121a>
		__ticks = 1;
    23ce:	fe 01       	movw	r30, r28
    23d0:	e7 5a       	subi	r30, 0xA7	; 167
    23d2:	ff 4f       	sbci	r31, 0xFF	; 255
    23d4:	81 e0       	ldi	r24, 0x01	; 1
    23d6:	90 e0       	ldi	r25, 0x00	; 0
    23d8:	91 83       	std	Z+1, r25	; 0x01
    23da:	80 83       	st	Z, r24
    23dc:	64 c0       	rjmp	.+200    	; 0x24a6 <main+0x12e2>
	else if (__tmp > 65535)
    23de:	fe 01       	movw	r30, r28
    23e0:	e5 5a       	subi	r30, 0xA5	; 165
    23e2:	ff 4f       	sbci	r31, 0xFF	; 255
    23e4:	60 81       	ld	r22, Z
    23e6:	71 81       	ldd	r23, Z+1	; 0x01
    23e8:	82 81       	ldd	r24, Z+2	; 0x02
    23ea:	93 81       	ldd	r25, Z+3	; 0x03
    23ec:	20 e0       	ldi	r18, 0x00	; 0
    23ee:	3f ef       	ldi	r19, 0xFF	; 255
    23f0:	4f e7       	ldi	r20, 0x7F	; 127
    23f2:	57 e4       	ldi	r21, 0x47	; 71
    23f4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23f8:	18 16       	cp	r1, r24
    23fa:	0c f0       	brlt	.+2      	; 0x23fe <main+0x123a>
    23fc:	43 c0       	rjmp	.+134    	; 0x2484 <main+0x12c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23fe:	fe 01       	movw	r30, r28
    2400:	e1 5a       	subi	r30, 0xA1	; 161
    2402:	ff 4f       	sbci	r31, 0xFF	; 255
    2404:	60 81       	ld	r22, Z
    2406:	71 81       	ldd	r23, Z+1	; 0x01
    2408:	82 81       	ldd	r24, Z+2	; 0x02
    240a:	93 81       	ldd	r25, Z+3	; 0x03
    240c:	20 e0       	ldi	r18, 0x00	; 0
    240e:	30 e0       	ldi	r19, 0x00	; 0
    2410:	40 e2       	ldi	r20, 0x20	; 32
    2412:	51 e4       	ldi	r21, 0x41	; 65
    2414:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2418:	dc 01       	movw	r26, r24
    241a:	cb 01       	movw	r24, r22
    241c:	8e 01       	movw	r16, r28
    241e:	07 5a       	subi	r16, 0xA7	; 167
    2420:	1f 4f       	sbci	r17, 0xFF	; 255
    2422:	bc 01       	movw	r22, r24
    2424:	cd 01       	movw	r24, r26
    2426:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    242a:	dc 01       	movw	r26, r24
    242c:	cb 01       	movw	r24, r22
    242e:	f8 01       	movw	r30, r16
    2430:	91 83       	std	Z+1, r25	; 0x01
    2432:	80 83       	st	Z, r24
    2434:	1f c0       	rjmp	.+62     	; 0x2474 <main+0x12b0>
    2436:	fe 01       	movw	r30, r28
    2438:	e9 5a       	subi	r30, 0xA9	; 169
    243a:	ff 4f       	sbci	r31, 0xFF	; 255
    243c:	89 e1       	ldi	r24, 0x19	; 25
    243e:	90 e0       	ldi	r25, 0x00	; 0
    2440:	91 83       	std	Z+1, r25	; 0x01
    2442:	80 83       	st	Z, r24
    2444:	fe 01       	movw	r30, r28
    2446:	e9 5a       	subi	r30, 0xA9	; 169
    2448:	ff 4f       	sbci	r31, 0xFF	; 255
    244a:	80 81       	ld	r24, Z
    244c:	91 81       	ldd	r25, Z+1	; 0x01
    244e:	01 97       	sbiw	r24, 0x01	; 1
    2450:	f1 f7       	brne	.-4      	; 0x244e <main+0x128a>
    2452:	fe 01       	movw	r30, r28
    2454:	e9 5a       	subi	r30, 0xA9	; 169
    2456:	ff 4f       	sbci	r31, 0xFF	; 255
    2458:	91 83       	std	Z+1, r25	; 0x01
    245a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    245c:	de 01       	movw	r26, r28
    245e:	a7 5a       	subi	r26, 0xA7	; 167
    2460:	bf 4f       	sbci	r27, 0xFF	; 255
    2462:	fe 01       	movw	r30, r28
    2464:	e7 5a       	subi	r30, 0xA7	; 167
    2466:	ff 4f       	sbci	r31, 0xFF	; 255
    2468:	80 81       	ld	r24, Z
    246a:	91 81       	ldd	r25, Z+1	; 0x01
    246c:	01 97       	sbiw	r24, 0x01	; 1
    246e:	11 96       	adiw	r26, 0x01	; 1
    2470:	9c 93       	st	X, r25
    2472:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2474:	fe 01       	movw	r30, r28
    2476:	e7 5a       	subi	r30, 0xA7	; 167
    2478:	ff 4f       	sbci	r31, 0xFF	; 255
    247a:	80 81       	ld	r24, Z
    247c:	91 81       	ldd	r25, Z+1	; 0x01
    247e:	00 97       	sbiw	r24, 0x00	; 0
    2480:	d1 f6       	brne	.-76     	; 0x2436 <main+0x1272>
    2482:	27 c0       	rjmp	.+78     	; 0x24d2 <main+0x130e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2484:	8e 01       	movw	r16, r28
    2486:	07 5a       	subi	r16, 0xA7	; 167
    2488:	1f 4f       	sbci	r17, 0xFF	; 255
    248a:	fe 01       	movw	r30, r28
    248c:	e5 5a       	subi	r30, 0xA5	; 165
    248e:	ff 4f       	sbci	r31, 0xFF	; 255
    2490:	60 81       	ld	r22, Z
    2492:	71 81       	ldd	r23, Z+1	; 0x01
    2494:	82 81       	ldd	r24, Z+2	; 0x02
    2496:	93 81       	ldd	r25, Z+3	; 0x03
    2498:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    249c:	dc 01       	movw	r26, r24
    249e:	cb 01       	movw	r24, r22
    24a0:	f8 01       	movw	r30, r16
    24a2:	91 83       	std	Z+1, r25	; 0x01
    24a4:	80 83       	st	Z, r24
    24a6:	de 01       	movw	r26, r28
    24a8:	ab 5a       	subi	r26, 0xAB	; 171
    24aa:	bf 4f       	sbci	r27, 0xFF	; 255
    24ac:	fe 01       	movw	r30, r28
    24ae:	e7 5a       	subi	r30, 0xA7	; 167
    24b0:	ff 4f       	sbci	r31, 0xFF	; 255
    24b2:	80 81       	ld	r24, Z
    24b4:	91 81       	ldd	r25, Z+1	; 0x01
    24b6:	8d 93       	st	X+, r24
    24b8:	9c 93       	st	X, r25
    24ba:	fe 01       	movw	r30, r28
    24bc:	eb 5a       	subi	r30, 0xAB	; 171
    24be:	ff 4f       	sbci	r31, 0xFF	; 255
    24c0:	80 81       	ld	r24, Z
    24c2:	91 81       	ldd	r25, Z+1	; 0x01
    24c4:	01 97       	sbiw	r24, 0x01	; 1
    24c6:	f1 f7       	brne	.-4      	; 0x24c4 <main+0x1300>
    24c8:	fe 01       	movw	r30, r28
    24ca:	eb 5a       	subi	r30, 0xAB	; 171
    24cc:	ff 4f       	sbci	r31, 0xFF	; 255
    24ce:	91 83       	std	Z+1, r25	; 0x01
    24d0:	80 83       	st	Z, r24
					_delay_ms(500);

					PORTC  |= (1<<5);   //3rd iteration
    24d2:	a5 e3       	ldi	r26, 0x35	; 53
    24d4:	b0 e0       	ldi	r27, 0x00	; 0
    24d6:	e5 e3       	ldi	r30, 0x35	; 53
    24d8:	f0 e0       	ldi	r31, 0x00	; 0
    24da:	80 81       	ld	r24, Z
    24dc:	80 62       	ori	r24, 0x20	; 32
    24de:	8c 93       	st	X, r24
    24e0:	fe 01       	movw	r30, r28
    24e2:	ef 5a       	subi	r30, 0xAF	; 175
    24e4:	ff 4f       	sbci	r31, 0xFF	; 255
    24e6:	80 e0       	ldi	r24, 0x00	; 0
    24e8:	90 e0       	ldi	r25, 0x00	; 0
    24ea:	aa ef       	ldi	r26, 0xFA	; 250
    24ec:	b3 e4       	ldi	r27, 0x43	; 67
    24ee:	80 83       	st	Z, r24
    24f0:	91 83       	std	Z+1, r25	; 0x01
    24f2:	a2 83       	std	Z+2, r26	; 0x02
    24f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24f6:	8e 01       	movw	r16, r28
    24f8:	03 5b       	subi	r16, 0xB3	; 179
    24fa:	1f 4f       	sbci	r17, 0xFF	; 255
    24fc:	fe 01       	movw	r30, r28
    24fe:	ef 5a       	subi	r30, 0xAF	; 175
    2500:	ff 4f       	sbci	r31, 0xFF	; 255
    2502:	60 81       	ld	r22, Z
    2504:	71 81       	ldd	r23, Z+1	; 0x01
    2506:	82 81       	ldd	r24, Z+2	; 0x02
    2508:	93 81       	ldd	r25, Z+3	; 0x03
    250a:	20 e0       	ldi	r18, 0x00	; 0
    250c:	30 e0       	ldi	r19, 0x00	; 0
    250e:	4a e7       	ldi	r20, 0x7A	; 122
    2510:	53 e4       	ldi	r21, 0x43	; 67
    2512:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2516:	dc 01       	movw	r26, r24
    2518:	cb 01       	movw	r24, r22
    251a:	f8 01       	movw	r30, r16
    251c:	80 83       	st	Z, r24
    251e:	91 83       	std	Z+1, r25	; 0x01
    2520:	a2 83       	std	Z+2, r26	; 0x02
    2522:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2524:	fe 01       	movw	r30, r28
    2526:	e3 5b       	subi	r30, 0xB3	; 179
    2528:	ff 4f       	sbci	r31, 0xFF	; 255
    252a:	60 81       	ld	r22, Z
    252c:	71 81       	ldd	r23, Z+1	; 0x01
    252e:	82 81       	ldd	r24, Z+2	; 0x02
    2530:	93 81       	ldd	r25, Z+3	; 0x03
    2532:	20 e0       	ldi	r18, 0x00	; 0
    2534:	30 e0       	ldi	r19, 0x00	; 0
    2536:	40 e8       	ldi	r20, 0x80	; 128
    2538:	5f e3       	ldi	r21, 0x3F	; 63
    253a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    253e:	88 23       	and	r24, r24
    2540:	44 f4       	brge	.+16     	; 0x2552 <main+0x138e>
		__ticks = 1;
    2542:	fe 01       	movw	r30, r28
    2544:	e5 5b       	subi	r30, 0xB5	; 181
    2546:	ff 4f       	sbci	r31, 0xFF	; 255
    2548:	81 e0       	ldi	r24, 0x01	; 1
    254a:	90 e0       	ldi	r25, 0x00	; 0
    254c:	91 83       	std	Z+1, r25	; 0x01
    254e:	80 83       	st	Z, r24
    2550:	64 c0       	rjmp	.+200    	; 0x261a <main+0x1456>
	else if (__tmp > 65535)
    2552:	fe 01       	movw	r30, r28
    2554:	e3 5b       	subi	r30, 0xB3	; 179
    2556:	ff 4f       	sbci	r31, 0xFF	; 255
    2558:	60 81       	ld	r22, Z
    255a:	71 81       	ldd	r23, Z+1	; 0x01
    255c:	82 81       	ldd	r24, Z+2	; 0x02
    255e:	93 81       	ldd	r25, Z+3	; 0x03
    2560:	20 e0       	ldi	r18, 0x00	; 0
    2562:	3f ef       	ldi	r19, 0xFF	; 255
    2564:	4f e7       	ldi	r20, 0x7F	; 127
    2566:	57 e4       	ldi	r21, 0x47	; 71
    2568:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    256c:	18 16       	cp	r1, r24
    256e:	0c f0       	brlt	.+2      	; 0x2572 <main+0x13ae>
    2570:	43 c0       	rjmp	.+134    	; 0x25f8 <main+0x1434>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2572:	fe 01       	movw	r30, r28
    2574:	ef 5a       	subi	r30, 0xAF	; 175
    2576:	ff 4f       	sbci	r31, 0xFF	; 255
    2578:	60 81       	ld	r22, Z
    257a:	71 81       	ldd	r23, Z+1	; 0x01
    257c:	82 81       	ldd	r24, Z+2	; 0x02
    257e:	93 81       	ldd	r25, Z+3	; 0x03
    2580:	20 e0       	ldi	r18, 0x00	; 0
    2582:	30 e0       	ldi	r19, 0x00	; 0
    2584:	40 e2       	ldi	r20, 0x20	; 32
    2586:	51 e4       	ldi	r21, 0x41	; 65
    2588:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    258c:	dc 01       	movw	r26, r24
    258e:	cb 01       	movw	r24, r22
    2590:	8e 01       	movw	r16, r28
    2592:	05 5b       	subi	r16, 0xB5	; 181
    2594:	1f 4f       	sbci	r17, 0xFF	; 255
    2596:	bc 01       	movw	r22, r24
    2598:	cd 01       	movw	r24, r26
    259a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    259e:	dc 01       	movw	r26, r24
    25a0:	cb 01       	movw	r24, r22
    25a2:	f8 01       	movw	r30, r16
    25a4:	91 83       	std	Z+1, r25	; 0x01
    25a6:	80 83       	st	Z, r24
    25a8:	1f c0       	rjmp	.+62     	; 0x25e8 <main+0x1424>
    25aa:	fe 01       	movw	r30, r28
    25ac:	e7 5b       	subi	r30, 0xB7	; 183
    25ae:	ff 4f       	sbci	r31, 0xFF	; 255
    25b0:	89 e1       	ldi	r24, 0x19	; 25
    25b2:	90 e0       	ldi	r25, 0x00	; 0
    25b4:	91 83       	std	Z+1, r25	; 0x01
    25b6:	80 83       	st	Z, r24
    25b8:	fe 01       	movw	r30, r28
    25ba:	e7 5b       	subi	r30, 0xB7	; 183
    25bc:	ff 4f       	sbci	r31, 0xFF	; 255
    25be:	80 81       	ld	r24, Z
    25c0:	91 81       	ldd	r25, Z+1	; 0x01
    25c2:	01 97       	sbiw	r24, 0x01	; 1
    25c4:	f1 f7       	brne	.-4      	; 0x25c2 <main+0x13fe>
    25c6:	fe 01       	movw	r30, r28
    25c8:	e7 5b       	subi	r30, 0xB7	; 183
    25ca:	ff 4f       	sbci	r31, 0xFF	; 255
    25cc:	91 83       	std	Z+1, r25	; 0x01
    25ce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25d0:	de 01       	movw	r26, r28
    25d2:	a5 5b       	subi	r26, 0xB5	; 181
    25d4:	bf 4f       	sbci	r27, 0xFF	; 255
    25d6:	fe 01       	movw	r30, r28
    25d8:	e5 5b       	subi	r30, 0xB5	; 181
    25da:	ff 4f       	sbci	r31, 0xFF	; 255
    25dc:	80 81       	ld	r24, Z
    25de:	91 81       	ldd	r25, Z+1	; 0x01
    25e0:	01 97       	sbiw	r24, 0x01	; 1
    25e2:	11 96       	adiw	r26, 0x01	; 1
    25e4:	9c 93       	st	X, r25
    25e6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25e8:	fe 01       	movw	r30, r28
    25ea:	e5 5b       	subi	r30, 0xB5	; 181
    25ec:	ff 4f       	sbci	r31, 0xFF	; 255
    25ee:	80 81       	ld	r24, Z
    25f0:	91 81       	ldd	r25, Z+1	; 0x01
    25f2:	00 97       	sbiw	r24, 0x00	; 0
    25f4:	d1 f6       	brne	.-76     	; 0x25aa <main+0x13e6>
    25f6:	27 c0       	rjmp	.+78     	; 0x2646 <main+0x1482>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25f8:	8e 01       	movw	r16, r28
    25fa:	05 5b       	subi	r16, 0xB5	; 181
    25fc:	1f 4f       	sbci	r17, 0xFF	; 255
    25fe:	fe 01       	movw	r30, r28
    2600:	e3 5b       	subi	r30, 0xB3	; 179
    2602:	ff 4f       	sbci	r31, 0xFF	; 255
    2604:	60 81       	ld	r22, Z
    2606:	71 81       	ldd	r23, Z+1	; 0x01
    2608:	82 81       	ldd	r24, Z+2	; 0x02
    260a:	93 81       	ldd	r25, Z+3	; 0x03
    260c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2610:	dc 01       	movw	r26, r24
    2612:	cb 01       	movw	r24, r22
    2614:	f8 01       	movw	r30, r16
    2616:	91 83       	std	Z+1, r25	; 0x01
    2618:	80 83       	st	Z, r24
    261a:	de 01       	movw	r26, r28
    261c:	a9 5b       	subi	r26, 0xB9	; 185
    261e:	bf 4f       	sbci	r27, 0xFF	; 255
    2620:	fe 01       	movw	r30, r28
    2622:	e5 5b       	subi	r30, 0xB5	; 181
    2624:	ff 4f       	sbci	r31, 0xFF	; 255
    2626:	80 81       	ld	r24, Z
    2628:	91 81       	ldd	r25, Z+1	; 0x01
    262a:	8d 93       	st	X+, r24
    262c:	9c 93       	st	X, r25
    262e:	fe 01       	movw	r30, r28
    2630:	e9 5b       	subi	r30, 0xB9	; 185
    2632:	ff 4f       	sbci	r31, 0xFF	; 255
    2634:	80 81       	ld	r24, Z
    2636:	91 81       	ldd	r25, Z+1	; 0x01
    2638:	01 97       	sbiw	r24, 0x01	; 1
    263a:	f1 f7       	brne	.-4      	; 0x2638 <main+0x1474>
    263c:	fe 01       	movw	r30, r28
    263e:	e9 5b       	subi	r30, 0xB9	; 185
    2640:	ff 4f       	sbci	r31, 0xFF	; 255
    2642:	91 83       	std	Z+1, r25	; 0x01
    2644:	80 83       	st	Z, r24
					_delay_ms(500);
					PORTC  &= ~(1<<5);
    2646:	a5 e3       	ldi	r26, 0x35	; 53
    2648:	b0 e0       	ldi	r27, 0x00	; 0
    264a:	e5 e3       	ldi	r30, 0x35	; 53
    264c:	f0 e0       	ldi	r31, 0x00	; 0
    264e:	80 81       	ld	r24, Z
    2650:	8f 7d       	andi	r24, 0xDF	; 223
    2652:	8c 93       	st	X, r24
    2654:	fe 01       	movw	r30, r28
    2656:	ed 5b       	subi	r30, 0xBD	; 189
    2658:	ff 4f       	sbci	r31, 0xFF	; 255
    265a:	80 e0       	ldi	r24, 0x00	; 0
    265c:	90 e0       	ldi	r25, 0x00	; 0
    265e:	aa ef       	ldi	r26, 0xFA	; 250
    2660:	b3 e4       	ldi	r27, 0x43	; 67
    2662:	80 83       	st	Z, r24
    2664:	91 83       	std	Z+1, r25	; 0x01
    2666:	a2 83       	std	Z+2, r26	; 0x02
    2668:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    266a:	8e 01       	movw	r16, r28
    266c:	01 5c       	subi	r16, 0xC1	; 193
    266e:	1f 4f       	sbci	r17, 0xFF	; 255
    2670:	fe 01       	movw	r30, r28
    2672:	ed 5b       	subi	r30, 0xBD	; 189
    2674:	ff 4f       	sbci	r31, 0xFF	; 255
    2676:	60 81       	ld	r22, Z
    2678:	71 81       	ldd	r23, Z+1	; 0x01
    267a:	82 81       	ldd	r24, Z+2	; 0x02
    267c:	93 81       	ldd	r25, Z+3	; 0x03
    267e:	20 e0       	ldi	r18, 0x00	; 0
    2680:	30 e0       	ldi	r19, 0x00	; 0
    2682:	4a e7       	ldi	r20, 0x7A	; 122
    2684:	53 e4       	ldi	r21, 0x43	; 67
    2686:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    268a:	dc 01       	movw	r26, r24
    268c:	cb 01       	movw	r24, r22
    268e:	f8 01       	movw	r30, r16
    2690:	80 83       	st	Z, r24
    2692:	91 83       	std	Z+1, r25	; 0x01
    2694:	a2 83       	std	Z+2, r26	; 0x02
    2696:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2698:	fe 01       	movw	r30, r28
    269a:	ff 96       	adiw	r30, 0x3f	; 63
    269c:	60 81       	ld	r22, Z
    269e:	71 81       	ldd	r23, Z+1	; 0x01
    26a0:	82 81       	ldd	r24, Z+2	; 0x02
    26a2:	93 81       	ldd	r25, Z+3	; 0x03
    26a4:	20 e0       	ldi	r18, 0x00	; 0
    26a6:	30 e0       	ldi	r19, 0x00	; 0
    26a8:	40 e8       	ldi	r20, 0x80	; 128
    26aa:	5f e3       	ldi	r21, 0x3F	; 63
    26ac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26b0:	88 23       	and	r24, r24
    26b2:	2c f4       	brge	.+10     	; 0x26be <main+0x14fa>
		__ticks = 1;
    26b4:	81 e0       	ldi	r24, 0x01	; 1
    26b6:	90 e0       	ldi	r25, 0x00	; 0
    26b8:	9e af       	std	Y+62, r25	; 0x3e
    26ba:	8d af       	std	Y+61, r24	; 0x3d
    26bc:	46 c0       	rjmp	.+140    	; 0x274a <main+0x1586>
	else if (__tmp > 65535)
    26be:	fe 01       	movw	r30, r28
    26c0:	ff 96       	adiw	r30, 0x3f	; 63
    26c2:	60 81       	ld	r22, Z
    26c4:	71 81       	ldd	r23, Z+1	; 0x01
    26c6:	82 81       	ldd	r24, Z+2	; 0x02
    26c8:	93 81       	ldd	r25, Z+3	; 0x03
    26ca:	20 e0       	ldi	r18, 0x00	; 0
    26cc:	3f ef       	ldi	r19, 0xFF	; 255
    26ce:	4f e7       	ldi	r20, 0x7F	; 127
    26d0:	57 e4       	ldi	r21, 0x47	; 71
    26d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26d6:	18 16       	cp	r1, r24
    26d8:	64 f5       	brge	.+88     	; 0x2732 <main+0x156e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26da:	fe 01       	movw	r30, r28
    26dc:	ed 5b       	subi	r30, 0xBD	; 189
    26de:	ff 4f       	sbci	r31, 0xFF	; 255
    26e0:	60 81       	ld	r22, Z
    26e2:	71 81       	ldd	r23, Z+1	; 0x01
    26e4:	82 81       	ldd	r24, Z+2	; 0x02
    26e6:	93 81       	ldd	r25, Z+3	; 0x03
    26e8:	20 e0       	ldi	r18, 0x00	; 0
    26ea:	30 e0       	ldi	r19, 0x00	; 0
    26ec:	40 e2       	ldi	r20, 0x20	; 32
    26ee:	51 e4       	ldi	r21, 0x41	; 65
    26f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26f4:	dc 01       	movw	r26, r24
    26f6:	cb 01       	movw	r24, r22
    26f8:	bc 01       	movw	r22, r24
    26fa:	cd 01       	movw	r24, r26
    26fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2700:	dc 01       	movw	r26, r24
    2702:	cb 01       	movw	r24, r22
    2704:	9e af       	std	Y+62, r25	; 0x3e
    2706:	8d af       	std	Y+61, r24	; 0x3d
    2708:	0f c0       	rjmp	.+30     	; 0x2728 <main+0x1564>
    270a:	89 e1       	ldi	r24, 0x19	; 25
    270c:	90 e0       	ldi	r25, 0x00	; 0
    270e:	9c af       	std	Y+60, r25	; 0x3c
    2710:	8b af       	std	Y+59, r24	; 0x3b
    2712:	8b ad       	ldd	r24, Y+59	; 0x3b
    2714:	9c ad       	ldd	r25, Y+60	; 0x3c
    2716:	01 97       	sbiw	r24, 0x01	; 1
    2718:	f1 f7       	brne	.-4      	; 0x2716 <main+0x1552>
    271a:	9c af       	std	Y+60, r25	; 0x3c
    271c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    271e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2720:	9e ad       	ldd	r25, Y+62	; 0x3e
    2722:	01 97       	sbiw	r24, 0x01	; 1
    2724:	9e af       	std	Y+62, r25	; 0x3e
    2726:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2728:	8d ad       	ldd	r24, Y+61	; 0x3d
    272a:	9e ad       	ldd	r25, Y+62	; 0x3e
    272c:	00 97       	sbiw	r24, 0x00	; 0
    272e:	69 f7       	brne	.-38     	; 0x270a <main+0x1546>
    2730:	16 c0       	rjmp	.+44     	; 0x275e <main+0x159a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2732:	fe 01       	movw	r30, r28
    2734:	ff 96       	adiw	r30, 0x3f	; 63
    2736:	60 81       	ld	r22, Z
    2738:	71 81       	ldd	r23, Z+1	; 0x01
    273a:	82 81       	ldd	r24, Z+2	; 0x02
    273c:	93 81       	ldd	r25, Z+3	; 0x03
    273e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2742:	dc 01       	movw	r26, r24
    2744:	cb 01       	movw	r24, r22
    2746:	9e af       	std	Y+62, r25	; 0x3e
    2748:	8d af       	std	Y+61, r24	; 0x3d
    274a:	8d ad       	ldd	r24, Y+61	; 0x3d
    274c:	9e ad       	ldd	r25, Y+62	; 0x3e
    274e:	9a af       	std	Y+58, r25	; 0x3a
    2750:	89 af       	std	Y+57, r24	; 0x39
    2752:	89 ad       	ldd	r24, Y+57	; 0x39
    2754:	9a ad       	ldd	r25, Y+58	; 0x3a
    2756:	01 97       	sbiw	r24, 0x01	; 1
    2758:	f1 f7       	brne	.-4      	; 0x2756 <main+0x1592>
    275a:	9a af       	std	Y+58, r25	; 0x3a
    275c:	89 af       	std	Y+57, r24	; 0x39
				}


			}
			}
			while( !(PIND & (1<<PD3)) ){} // wait until switch is released
    275e:	e0 e3       	ldi	r30, 0x30	; 48
    2760:	f0 e0       	ldi	r31, 0x00	; 0
    2762:	80 81       	ld	r24, Z
    2764:	88 2f       	mov	r24, r24
    2766:	90 e0       	ldi	r25, 0x00	; 0
    2768:	88 70       	andi	r24, 0x08	; 8
    276a:	90 70       	andi	r25, 0x00	; 0
    276c:	00 97       	sbiw	r24, 0x00	; 0
    276e:	b9 f3       	breq	.-18     	; 0x275e <main+0x159a>
    2770:	a4 c0       	rjmp	.+328    	; 0x28ba <main+0x16f6>
		}
		else if(!(PIND & (1<<PD4))) //pause
    2772:	e0 e3       	ldi	r30, 0x30	; 48
    2774:	f0 e0       	ldi	r31, 0x00	; 0
    2776:	80 81       	ld	r24, Z
    2778:	88 2f       	mov	r24, r24
    277a:	90 e0       	ldi	r25, 0x00	; 0
    277c:	80 71       	andi	r24, 0x10	; 16
    277e:	90 70       	andi	r25, 0x00	; 0
    2780:	00 97       	sbiw	r24, 0x00	; 0
    2782:	09 f0       	breq	.+2      	; 0x2786 <main+0x15c2>
    2784:	9a c0       	rjmp	.+308    	; 0x28ba <main+0x16f6>
    2786:	80 e0       	ldi	r24, 0x00	; 0
    2788:	90 e0       	ldi	r25, 0x00	; 0
    278a:	a0 ef       	ldi	r26, 0xF0	; 240
    278c:	b1 e4       	ldi	r27, 0x41	; 65
    278e:	8d ab       	std	Y+53, r24	; 0x35
    2790:	9e ab       	std	Y+54, r25	; 0x36
    2792:	af ab       	std	Y+55, r26	; 0x37
    2794:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2796:	6d a9       	ldd	r22, Y+53	; 0x35
    2798:	7e a9       	ldd	r23, Y+54	; 0x36
    279a:	8f a9       	ldd	r24, Y+55	; 0x37
    279c:	98 ad       	ldd	r25, Y+56	; 0x38
    279e:	20 e0       	ldi	r18, 0x00	; 0
    27a0:	30 e0       	ldi	r19, 0x00	; 0
    27a2:	4a e7       	ldi	r20, 0x7A	; 122
    27a4:	53 e4       	ldi	r21, 0x43	; 67
    27a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27aa:	dc 01       	movw	r26, r24
    27ac:	cb 01       	movw	r24, r22
    27ae:	89 ab       	std	Y+49, r24	; 0x31
    27b0:	9a ab       	std	Y+50, r25	; 0x32
    27b2:	ab ab       	std	Y+51, r26	; 0x33
    27b4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    27b6:	69 a9       	ldd	r22, Y+49	; 0x31
    27b8:	7a a9       	ldd	r23, Y+50	; 0x32
    27ba:	8b a9       	ldd	r24, Y+51	; 0x33
    27bc:	9c a9       	ldd	r25, Y+52	; 0x34
    27be:	20 e0       	ldi	r18, 0x00	; 0
    27c0:	30 e0       	ldi	r19, 0x00	; 0
    27c2:	40 e8       	ldi	r20, 0x80	; 128
    27c4:	5f e3       	ldi	r21, 0x3F	; 63
    27c6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    27ca:	88 23       	and	r24, r24
    27cc:	2c f4       	brge	.+10     	; 0x27d8 <main+0x1614>
		__ticks = 1;
    27ce:	81 e0       	ldi	r24, 0x01	; 1
    27d0:	90 e0       	ldi	r25, 0x00	; 0
    27d2:	98 ab       	std	Y+48, r25	; 0x30
    27d4:	8f a7       	std	Y+47, r24	; 0x2f
    27d6:	3f c0       	rjmp	.+126    	; 0x2856 <main+0x1692>
	else if (__tmp > 65535)
    27d8:	69 a9       	ldd	r22, Y+49	; 0x31
    27da:	7a a9       	ldd	r23, Y+50	; 0x32
    27dc:	8b a9       	ldd	r24, Y+51	; 0x33
    27de:	9c a9       	ldd	r25, Y+52	; 0x34
    27e0:	20 e0       	ldi	r18, 0x00	; 0
    27e2:	3f ef       	ldi	r19, 0xFF	; 255
    27e4:	4f e7       	ldi	r20, 0x7F	; 127
    27e6:	57 e4       	ldi	r21, 0x47	; 71
    27e8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    27ec:	18 16       	cp	r1, r24
    27ee:	4c f5       	brge	.+82     	; 0x2842 <main+0x167e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27f0:	6d a9       	ldd	r22, Y+53	; 0x35
    27f2:	7e a9       	ldd	r23, Y+54	; 0x36
    27f4:	8f a9       	ldd	r24, Y+55	; 0x37
    27f6:	98 ad       	ldd	r25, Y+56	; 0x38
    27f8:	20 e0       	ldi	r18, 0x00	; 0
    27fa:	30 e0       	ldi	r19, 0x00	; 0
    27fc:	40 e2       	ldi	r20, 0x20	; 32
    27fe:	51 e4       	ldi	r21, 0x41	; 65
    2800:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2804:	dc 01       	movw	r26, r24
    2806:	cb 01       	movw	r24, r22
    2808:	bc 01       	movw	r22, r24
    280a:	cd 01       	movw	r24, r26
    280c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2810:	dc 01       	movw	r26, r24
    2812:	cb 01       	movw	r24, r22
    2814:	98 ab       	std	Y+48, r25	; 0x30
    2816:	8f a7       	std	Y+47, r24	; 0x2f
    2818:	0f c0       	rjmp	.+30     	; 0x2838 <main+0x1674>
    281a:	89 e1       	ldi	r24, 0x19	; 25
    281c:	90 e0       	ldi	r25, 0x00	; 0
    281e:	9e a7       	std	Y+46, r25	; 0x2e
    2820:	8d a7       	std	Y+45, r24	; 0x2d
    2822:	8d a5       	ldd	r24, Y+45	; 0x2d
    2824:	9e a5       	ldd	r25, Y+46	; 0x2e
    2826:	01 97       	sbiw	r24, 0x01	; 1
    2828:	f1 f7       	brne	.-4      	; 0x2826 <main+0x1662>
    282a:	9e a7       	std	Y+46, r25	; 0x2e
    282c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    282e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2830:	98 a9       	ldd	r25, Y+48	; 0x30
    2832:	01 97       	sbiw	r24, 0x01	; 1
    2834:	98 ab       	std	Y+48, r25	; 0x30
    2836:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2838:	8f a5       	ldd	r24, Y+47	; 0x2f
    283a:	98 a9       	ldd	r25, Y+48	; 0x30
    283c:	00 97       	sbiw	r24, 0x00	; 0
    283e:	69 f7       	brne	.-38     	; 0x281a <main+0x1656>
    2840:	14 c0       	rjmp	.+40     	; 0x286a <main+0x16a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2842:	69 a9       	ldd	r22, Y+49	; 0x31
    2844:	7a a9       	ldd	r23, Y+50	; 0x32
    2846:	8b a9       	ldd	r24, Y+51	; 0x33
    2848:	9c a9       	ldd	r25, Y+52	; 0x34
    284a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    284e:	dc 01       	movw	r26, r24
    2850:	cb 01       	movw	r24, r22
    2852:	98 ab       	std	Y+48, r25	; 0x30
    2854:	8f a7       	std	Y+47, r24	; 0x2f
    2856:	8f a5       	ldd	r24, Y+47	; 0x2f
    2858:	98 a9       	ldd	r25, Y+48	; 0x30
    285a:	9c a7       	std	Y+44, r25	; 0x2c
    285c:	8b a7       	std	Y+43, r24	; 0x2b
    285e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2860:	9c a5       	ldd	r25, Y+44	; 0x2c
    2862:	01 97       	sbiw	r24, 0x01	; 1
    2864:	f1 f7       	brne	.-4      	; 0x2862 <main+0x169e>
    2866:	9c a7       	std	Y+44, r25	; 0x2c
    2868:	8b a7       	std	Y+43, r24	; 0x2b
		{
			_delay_ms(30);
			if( !(PIND & (1<<PD4)) ) //second check due to switch bouncing
    286a:	e0 e3       	ldi	r30, 0x30	; 48
    286c:	f0 e0       	ldi	r31, 0x00	; 0
    286e:	80 81       	ld	r24, Z
    2870:	88 2f       	mov	r24, r24
    2872:	90 e0       	ldi	r25, 0x00	; 0
    2874:	80 71       	andi	r24, 0x10	; 16
    2876:	90 70       	andi	r25, 0x00	; 0
    2878:	00 97       	sbiw	r24, 0x00	; 0
    287a:	b1 f4       	brne	.+44     	; 0x28a8 <main+0x16e4>
			{
				if(enable == 1){
    287c:	fe 01       	movw	r30, r28
    287e:	e1 50       	subi	r30, 0x01	; 1
    2880:	ff 4f       	sbci	r31, 0xFF	; 255
    2882:	80 81       	ld	r24, Z
    2884:	81 30       	cpi	r24, 0x01	; 1
    2886:	29 f4       	brne	.+10     	; 0x2892 <main+0x16ce>
					enable = 0;
    2888:	fe 01       	movw	r30, r28
    288a:	e1 50       	subi	r30, 0x01	; 1
    288c:	ff 4f       	sbci	r31, 0xFF	; 255
    288e:	10 82       	st	Z, r1
    2890:	0b c0       	rjmp	.+22     	; 0x28a8 <main+0x16e4>
				}
				else if (enable == 0){
    2892:	fe 01       	movw	r30, r28
    2894:	e1 50       	subi	r30, 0x01	; 1
    2896:	ff 4f       	sbci	r31, 0xFF	; 255
    2898:	80 81       	ld	r24, Z
    289a:	88 23       	and	r24, r24
    289c:	29 f4       	brne	.+10     	; 0x28a8 <main+0x16e4>
					enable = 1;
    289e:	fe 01       	movw	r30, r28
    28a0:	e1 50       	subi	r30, 0x01	; 1
    28a2:	ff 4f       	sbci	r31, 0xFF	; 255
    28a4:	81 e0       	ldi	r24, 0x01	; 1
    28a6:	80 83       	st	Z, r24
				}

			}
			while( !(PIND & (1<<PD4)) ){} // wait until switch is released
    28a8:	e0 e3       	ldi	r30, 0x30	; 48
    28aa:	f0 e0       	ldi	r31, 0x00	; 0
    28ac:	80 81       	ld	r24, Z
    28ae:	88 2f       	mov	r24, r24
    28b0:	90 e0       	ldi	r25, 0x00	; 0
    28b2:	80 71       	andi	r24, 0x10	; 16
    28b4:	90 70       	andi	r25, 0x00	; 0
    28b6:	00 97       	sbiw	r24, 0x00	; 0
    28b8:	b9 f3       	breq	.-18     	; 0x28a8 <main+0x16e4>

		}

		if( !(PIND & (1<<PD5)) ) // reset
    28ba:	e0 e3       	ldi	r30, 0x30	; 48
    28bc:	f0 e0       	ldi	r31, 0x00	; 0
    28be:	80 81       	ld	r24, Z
    28c0:	88 2f       	mov	r24, r24
    28c2:	90 e0       	ldi	r25, 0x00	; 0
    28c4:	80 72       	andi	r24, 0x20	; 32
    28c6:	90 70       	andi	r25, 0x00	; 0
    28c8:	00 97       	sbiw	r24, 0x00	; 0
    28ca:	11 f0       	breq	.+4      	; 0x28d0 <main+0x170c>
    28cc:	0c 94 36 09 	jmp	0x126c	; 0x126c <main+0xa8>
    28d0:	80 e0       	ldi	r24, 0x00	; 0
    28d2:	90 e0       	ldi	r25, 0x00	; 0
    28d4:	a0 ef       	ldi	r26, 0xF0	; 240
    28d6:	b1 e4       	ldi	r27, 0x41	; 65
    28d8:	8f a3       	std	Y+39, r24	; 0x27
    28da:	98 a7       	std	Y+40, r25	; 0x28
    28dc:	a9 a7       	std	Y+41, r26	; 0x29
    28de:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28e0:	6f a1       	ldd	r22, Y+39	; 0x27
    28e2:	78 a5       	ldd	r23, Y+40	; 0x28
    28e4:	89 a5       	ldd	r24, Y+41	; 0x29
    28e6:	9a a5       	ldd	r25, Y+42	; 0x2a
    28e8:	20 e0       	ldi	r18, 0x00	; 0
    28ea:	30 e0       	ldi	r19, 0x00	; 0
    28ec:	4a e7       	ldi	r20, 0x7A	; 122
    28ee:	53 e4       	ldi	r21, 0x43	; 67
    28f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28f4:	dc 01       	movw	r26, r24
    28f6:	cb 01       	movw	r24, r22
    28f8:	8b a3       	std	Y+35, r24	; 0x23
    28fa:	9c a3       	std	Y+36, r25	; 0x24
    28fc:	ad a3       	std	Y+37, r26	; 0x25
    28fe:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2900:	6b a1       	ldd	r22, Y+35	; 0x23
    2902:	7c a1       	ldd	r23, Y+36	; 0x24
    2904:	8d a1       	ldd	r24, Y+37	; 0x25
    2906:	9e a1       	ldd	r25, Y+38	; 0x26
    2908:	20 e0       	ldi	r18, 0x00	; 0
    290a:	30 e0       	ldi	r19, 0x00	; 0
    290c:	40 e8       	ldi	r20, 0x80	; 128
    290e:	5f e3       	ldi	r21, 0x3F	; 63
    2910:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2914:	88 23       	and	r24, r24
    2916:	2c f4       	brge	.+10     	; 0x2922 <main+0x175e>
		__ticks = 1;
    2918:	81 e0       	ldi	r24, 0x01	; 1
    291a:	90 e0       	ldi	r25, 0x00	; 0
    291c:	9a a3       	std	Y+34, r25	; 0x22
    291e:	89 a3       	std	Y+33, r24	; 0x21
    2920:	3f c0       	rjmp	.+126    	; 0x29a0 <main+0x17dc>
	else if (__tmp > 65535)
    2922:	6b a1       	ldd	r22, Y+35	; 0x23
    2924:	7c a1       	ldd	r23, Y+36	; 0x24
    2926:	8d a1       	ldd	r24, Y+37	; 0x25
    2928:	9e a1       	ldd	r25, Y+38	; 0x26
    292a:	20 e0       	ldi	r18, 0x00	; 0
    292c:	3f ef       	ldi	r19, 0xFF	; 255
    292e:	4f e7       	ldi	r20, 0x7F	; 127
    2930:	57 e4       	ldi	r21, 0x47	; 71
    2932:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2936:	18 16       	cp	r1, r24
    2938:	4c f5       	brge	.+82     	; 0x298c <main+0x17c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    293a:	6f a1       	ldd	r22, Y+39	; 0x27
    293c:	78 a5       	ldd	r23, Y+40	; 0x28
    293e:	89 a5       	ldd	r24, Y+41	; 0x29
    2940:	9a a5       	ldd	r25, Y+42	; 0x2a
    2942:	20 e0       	ldi	r18, 0x00	; 0
    2944:	30 e0       	ldi	r19, 0x00	; 0
    2946:	40 e2       	ldi	r20, 0x20	; 32
    2948:	51 e4       	ldi	r21, 0x41	; 65
    294a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    294e:	dc 01       	movw	r26, r24
    2950:	cb 01       	movw	r24, r22
    2952:	bc 01       	movw	r22, r24
    2954:	cd 01       	movw	r24, r26
    2956:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    295a:	dc 01       	movw	r26, r24
    295c:	cb 01       	movw	r24, r22
    295e:	9a a3       	std	Y+34, r25	; 0x22
    2960:	89 a3       	std	Y+33, r24	; 0x21
    2962:	0f c0       	rjmp	.+30     	; 0x2982 <main+0x17be>
    2964:	89 e1       	ldi	r24, 0x19	; 25
    2966:	90 e0       	ldi	r25, 0x00	; 0
    2968:	98 a3       	std	Y+32, r25	; 0x20
    296a:	8f 8f       	std	Y+31, r24	; 0x1f
    296c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    296e:	98 a1       	ldd	r25, Y+32	; 0x20
    2970:	01 97       	sbiw	r24, 0x01	; 1
    2972:	f1 f7       	brne	.-4      	; 0x2970 <main+0x17ac>
    2974:	98 a3       	std	Y+32, r25	; 0x20
    2976:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2978:	89 a1       	ldd	r24, Y+33	; 0x21
    297a:	9a a1       	ldd	r25, Y+34	; 0x22
    297c:	01 97       	sbiw	r24, 0x01	; 1
    297e:	9a a3       	std	Y+34, r25	; 0x22
    2980:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2982:	89 a1       	ldd	r24, Y+33	; 0x21
    2984:	9a a1       	ldd	r25, Y+34	; 0x22
    2986:	00 97       	sbiw	r24, 0x00	; 0
    2988:	69 f7       	brne	.-38     	; 0x2964 <main+0x17a0>
    298a:	14 c0       	rjmp	.+40     	; 0x29b4 <main+0x17f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    298c:	6b a1       	ldd	r22, Y+35	; 0x23
    298e:	7c a1       	ldd	r23, Y+36	; 0x24
    2990:	8d a1       	ldd	r24, Y+37	; 0x25
    2992:	9e a1       	ldd	r25, Y+38	; 0x26
    2994:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2998:	dc 01       	movw	r26, r24
    299a:	cb 01       	movw	r24, r22
    299c:	9a a3       	std	Y+34, r25	; 0x22
    299e:	89 a3       	std	Y+33, r24	; 0x21
    29a0:	89 a1       	ldd	r24, Y+33	; 0x21
    29a2:	9a a1       	ldd	r25, Y+34	; 0x22
    29a4:	9e 8f       	std	Y+30, r25	; 0x1e
    29a6:	8d 8f       	std	Y+29, r24	; 0x1d
    29a8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    29aa:	9e 8d       	ldd	r25, Y+30	; 0x1e
    29ac:	01 97       	sbiw	r24, 0x01	; 1
    29ae:	f1 f7       	brne	.-4      	; 0x29ac <main+0x17e8>
    29b0:	9e 8f       	std	Y+30, r25	; 0x1e
    29b2:	8d 8f       	std	Y+29, r24	; 0x1d
				{
					_delay_ms(30);
					if( !(PIND & (1<<PD5)) ) //second check due to switch bouncing
    29b4:	e0 e3       	ldi	r30, 0x30	; 48
    29b6:	f0 e0       	ldi	r31, 0x00	; 0
    29b8:	80 81       	ld	r24, Z
    29ba:	88 2f       	mov	r24, r24
    29bc:	90 e0       	ldi	r25, 0x00	; 0
    29be:	80 72       	andi	r24, 0x20	; 32
    29c0:	90 70       	andi	r25, 0x00	; 0
    29c2:	00 97       	sbiw	r24, 0x00	; 0
    29c4:	09 f0       	breq	.+2      	; 0x29c8 <main+0x1804>
    29c6:	22 c1       	rjmp	.+580    	; 0x2c0c <main+0x1a48>
					{
					    count = 0;
    29c8:	fe 01       	movw	r30, r28
    29ca:	e0 50       	subi	r30, 0x00	; 0
    29cc:	ff 4f       	sbci	r31, 0xFF	; 255
    29ce:	10 82       	st	Z, r1
					    Eta32mini_SevenSegment_Display(count);
    29d0:	fe 01       	movw	r30, r28
    29d2:	e0 50       	subi	r30, 0x00	; 0
    29d4:	ff 4f       	sbci	r31, 0xFF	; 255
    29d6:	80 81       	ld	r24, Z
    29d8:	0e 94 9b 05 	call	0xb36	; 0xb36 <Eta32mini_SevenSegment_Display>
					    LED_BINARY(count);
    29dc:	fe 01       	movw	r30, r28
    29de:	e0 50       	subi	r30, 0x00	; 0
    29e0:	ff 4f       	sbci	r31, 0xFF	; 255
    29e2:	80 81       	ld	r24, Z
    29e4:	0e 94 ed 07 	call	0xfda	; 0xfda <LED_BINARY>
					    enable = 1;
    29e8:	fe 01       	movw	r30, r28
    29ea:	e1 50       	subi	r30, 0x01	; 1
    29ec:	ff 4f       	sbci	r31, 0xFF	; 255
    29ee:	81 e0       	ldi	r24, 0x01	; 1
    29f0:	80 83       	st	Z, r24
					    for(int i=0; i<3; i++){
    29f2:	fe 01       	movw	r30, r28
    29f4:	e3 50       	subi	r30, 0x03	; 3
    29f6:	ff 4f       	sbci	r31, 0xFF	; 255
    29f8:	11 82       	std	Z+1, r1	; 0x01
    29fa:	10 82       	st	Z, r1
    29fc:	fe c0       	rjmp	.+508    	; 0x2bfa <main+0x1a36>
					    	PORTC|=0x07;
    29fe:	a5 e3       	ldi	r26, 0x35	; 53
    2a00:	b0 e0       	ldi	r27, 0x00	; 0
    2a02:	e5 e3       	ldi	r30, 0x35	; 53
    2a04:	f0 e0       	ldi	r31, 0x00	; 0
    2a06:	80 81       	ld	r24, Z
    2a08:	87 60       	ori	r24, 0x07	; 7
    2a0a:	8c 93       	st	X, r24
    2a0c:	80 e0       	ldi	r24, 0x00	; 0
    2a0e:	90 e0       	ldi	r25, 0x00	; 0
    2a10:	af e2       	ldi	r26, 0x2F	; 47
    2a12:	b4 e4       	ldi	r27, 0x44	; 68
    2a14:	89 8f       	std	Y+25, r24	; 0x19
    2a16:	9a 8f       	std	Y+26, r25	; 0x1a
    2a18:	ab 8f       	std	Y+27, r26	; 0x1b
    2a1a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a1c:	69 8d       	ldd	r22, Y+25	; 0x19
    2a1e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2a20:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2a22:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2a24:	20 e0       	ldi	r18, 0x00	; 0
    2a26:	30 e0       	ldi	r19, 0x00	; 0
    2a28:	4a e7       	ldi	r20, 0x7A	; 122
    2a2a:	53 e4       	ldi	r21, 0x43	; 67
    2a2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a30:	dc 01       	movw	r26, r24
    2a32:	cb 01       	movw	r24, r22
    2a34:	8d 8b       	std	Y+21, r24	; 0x15
    2a36:	9e 8b       	std	Y+22, r25	; 0x16
    2a38:	af 8b       	std	Y+23, r26	; 0x17
    2a3a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2a3c:	6d 89       	ldd	r22, Y+21	; 0x15
    2a3e:	7e 89       	ldd	r23, Y+22	; 0x16
    2a40:	8f 89       	ldd	r24, Y+23	; 0x17
    2a42:	98 8d       	ldd	r25, Y+24	; 0x18
    2a44:	20 e0       	ldi	r18, 0x00	; 0
    2a46:	30 e0       	ldi	r19, 0x00	; 0
    2a48:	40 e8       	ldi	r20, 0x80	; 128
    2a4a:	5f e3       	ldi	r21, 0x3F	; 63
    2a4c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a50:	88 23       	and	r24, r24
    2a52:	2c f4       	brge	.+10     	; 0x2a5e <main+0x189a>
		__ticks = 1;
    2a54:	81 e0       	ldi	r24, 0x01	; 1
    2a56:	90 e0       	ldi	r25, 0x00	; 0
    2a58:	9c 8b       	std	Y+20, r25	; 0x14
    2a5a:	8b 8b       	std	Y+19, r24	; 0x13
    2a5c:	3f c0       	rjmp	.+126    	; 0x2adc <main+0x1918>
	else if (__tmp > 65535)
    2a5e:	6d 89       	ldd	r22, Y+21	; 0x15
    2a60:	7e 89       	ldd	r23, Y+22	; 0x16
    2a62:	8f 89       	ldd	r24, Y+23	; 0x17
    2a64:	98 8d       	ldd	r25, Y+24	; 0x18
    2a66:	20 e0       	ldi	r18, 0x00	; 0
    2a68:	3f ef       	ldi	r19, 0xFF	; 255
    2a6a:	4f e7       	ldi	r20, 0x7F	; 127
    2a6c:	57 e4       	ldi	r21, 0x47	; 71
    2a6e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a72:	18 16       	cp	r1, r24
    2a74:	4c f5       	brge	.+82     	; 0x2ac8 <main+0x1904>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a76:	69 8d       	ldd	r22, Y+25	; 0x19
    2a78:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2a7a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2a7c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2a7e:	20 e0       	ldi	r18, 0x00	; 0
    2a80:	30 e0       	ldi	r19, 0x00	; 0
    2a82:	40 e2       	ldi	r20, 0x20	; 32
    2a84:	51 e4       	ldi	r21, 0x41	; 65
    2a86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a8a:	dc 01       	movw	r26, r24
    2a8c:	cb 01       	movw	r24, r22
    2a8e:	bc 01       	movw	r22, r24
    2a90:	cd 01       	movw	r24, r26
    2a92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a96:	dc 01       	movw	r26, r24
    2a98:	cb 01       	movw	r24, r22
    2a9a:	9c 8b       	std	Y+20, r25	; 0x14
    2a9c:	8b 8b       	std	Y+19, r24	; 0x13
    2a9e:	0f c0       	rjmp	.+30     	; 0x2abe <main+0x18fa>
    2aa0:	89 e1       	ldi	r24, 0x19	; 25
    2aa2:	90 e0       	ldi	r25, 0x00	; 0
    2aa4:	9a 8b       	std	Y+18, r25	; 0x12
    2aa6:	89 8b       	std	Y+17, r24	; 0x11
    2aa8:	89 89       	ldd	r24, Y+17	; 0x11
    2aaa:	9a 89       	ldd	r25, Y+18	; 0x12
    2aac:	01 97       	sbiw	r24, 0x01	; 1
    2aae:	f1 f7       	brne	.-4      	; 0x2aac <main+0x18e8>
    2ab0:	9a 8b       	std	Y+18, r25	; 0x12
    2ab2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ab4:	8b 89       	ldd	r24, Y+19	; 0x13
    2ab6:	9c 89       	ldd	r25, Y+20	; 0x14
    2ab8:	01 97       	sbiw	r24, 0x01	; 1
    2aba:	9c 8b       	std	Y+20, r25	; 0x14
    2abc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2abe:	8b 89       	ldd	r24, Y+19	; 0x13
    2ac0:	9c 89       	ldd	r25, Y+20	; 0x14
    2ac2:	00 97       	sbiw	r24, 0x00	; 0
    2ac4:	69 f7       	brne	.-38     	; 0x2aa0 <main+0x18dc>
    2ac6:	14 c0       	rjmp	.+40     	; 0x2af0 <main+0x192c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ac8:	6d 89       	ldd	r22, Y+21	; 0x15
    2aca:	7e 89       	ldd	r23, Y+22	; 0x16
    2acc:	8f 89       	ldd	r24, Y+23	; 0x17
    2ace:	98 8d       	ldd	r25, Y+24	; 0x18
    2ad0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ad4:	dc 01       	movw	r26, r24
    2ad6:	cb 01       	movw	r24, r22
    2ad8:	9c 8b       	std	Y+20, r25	; 0x14
    2ada:	8b 8b       	std	Y+19, r24	; 0x13
    2adc:	8b 89       	ldd	r24, Y+19	; 0x13
    2ade:	9c 89       	ldd	r25, Y+20	; 0x14
    2ae0:	98 8b       	std	Y+16, r25	; 0x10
    2ae2:	8f 87       	std	Y+15, r24	; 0x0f
    2ae4:	8f 85       	ldd	r24, Y+15	; 0x0f
    2ae6:	98 89       	ldd	r25, Y+16	; 0x10
    2ae8:	01 97       	sbiw	r24, 0x01	; 1
    2aea:	f1 f7       	brne	.-4      	; 0x2ae8 <main+0x1924>
    2aec:	98 8b       	std	Y+16, r25	; 0x10
    2aee:	8f 87       	std	Y+15, r24	; 0x0f
					    	_delay_ms(700);
					    	PORTC &=~(0x07);
    2af0:	a5 e3       	ldi	r26, 0x35	; 53
    2af2:	b0 e0       	ldi	r27, 0x00	; 0
    2af4:	e5 e3       	ldi	r30, 0x35	; 53
    2af6:	f0 e0       	ldi	r31, 0x00	; 0
    2af8:	80 81       	ld	r24, Z
    2afa:	88 7f       	andi	r24, 0xF8	; 248
    2afc:	8c 93       	st	X, r24
    2afe:	80 e0       	ldi	r24, 0x00	; 0
    2b00:	90 e0       	ldi	r25, 0x00	; 0
    2b02:	af e2       	ldi	r26, 0x2F	; 47
    2b04:	b4 e4       	ldi	r27, 0x44	; 68
    2b06:	8b 87       	std	Y+11, r24	; 0x0b
    2b08:	9c 87       	std	Y+12, r25	; 0x0c
    2b0a:	ad 87       	std	Y+13, r26	; 0x0d
    2b0c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b0e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b10:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b12:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b14:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b16:	20 e0       	ldi	r18, 0x00	; 0
    2b18:	30 e0       	ldi	r19, 0x00	; 0
    2b1a:	4a e7       	ldi	r20, 0x7A	; 122
    2b1c:	53 e4       	ldi	r21, 0x43	; 67
    2b1e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b22:	dc 01       	movw	r26, r24
    2b24:	cb 01       	movw	r24, r22
    2b26:	8f 83       	std	Y+7, r24	; 0x07
    2b28:	98 87       	std	Y+8, r25	; 0x08
    2b2a:	a9 87       	std	Y+9, r26	; 0x09
    2b2c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2b2e:	6f 81       	ldd	r22, Y+7	; 0x07
    2b30:	78 85       	ldd	r23, Y+8	; 0x08
    2b32:	89 85       	ldd	r24, Y+9	; 0x09
    2b34:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b36:	20 e0       	ldi	r18, 0x00	; 0
    2b38:	30 e0       	ldi	r19, 0x00	; 0
    2b3a:	40 e8       	ldi	r20, 0x80	; 128
    2b3c:	5f e3       	ldi	r21, 0x3F	; 63
    2b3e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b42:	88 23       	and	r24, r24
    2b44:	2c f4       	brge	.+10     	; 0x2b50 <main+0x198c>
		__ticks = 1;
    2b46:	81 e0       	ldi	r24, 0x01	; 1
    2b48:	90 e0       	ldi	r25, 0x00	; 0
    2b4a:	9e 83       	std	Y+6, r25	; 0x06
    2b4c:	8d 83       	std	Y+5, r24	; 0x05
    2b4e:	3f c0       	rjmp	.+126    	; 0x2bce <main+0x1a0a>
	else if (__tmp > 65535)
    2b50:	6f 81       	ldd	r22, Y+7	; 0x07
    2b52:	78 85       	ldd	r23, Y+8	; 0x08
    2b54:	89 85       	ldd	r24, Y+9	; 0x09
    2b56:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b58:	20 e0       	ldi	r18, 0x00	; 0
    2b5a:	3f ef       	ldi	r19, 0xFF	; 255
    2b5c:	4f e7       	ldi	r20, 0x7F	; 127
    2b5e:	57 e4       	ldi	r21, 0x47	; 71
    2b60:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b64:	18 16       	cp	r1, r24
    2b66:	4c f5       	brge	.+82     	; 0x2bba <main+0x19f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b68:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b6a:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b6c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b6e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b70:	20 e0       	ldi	r18, 0x00	; 0
    2b72:	30 e0       	ldi	r19, 0x00	; 0
    2b74:	40 e2       	ldi	r20, 0x20	; 32
    2b76:	51 e4       	ldi	r21, 0x41	; 65
    2b78:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b7c:	dc 01       	movw	r26, r24
    2b7e:	cb 01       	movw	r24, r22
    2b80:	bc 01       	movw	r22, r24
    2b82:	cd 01       	movw	r24, r26
    2b84:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b88:	dc 01       	movw	r26, r24
    2b8a:	cb 01       	movw	r24, r22
    2b8c:	9e 83       	std	Y+6, r25	; 0x06
    2b8e:	8d 83       	std	Y+5, r24	; 0x05
    2b90:	0f c0       	rjmp	.+30     	; 0x2bb0 <main+0x19ec>
    2b92:	89 e1       	ldi	r24, 0x19	; 25
    2b94:	90 e0       	ldi	r25, 0x00	; 0
    2b96:	9c 83       	std	Y+4, r25	; 0x04
    2b98:	8b 83       	std	Y+3, r24	; 0x03
    2b9a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b9c:	9c 81       	ldd	r25, Y+4	; 0x04
    2b9e:	01 97       	sbiw	r24, 0x01	; 1
    2ba0:	f1 f7       	brne	.-4      	; 0x2b9e <main+0x19da>
    2ba2:	9c 83       	std	Y+4, r25	; 0x04
    2ba4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ba6:	8d 81       	ldd	r24, Y+5	; 0x05
    2ba8:	9e 81       	ldd	r25, Y+6	; 0x06
    2baa:	01 97       	sbiw	r24, 0x01	; 1
    2bac:	9e 83       	std	Y+6, r25	; 0x06
    2bae:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bb0:	8d 81       	ldd	r24, Y+5	; 0x05
    2bb2:	9e 81       	ldd	r25, Y+6	; 0x06
    2bb4:	00 97       	sbiw	r24, 0x00	; 0
    2bb6:	69 f7       	brne	.-38     	; 0x2b92 <main+0x19ce>
    2bb8:	14 c0       	rjmp	.+40     	; 0x2be2 <main+0x1a1e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bba:	6f 81       	ldd	r22, Y+7	; 0x07
    2bbc:	78 85       	ldd	r23, Y+8	; 0x08
    2bbe:	89 85       	ldd	r24, Y+9	; 0x09
    2bc0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2bc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bc6:	dc 01       	movw	r26, r24
    2bc8:	cb 01       	movw	r24, r22
    2bca:	9e 83       	std	Y+6, r25	; 0x06
    2bcc:	8d 83       	std	Y+5, r24	; 0x05
    2bce:	8d 81       	ldd	r24, Y+5	; 0x05
    2bd0:	9e 81       	ldd	r25, Y+6	; 0x06
    2bd2:	9a 83       	std	Y+2, r25	; 0x02
    2bd4:	89 83       	std	Y+1, r24	; 0x01
    2bd6:	89 81       	ldd	r24, Y+1	; 0x01
    2bd8:	9a 81       	ldd	r25, Y+2	; 0x02
    2bda:	01 97       	sbiw	r24, 0x01	; 1
    2bdc:	f1 f7       	brne	.-4      	; 0x2bda <main+0x1a16>
    2bde:	9a 83       	std	Y+2, r25	; 0x02
    2be0:	89 83       	std	Y+1, r24	; 0x01
					{
					    count = 0;
					    Eta32mini_SevenSegment_Display(count);
					    LED_BINARY(count);
					    enable = 1;
					    for(int i=0; i<3; i++){
    2be2:	de 01       	movw	r26, r28
    2be4:	a3 50       	subi	r26, 0x03	; 3
    2be6:	bf 4f       	sbci	r27, 0xFF	; 255
    2be8:	fe 01       	movw	r30, r28
    2bea:	e3 50       	subi	r30, 0x03	; 3
    2bec:	ff 4f       	sbci	r31, 0xFF	; 255
    2bee:	80 81       	ld	r24, Z
    2bf0:	91 81       	ldd	r25, Z+1	; 0x01
    2bf2:	01 96       	adiw	r24, 0x01	; 1
    2bf4:	11 96       	adiw	r26, 0x01	; 1
    2bf6:	9c 93       	st	X, r25
    2bf8:	8e 93       	st	-X, r24
    2bfa:	fe 01       	movw	r30, r28
    2bfc:	e3 50       	subi	r30, 0x03	; 3
    2bfe:	ff 4f       	sbci	r31, 0xFF	; 255
    2c00:	80 81       	ld	r24, Z
    2c02:	91 81       	ldd	r25, Z+1	; 0x01
    2c04:	83 30       	cpi	r24, 0x03	; 3
    2c06:	91 05       	cpc	r25, r1
    2c08:	0c f4       	brge	.+2      	; 0x2c0c <main+0x1a48>
    2c0a:	f9 ce       	rjmp	.-526    	; 0x29fe <main+0x183a>
					    	PORTC &=~(0x07);
					    	_delay_ms(700);
					    }

					}
					while( !(PIND & (1<<PD5)) ){} // wait until switch is released
    2c0c:	e0 e3       	ldi	r30, 0x30	; 48
    2c0e:	f0 e0       	ldi	r31, 0x00	; 0
    2c10:	80 81       	ld	r24, Z
    2c12:	88 2f       	mov	r24, r24
    2c14:	90 e0       	ldi	r25, 0x00	; 0
    2c16:	80 72       	andi	r24, 0x20	; 32
    2c18:	90 70       	andi	r25, 0x00	; 0
    2c1a:	00 97       	sbiw	r24, 0x00	; 0
    2c1c:	b9 f3       	breq	.-18     	; 0x2c0c <main+0x1a48>
    2c1e:	0c 94 36 09 	jmp	0x126c	; 0x126c <main+0xa8>

00002c22 <__prologue_saves__>:
    2c22:	2f 92       	push	r2
    2c24:	3f 92       	push	r3
    2c26:	4f 92       	push	r4
    2c28:	5f 92       	push	r5
    2c2a:	6f 92       	push	r6
    2c2c:	7f 92       	push	r7
    2c2e:	8f 92       	push	r8
    2c30:	9f 92       	push	r9
    2c32:	af 92       	push	r10
    2c34:	bf 92       	push	r11
    2c36:	cf 92       	push	r12
    2c38:	df 92       	push	r13
    2c3a:	ef 92       	push	r14
    2c3c:	ff 92       	push	r15
    2c3e:	0f 93       	push	r16
    2c40:	1f 93       	push	r17
    2c42:	cf 93       	push	r28
    2c44:	df 93       	push	r29
    2c46:	cd b7       	in	r28, 0x3d	; 61
    2c48:	de b7       	in	r29, 0x3e	; 62
    2c4a:	ca 1b       	sub	r28, r26
    2c4c:	db 0b       	sbc	r29, r27
    2c4e:	0f b6       	in	r0, 0x3f	; 63
    2c50:	f8 94       	cli
    2c52:	de bf       	out	0x3e, r29	; 62
    2c54:	0f be       	out	0x3f, r0	; 63
    2c56:	cd bf       	out	0x3d, r28	; 61
    2c58:	09 94       	ijmp

00002c5a <__epilogue_restores__>:
    2c5a:	2a 88       	ldd	r2, Y+18	; 0x12
    2c5c:	39 88       	ldd	r3, Y+17	; 0x11
    2c5e:	48 88       	ldd	r4, Y+16	; 0x10
    2c60:	5f 84       	ldd	r5, Y+15	; 0x0f
    2c62:	6e 84       	ldd	r6, Y+14	; 0x0e
    2c64:	7d 84       	ldd	r7, Y+13	; 0x0d
    2c66:	8c 84       	ldd	r8, Y+12	; 0x0c
    2c68:	9b 84       	ldd	r9, Y+11	; 0x0b
    2c6a:	aa 84       	ldd	r10, Y+10	; 0x0a
    2c6c:	b9 84       	ldd	r11, Y+9	; 0x09
    2c6e:	c8 84       	ldd	r12, Y+8	; 0x08
    2c70:	df 80       	ldd	r13, Y+7	; 0x07
    2c72:	ee 80       	ldd	r14, Y+6	; 0x06
    2c74:	fd 80       	ldd	r15, Y+5	; 0x05
    2c76:	0c 81       	ldd	r16, Y+4	; 0x04
    2c78:	1b 81       	ldd	r17, Y+3	; 0x03
    2c7a:	aa 81       	ldd	r26, Y+2	; 0x02
    2c7c:	b9 81       	ldd	r27, Y+1	; 0x01
    2c7e:	ce 0f       	add	r28, r30
    2c80:	d1 1d       	adc	r29, r1
    2c82:	0f b6       	in	r0, 0x3f	; 63
    2c84:	f8 94       	cli
    2c86:	de bf       	out	0x3e, r29	; 62
    2c88:	0f be       	out	0x3f, r0	; 63
    2c8a:	cd bf       	out	0x3d, r28	; 61
    2c8c:	ed 01       	movw	r28, r26
    2c8e:	08 95       	ret

00002c90 <_exit>:
    2c90:	f8 94       	cli

00002c92 <__stop_program>:
    2c92:	ff cf       	rjmp	.-2      	; 0x2c92 <__stop_program>
